!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.recogito=e():(t.recogito=t.recogito||{},t.recogito.FirebaseStorage=e())}(self,(function(){return(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{default:()=>n});const n=function(t,e,n){var o=n.collectionName||"annotations",r=n.annotationTarget;firebase.initializeApp(e);var i=firebase.firestore(),c=function(t){return i.collection(o).where("id","==",t).get().then((function(t){return t.docs[0]}))};i.collection(o).where("target.source","==",r).get().then((function(e){var n=e.docs.map((function(t){return t.data()}));t.setAnnotations(n)})),t.on("createAnnotation",(function(t){i.collection(o).add(t).catch((function(e){return console.error("Error storing annotation",e,t)}))})),t.on("updateAnnotation",(function(t,e){c(e.id).then((function(e){return e.ref.update(t)})).catch((function(n){return console.log("Error updating annotation",n,e,t)}))})),t.on("deleteAnnotation",(function(t){c(t.id).then((function(t){return t.ref.delete()})).catch((function(e){return console.log("Error deleting annotation",e,t)}))}))};return e.default})()}));