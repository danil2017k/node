[{"C:\\Users\\Danil\\Desktop\\122\\src\\main.js":"1","C:\\Users\\Danil\\Desktop\\122\\src\\locales\\ru.js":"2","C:\\Users\\Danil\\Desktop\\122\\src\\App.vue":"3","C:\\Users\\Danil\\Desktop\\122\\src\\locales\\index.js":"4","C:\\Users\\Danil\\Desktop\\122\\src\\router\\index.js":"5","C:\\Users\\Danil\\Desktop\\122\\src\\store\\index.js":"6","C:\\Users\\Danil\\Desktop\\122\\src\\views\\AboutView.vue":"7","C:\\Users\\Danil\\Desktop\\122\\src\\views\\ViewerView.vue":"8","C:\\Users\\Danil\\Desktop\\122\\src\\locales\\en.js":"9","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\index.js":"10","C:\\Users\\Danil\\Desktop\\122\\src\\store\\state\\index.js":"11","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\index.js":"12","C:\\Users\\Danil\\Desktop\\122\\src\\store\\getters\\index.js":"13","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\account.js":"14","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\cases.js":"15","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\common.js":"16","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\relatedFind.js":"17","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\clinician-view.js":"18","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\team-manager.js":"19","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\search.js":"20","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\resources.js":"21","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\diagnosis.js":"22","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\snapshot.js":"23","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\account.js":"24","C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\logs.js":"25","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\cases.js":"26","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\files.js":"27","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\viewer.js":"28","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\snapshot.js":"29","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\team-manager.js":"30","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\search.js":"31","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\common.js":"32","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\diagnosis.js":"33","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\logs.js":"34","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\relatedFind.js":"35","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\clinician-view.js":"36","C:\\Users\\Danil\\Desktop\\122\\src\\components\\ViewerOverlay.vue":"37","C:\\Users\\Danil\\Desktop\\122\\src\\api.js":"38","C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\available.js":"39","C:\\Users\\Danil\\Desktop\\122\\src\\dictionaries\\availableCaseStatuses.js":"40","C:\\Users\\Danil\\Desktop\\122\\src\\utils\\mqtt.js":"41","C:\\Users\\Danil\\Desktop\\122\\src\\utils\\index.js":"42","C:\\Users\\Danil\\Desktop\\122\\src\\components\\ImageViewer.vue":"43","C:\\Users\\Danil\\Desktop\\122\\src\\components\\FilesScroll.vue":"44","C:\\Users\\Danil\\Desktop\\122\\src\\components\\Note.vue":"45","C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedModal.vue":"46","C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedMenu.vue":"47","C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedDraw.vue":"48","C:\\Users\\Danil\\Desktop\\122\\src\\dictionaries\\viewer.js":"49","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-svg-overlay.js":"50","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragonselection.js":"51","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\shape.js":"52","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\annotorious-toolbar.js":"53","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-scalebar.js":"54","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-filtering.js":"55","C:\\Users\\Danil\\Desktop\\122\\src\\libs\\annotorious-selector-pack.js":"56"},{"size":8870,"mtime":1664878979071,"results":"57","hashOfConfig":"58"},{"size":43586,"mtime":1664878979070,"results":"59","hashOfConfig":"58"},{"size":775,"mtime":1664878970694,"results":"60","hashOfConfig":"58"},{"size":337,"mtime":1664878979069,"results":"61","hashOfConfig":"58"},{"size":2028,"mtime":1664878979071,"results":"62","hashOfConfig":"58"},{"size":362,"mtime":1664878979078,"results":"63","hashOfConfig":"58"},{"size":94,"mtime":1664878979087,"results":"64","hashOfConfig":"58"},{"size":8511,"mtime":1664878979088,"results":"65","hashOfConfig":"58"},{"size":29368,"mtime":1664878979068,"results":"66","hashOfConfig":"58"},{"size":757,"mtime":1664878979075,"results":"67","hashOfConfig":"58"},{"size":4142,"mtime":1664878979085,"results":"68","hashOfConfig":"58"},{"size":826,"mtime":1664878979082,"results":"69","hashOfConfig":"58"},{"size":1097,"mtime":1664878979078,"results":"70","hashOfConfig":"58"},{"size":3848,"mtime":1664878979072,"results":"71","hashOfConfig":"58"},{"size":36576,"mtime":1664878979072,"results":"72","hashOfConfig":"58"},{"size":7025,"mtime":1664878979073,"results":"73","hashOfConfig":"58"},{"size":268,"mtime":1664878979076,"results":"74","hashOfConfig":"58"},{"size":1774,"mtime":1664878979073,"results":"75","hashOfConfig":"58"},{"size":10633,"mtime":1664878979077,"results":"76","hashOfConfig":"58"},{"size":3116,"mtime":1664878979076,"results":"77","hashOfConfig":"58"},{"size":1372,"mtime":1664878979076,"results":"78","hashOfConfig":"58"},{"size":3883,"mtime":1664878979074,"results":"79","hashOfConfig":"58"},{"size":1976,"mtime":1664878979077,"results":"80","hashOfConfig":"58"},{"size":510,"mtime":1664878979079,"results":"81","hashOfConfig":"58"},{"size":495,"mtime":1664878979075,"results":"82","hashOfConfig":"58"},{"size":6577,"mtime":1664878979080,"results":"83","hashOfConfig":"58"},{"size":3728,"mtime":1664878979082,"results":"84","hashOfConfig":"58"},{"size":3290,"mtime":1664878979085,"results":"85","hashOfConfig":"58"},{"size":971,"mtime":1664878979084,"results":"86","hashOfConfig":"58"},{"size":4472,"mtime":1664878979084,"results":"87","hashOfConfig":"58"},{"size":1887,"mtime":1664878979083,"results":"88","hashOfConfig":"58"},{"size":2591,"mtime":1664878979081,"results":"89","hashOfConfig":"58"},{"size":10926,"mtime":1664878979081,"results":"90","hashOfConfig":"58"},{"size":317,"mtime":1664878979083,"results":"91","hashOfConfig":"58"},{"size":176,"mtime":1664878979083,"results":"92","hashOfConfig":"58"},{"size":1412,"mtime":1664878979080,"results":"93","hashOfConfig":"58"},{"size":12238,"mtime":1664878979046,"results":"94","hashOfConfig":"58"},{"size":7138,"mtime":1664878970694,"results":"95","hashOfConfig":"58"},{"size":3630,"mtime":1664878979079,"results":"96","hashOfConfig":"58"},{"size":485,"mtime":1664878979046,"results":"97","hashOfConfig":"58"},{"size":1284,"mtime":1664878979086,"results":"98","hashOfConfig":"58"},{"size":2567,"mtime":1664878979086,"results":"99","hashOfConfig":"58"},{"size":202261,"mtime":1664882576044,"results":"100","hashOfConfig":"58"},{"size":8346,"mtime":1664878979039,"results":"101","hashOfConfig":"58"},{"size":18006,"mtime":1664878979044,"results":"102","hashOfConfig":"58"},{"size":4718,"mtime":1664878979041,"results":"103","hashOfConfig":"58"},{"size":3642,"mtime":1664878979041,"results":"104","hashOfConfig":"58"},{"size":7051,"mtime":1664878979040,"results":"105","hashOfConfig":"58"},{"size":318,"mtime":1664878979047,"results":"106","hashOfConfig":"58"},{"size":3143,"mtime":1664878979058,"results":"107","hashOfConfig":"58"},{"size":25354,"mtime":1664878979067,"results":"108","hashOfConfig":"58"},{"size":1078,"mtime":1664878979067,"results":"109","hashOfConfig":"58"},{"size":9642,"mtime":1664878979051,"results":"110","hashOfConfig":"58"},{"size":23446,"mtime":1664878979057,"results":"111","hashOfConfig":"58"},{"size":19877,"mtime":1664878979056,"results":"112","hashOfConfig":"58"},{"size":240094,"mtime":1664878979049,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ybpmo",{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":41,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":41,"fixableWarningCount":0,"source":"226"},"C:\\Users\\Danil\\Desktop\\122\\src\\main.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\locales\\ru.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\App.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\locales\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\router\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\views\\AboutView.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\views\\ViewerView.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\locales\\en.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\state\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\getters\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\account.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\cases.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\common.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\relatedFind.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\clinician-view.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\team-manager.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\search.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\resources.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\diagnosis.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\snapshot.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\account.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\action\\logs.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\cases.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\files.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\viewer.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\snapshot.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\team-manager.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\search.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\common.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\diagnosis.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\logs.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\relatedFind.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\clinician-view.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\ViewerOverlay.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\api.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\store\\mutations\\available.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\dictionaries\\availableCaseStatuses.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\utils\\mqtt.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\utils\\index.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\ImageViewer.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\FilesScroll.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\Note.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedModal.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedMenu.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\components\\FindRelatedDraw.vue",[],"C:\\Users\\Danil\\Desktop\\122\\src\\dictionaries\\viewer.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-svg-overlay.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragonselection.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\shape.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\annotorious-toolbar.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-scalebar.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\openseadragon-filtering.js",[],"C:\\Users\\Danil\\Desktop\\122\\src\\libs\\annotorious-selector-pack.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"Annotorious\"] = factory();\r\n\telse\r\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\r\n})(self, () => {\r\nreturn /******/ (() => { // webpackBootstrap\r\n/******/ \tvar __webpack_modules__ = ({\r\n\r\n/***/ 94:\r\n/*!***********************************************!*\\\r\n  !*** ./node_modules/fast-deep-equal/index.js ***!\r\n  \\***********************************************/\r\n/***/ ((module) => {\r\n\r\n\"use strict\";\r\n // do not edit .js files directly - edit src/index.jst\r\n\r\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nmodule.exports = function equal(a, b) {\r\n  if (a === b) return true;\r\n\r\n  if (a && b && _typeof(a) == 'object' && _typeof(b) == 'object') {\r\n    if (a.constructor !== b.constructor) return false;\r\n    var length, i, keys;\r\n\r\n    if (Array.isArray(a)) {\r\n      length = a.length;\r\n      if (length != b.length) return false;\r\n\r\n      for (i = length; i-- !== 0;) {\r\n        if (!equal(a[i], b[i])) return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\r\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\r\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\r\n    keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length) return false;\r\n\r\n    for (i = length; i-- !== 0;) {\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n    }\r\n\r\n    for (i = length; i-- !== 0;) {\r\n      var key = keys[i];\r\n      if (!equal(a[key], b[key])) return false;\r\n    }\r\n\r\n    return true;\r\n  } // true if both NaN, false otherwise\r\n\r\n\r\n  return a !== a && b !== b;\r\n};\r\n\r\n/***/ }),\r\n\r\n/***/ 773:\r\n/*!********************************************!*\\\r\n  !*** ./node_modules/tiny-emitter/index.js ***!\r\n  \\********************************************/\r\n/***/ ((module) => {\r\n\r\nfunction E() {// Keep this empty so it's easier to inherit from\r\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\r\n}\r\n\r\nE.prototype = {\r\n  on: function on(name, callback, ctx) {\r\n    var e = this.e || (this.e = {});\r\n    (e[name] || (e[name] = [])).push({\r\n      fn: callback,\r\n      ctx: ctx\r\n    });\r\n    return this;\r\n  },\r\n  once: function once(name, callback, ctx) {\r\n    var self = this;\r\n\r\n    function listener() {\r\n      self.off(name, listener);\r\n      callback.apply(ctx, arguments);\r\n    }\r\n\r\n    ;\r\n    listener._ = callback;\r\n    return this.on(name, listener, ctx);\r\n  },\r\n  emit: function emit(name) {\r\n    var data = [].slice.call(arguments, 1);\r\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\r\n    var i = 0;\r\n    var len = evtArr.length;\r\n\r\n    for (i; i < len; i++) {\r\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  off: function off(name, callback) {\r\n    var e = this.e || (this.e = {});\r\n    var evts = e[name];\r\n    var liveEvents = [];\r\n\r\n    if (evts && callback) {\r\n      for (var i = 0, len = evts.length; i < len; i++) {\r\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback) liveEvents.push(evts[i]);\r\n      }\r\n    } // Remove event from queue to prevent memory leak\r\n    // Suggested by https://github.com/lazd\r\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\r\n\r\n\r\n    liveEvents.length ? e[name] = liveEvents : delete e[name];\r\n    return this;\r\n  }\r\n};\r\nmodule.exports = E;\r\nmodule.exports.TinyEmitter = E;\r\n\r\n/***/ })\r\n\r\n/******/ \t});\r\n/************************************************************************/\r\n/******/ \t// The module cache\r\n/******/ \tvar __webpack_module_cache__ = {};\r\n/******/ \t\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\r\n/******/ \t\tif (cachedModule !== undefined) {\r\n/******/ \t\t\treturn cachedModule.exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\r\n/******/ \t\t\t// no module.id needed\r\n/******/ \t\t\t// no module.loaded needed\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/ \t\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\r\n/******/ \t\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t/* webpack/runtime/compat get default export */\r\n/******/ \t(() => {\r\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t\t__webpack_require__.n = (module) => {\r\n/******/ \t\t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\t\t() => (module['default']) :\r\n/******/ \t\t\t\t() => (module);\r\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\r\n/******/ \t\t\treturn getter;\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/define property getters */\r\n/******/ \t(() => {\r\n/******/ \t\t// define getter functions for harmony exports\r\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\r\n/******/ \t\t\tfor(var key in definition) {\r\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ \t(() => {\r\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\r\n/******/ \t})();\r\n/******/ \t\r\n/************************************************************************/\r\nvar __webpack_exports__ = {};\r\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\r\n(() => {\r\n\"use strict\";\r\n/*!***********************************!*\\\r\n  !*** ./src/index.js + 38 modules ***!\r\n  \\***********************************/\r\n\r\n// EXPORTS\r\n__webpack_require__.d(__webpack_exports__, {\r\n  \"default\": () => (/* binding */ src)\r\n});\r\n\r\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\r\nvar tiny_emitter = __webpack_require__(773);\r\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/Touch.js\r\nvar SIM_EVENTS = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup'\r\n};\r\nvar isTouchDevice = function isTouchDevice() {\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n};\r\nvar enableTouchTranslation = function enableTouchTranslation(el) {\r\n  var pressAndHoldTrigger = null;\r\n\r\n  var simulateEvent = function simulateEvent(type, e) {\r\n    return new MouseEvent(type, {\r\n      screenX: e.screenX,\r\n      screenY: e.screenY,\r\n      clientX: e.clientX,\r\n      clientY: e.clientY,\r\n      pageX: e.pageX,\r\n      pageY: e.pageY,\r\n      bubbles: true\r\n    });\r\n  };\r\n\r\n  var touchHandler = function touchHandler(evt) {\r\n    var touch = evt.changedTouches[0];\r\n    var simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\r\n    touch.target.dispatchEvent(simulatedEvent);\r\n    evt.preventDefault();\r\n\r\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\r\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\r\n      pressAndHoldTrigger = setTimeout(function () {\r\n        var simulatedEvent = simulateEvent('dblclick', touch);\r\n        touch.target.dispatchEvent(simulatedEvent);\r\n      }, 800);\r\n    }\r\n\r\n    if (evt.type === 'touchend') pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\r\n  };\r\n\r\n  el.addEventListener('touchstart', touchHandler, true);\r\n  el.addEventListener('touchmove', touchHandler, true);\r\n  el.addEventListener('touchend', touchHandler, true);\r\n  el.addEventListener('touchcancel', touchHandler, true);\r\n};\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/SVG.js\r\nvar SVG_SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n\r\nvar getClassNames = function getClassNames(el) {\r\n  var attr = el.getAttribute('class');\r\n  return attr ? new Set(attr.split(' ')) : new Set();\r\n}; // IE11 doesn't support adding/removing classes to SVG elements except \r\n// via .setAttribute\r\n\r\n\r\nvar SVG_addClass = function addClass(el, className) {\r\n  var classNames = getClassNames(el);\r\n  classNames.add(className);\r\n  el.setAttribute('class', Array.from(classNames).join(' '));\r\n};\r\nvar removeClass = function removeClass(el, className) {\r\n  var classNames = getClassNames(el);\r\n  classNames[\"delete\"](className);\r\n  if (classNames.size === 0) el.removeAttribute('class');else el.setAttribute('class', Array.from(classNames).join(' '));\r\n};\r\nvar hasClass = function hasClass(el, className) {\r\n  return getClassNames(el).has(className);\r\n};\r\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\r\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\r\n// require the crypto API and do not support built-in fallback to lower quality random number\r\n// generators (like Math.random()).\r\nvar getRandomValues;\r\nvar rnds8 = new Uint8Array(16);\r\nfunction rng() {\r\n  // lazy load so that environments that need to polyfill have a chance to do so\r\n  if (!getRandomValues) {\r\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\r\n    // find the complete implementation of crypto (msCrypto) on IE11.\r\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\r\n\r\n    if (!getRandomValues) {\r\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\r\n    }\r\n  }\r\n\r\n  return getRandomValues(rnds8);\r\n}\r\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\r\n/* harmony default export */ const regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\r\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\r\n\r\n\r\nfunction validate(uuid) {\r\n  return typeof uuid === 'string' && regex.test(uuid);\r\n}\r\n\r\n/* harmony default export */ const esm_browser_validate = (validate);\r\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\r\n\r\n/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\n\r\nvar byteToHex = [];\r\n\r\nfor (var i = 0; i < 256; ++i) {\r\n  byteToHex.push((i + 0x100).toString(16).substr(1));\r\n}\r\n\r\nfunction stringify(arr) {\r\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\r\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\r\n\r\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\r\n  // of the following:\r\n  // - One or more input array values don't map to a hex octet (leading to\r\n  // \"undefined\" in the uuid)\r\n  // - Invalid input values for the RFC `version` or `variant` fields\r\n\r\n  if (!esm_browser_validate(uuid)) {\r\n    throw TypeError('Stringified UUID is invalid');\r\n  }\r\n\r\n  return uuid;\r\n}\r\n\r\n/* harmony default export */ const esm_browser_stringify = (stringify);\r\n;// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\r\n\r\n\r\n\r\nfunction v4(options, buf, offset) {\r\n  options = options || {};\r\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n\r\n  rnds[6] = rnds[6] & 0x0f | 0x40;\r\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\r\n\r\n  if (buf) {\r\n    offset = offset || 0;\r\n\r\n    for (var i = 0; i < 16; ++i) {\r\n      buf[offset + i] = rnds[i];\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  return esm_browser_stringify(rnds);\r\n}\r\n\r\n/* harmony default export */ const esm_browser_v4 = (v4);\r\n// EXTERNAL MODULE: ./node_modules/fast-deep-equal/index.js\r\nvar fast_deep_equal = __webpack_require__(94);\r\nvar fast_deep_equal_default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal);\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\nvar WebAnnotation = /*#__PURE__*/function () {\r\n  function WebAnnotation(annotation, opts) {\r\n    var _this = this;\r\n\r\n    _classCallCheck(this, WebAnnotation);\r\n\r\n    _defineProperty(this, \"clone\", function (opt_props, opt_opts) {\r\n      return new WebAnnotation(_objectSpread(_objectSpread({}, _this.underlying), opt_props), _objectSpread(_objectSpread({}, _this.opts), opt_opts));\r\n    });\r\n\r\n    _defineProperty(this, \"selector\", function (type) {\r\n      var target = _this.underlying.target;\r\n\r\n      if (target.selector) {\r\n        // Normalize to array\r\n        var selectors = Array.isArray(target.selector) ? target.selector : [target.selector];\r\n        return selectors.find(function (s) {\r\n          return s.type === type;\r\n        });\r\n      }\r\n    });\r\n\r\n    this.underlying = annotation;\r\n    this.opts = opts;\r\n  }\r\n  /** For convenience - creates an empty web annotation **/\r\n\r\n\r\n  _createClass(WebAnnotation, [{\r\n    key: \"isEqual\",\r\n    value:\r\n    /** An equality check based on the underlying object **/\r\n    function isEqual(other) {\r\n      if ((other === null || other === void 0 ? void 0 : other.type) !== 'Annotation') {\r\n        return false;\r\n      } else if (this.underlying === other.underlying) {\r\n        return true;\r\n      } else if (!this.underlying.id || !other.underlying.id) {\r\n        return false;\r\n      } else {\r\n        return fast_deep_equal_default()(this.underlying, other.underlying);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"readOnly\",\r\n    get: function get() {\r\n      var _this$opts;\r\n\r\n      return (_this$opts = this.opts) === null || _this$opts === void 0 ? void 0 : _this$opts.readOnly;\r\n    }\r\n    /*************************************/\r\n\r\n    /* Getters to forward properties of  */\r\n\r\n    /* the underlying annotation         */\r\n\r\n    /*************************************/\r\n\r\n  }, {\r\n    key: \"id\",\r\n    get: function get() {\r\n      return this.underlying.id;\r\n    }\r\n  }, {\r\n    key: \"context\",\r\n    get: function get() {\r\n      return this.underlying['@context'];\r\n    }\r\n  }, {\r\n    key: \"type\",\r\n    get: function get() {\r\n      return this.underlying.type;\r\n    }\r\n  }, {\r\n    key: \"motivation\",\r\n    get: function get() {\r\n      return this.underlying.motivation;\r\n    }\r\n  }, {\r\n    key: \"body\",\r\n    get: function get() {\r\n      return this.underlying.body;\r\n    }\r\n  }, {\r\n    key: \"target\",\r\n    get: function get() {\r\n      return this.underlying.target;\r\n    }\r\n    /** Same as .body, but guaranteed to return an array **/\r\n\r\n  }, {\r\n    key: \"bodies\",\r\n    get: function get() {\r\n      return Array.isArray(this.underlying.body) ? this.underlying.body : [this.underlying.body];\r\n    }\r\n    /** Only bodies are meant to be mutated by the application **/\r\n    ,\r\n    set: function set(bodies) {\r\n      this.underlying.body = bodies;\r\n    }\r\n    /** Same as .target, but guaranteed to return an array **/\r\n\r\n  }, {\r\n    key: \"targets\",\r\n    get: function get() {\r\n      return Array.isArray(this.underlying.target) ? this.underlying.target : [this.underlying.target];\r\n    }\r\n    /*****************************************/\r\n\r\n    /* Various access helpers and shorthands */\r\n\r\n    /*****************************************/\r\n\r\n    /** Selector of the given type **/\r\n\r\n  }, {\r\n    key: \"quote\",\r\n    get:\r\n    /** Shorthand for the 'exact' field of the TextQuoteSelector **/\r\n    function get() {\r\n      var _this$selector;\r\n\r\n      return (_this$selector = this.selector('TextQuoteSelector')) === null || _this$selector === void 0 ? void 0 : _this$selector.exact;\r\n    }\r\n    /** Shorthand for the 'start' field of the TextPositionSelector **/\r\n\r\n  }, {\r\n    key: \"start\",\r\n    get: function get() {\r\n      var _this$selector2;\r\n\r\n      return (_this$selector2 = this.selector('TextPositionSelector')) === null || _this$selector2 === void 0 ? void 0 : _this$selector2.start;\r\n    }\r\n    /** Shorthand for the 'end' field of the TextPositionSelector **/\r\n\r\n  }, {\r\n    key: \"end\",\r\n    get: function get() {\r\n      var _this$selector3;\r\n\r\n      return (_this$selector3 = this.selector('TextPositionSelector')) === null || _this$selector3 === void 0 ? void 0 : _this$selector3.end;\r\n    }\r\n  }]);\r\n\r\n  return WebAnnotation;\r\n}();\r\n\r\n_defineProperty(WebAnnotation, \"create\", function (args) {\r\n  var stub = {\r\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\r\n    'type': 'Annotation',\r\n    'id': \"#\".concat(esm_browser_v4()),\r\n    'body': []\r\n  };\r\n  return new WebAnnotation(_objectSpread(_objectSpread({}, stub), args));\r\n});\r\n\r\n\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/recogito-client-core/src/Selection.js\r\nfunction Selection_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction Selection_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? Selection_ownKeys(Object(source), !0).forEach(function (key) { Selection_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : Selection_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction Selection_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction Selection_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction Selection_createClass(Constructor, protoProps, staticProps) { if (protoProps) Selection_defineProperties(Constructor.prototype, protoProps); if (staticProps) Selection_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction Selection_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * An \"annotation in draft mode\". Really the same\r\n * data structure, but as a separate class so we can\r\n * tell things apart properly.\r\n */\r\n\r\nvar Selection = /*#__PURE__*/function () {\r\n  function Selection(_target, body) {\r\n    var _this = this;\r\n\r\n    Selection_classCallCheck(this, Selection);\r\n\r\n    Selection_defineProperty(this, \"clone\", function (opt_props) {\r\n      // Deep-clone\r\n      var cloned = new Selection();\r\n      cloned.underlying = JSON.parse(JSON.stringify(_this.underlying));\r\n      if (opt_props) cloned.underlying = Selection_objectSpread(Selection_objectSpread({}, cloned.underlying), opt_props);\r\n      return cloned;\r\n    });\r\n\r\n    Selection_defineProperty(this, \"selector\", function (type) {\r\n      var target = _this.underlying.target;\r\n\r\n      if (target.selector) {\r\n        // Normalize to array\r\n        var selectors = Array.isArray(target.selector) ? target.selector : [target.selector];\r\n        return selectors.find(function (s) {\r\n          return s.type === type;\r\n        });\r\n      }\r\n    });\r\n\r\n    Selection_defineProperty(this, \"toAnnotation\", function () {\r\n      var a = Object.assign({}, _this.underlying, {\r\n        'type': 'Annotation',\r\n        'id': \"#\".concat(esm_browser_v4())\r\n      });\r\n      return new WebAnnotation(a);\r\n    });\r\n\r\n    this.underlying = {\r\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\r\n      type: 'Selection',\r\n      body: body || [],\r\n      target: _target\r\n    };\r\n  }\r\n  /** Creates a copy of this selection **/\r\n\r\n\r\n  Selection_createClass(Selection, [{\r\n    key: \"context\",\r\n    get: function get() {\r\n      return this.underlying['@context'];\r\n    }\r\n  }, {\r\n    key: \"type\",\r\n    get: function get() {\r\n      return this.underlying.type;\r\n    }\r\n  }, {\r\n    key: \"body\",\r\n    get: function get() {\r\n      return this.underlying.body;\r\n    }\r\n  }, {\r\n    key: \"target\",\r\n    get: function get() {\r\n      return this.underlying.target;\r\n    }\r\n  }, {\r\n    key: \"targets\",\r\n    get: function get() {\r\n      return Array.isArray(this.underlying.target) ? this.underlying.target : [this.underlying.target];\r\n    }\r\n    /** For consistency with WebAnnotation **/\r\n\r\n  }, {\r\n    key: \"isEqual\",\r\n    value: function isEqual(other) {\r\n      if (!other) {\r\n        return false;\r\n      } else {\r\n        return fast_deep_equal_default()(this.underlying, other.underlying);\r\n      }\r\n    }\r\n  }, {\r\n    key: \"bodies\",\r\n    get: function get() {\r\n      return Array.isArray(this.underlying.body) ? this.underlying.body : [this.underlying.body];\r\n    }\r\n  }, {\r\n    key: \"quote\",\r\n    get:\r\n    /** Shorthand for the 'exact' field of the TextQuoteSelector **/\r\n    function get() {\r\n      var _this$selector;\r\n\r\n      return (_this$selector = this.selector('TextQuoteSelector')) === null || _this$selector === void 0 ? void 0 : _this$selector.exact;\r\n    }\r\n    /*******************************************/\r\n\r\n    /* Selection-specific properties & methods */\r\n\r\n    /*******************************************/\r\n\r\n  }, {\r\n    key: \"isSelection\",\r\n    get: function get() {\r\n      return true;\r\n    }\r\n  }]);\r\n\r\n  return Selection;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/Tool.js\r\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction Tool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction Tool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction Tool_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tool_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\r\n\r\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\r\n\r\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\r\n\r\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\r\n\r\nfunction Tool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\nvar IMPLEMENTATION_MISSING = \"An implementation is missing\";\r\nvar isTouch = isTouchDevice();\r\n/**\r\n * A commmon base class for Tools and EditableShapes\r\n */\r\n\r\nvar ToolLike = /*#__PURE__*/function (_EventEmitter) {\r\n  _inherits(ToolLike, _EventEmitter);\r\n\r\n  var _super = _createSuper(ToolLike);\r\n\r\n  function ToolLike(g, config, env) {\r\n    var _this;\r\n\r\n    Tool_classCallCheck(this, ToolLike);\r\n\r\n    _this = _super.call(this);\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"enableResponsive\", function () {\r\n      if (window.ResizeObserver) {\r\n        _this.resizeObserver = new ResizeObserver(function () {\r\n          var svgBounds = _this.svg.getBoundingClientRect();\r\n\r\n          var _this$svg$viewBox$bas = _this.svg.viewBox.baseVal,\r\n              width = _this$svg$viewBox$bas.width,\r\n              height = _this$svg$viewBox$bas.height;\r\n          _this.scale = Math.max(width / svgBounds.width, height / svgBounds.height);\r\n          if (_this.onScaleChanged) _this.onScaleChanged(_this.scale);\r\n        });\r\n\r\n        _this.resizeObserver.observe(_this.svg.parentNode);\r\n      }\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"getSVGPoint\", function (evt) {\r\n      var pt = _this.svg.createSVGPoint();\r\n\r\n      if (isTouch) {\r\n        var bbox = _this.svg.getBoundingClientRect();\r\n\r\n        var x = evt.clientX - bbox.x;\r\n        var y = evt.clientY - bbox.y;\r\n\r\n        var _this$svg$getBounding = _this.svg.getBoundingClientRect(),\r\n            left = _this$svg$getBounding.left,\r\n            top = _this$svg$getBounding.top;\r\n\r\n        pt.x = x + left;\r\n        pt.y = y + top;\r\n        return pt.matrixTransform(_this.g.getScreenCTM().inverse());\r\n      } else {\r\n        pt.x = evt.offsetX;\r\n        pt.y = evt.offsetY;\r\n        return pt.matrixTransform(_this.g.getCTM().inverse());\r\n      }\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"drawHandle\", function (x, y) {\r\n      var containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n      containerGroup.setAttribute('class', 'a9s-handle');\r\n      var group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n      var drawCircle = function drawCircle(r) {\r\n        var c = document.createElementNS(SVG_SVG_NAMESPACE, 'circle');\r\n        c.setAttribute('cx', x);\r\n        c.setAttribute('cy', y);\r\n        c.setAttribute('r', r);\r\n        c.setAttribute('transform-origin', \"\".concat(x, \" \").concat(y));\r\n        return c;\r\n      };\r\n\r\n      var radius = _this.config.handleRadius || 6;\r\n      var inner = drawCircle(radius);\r\n      inner.setAttribute('class', 'a9s-handle-inner');\r\n      var outer = drawCircle(radius + 1);\r\n      outer.setAttribute('class', 'a9s-handle-outer');\r\n      group.appendChild(outer);\r\n      group.appendChild(inner);\r\n      containerGroup.appendChild(group);\r\n      return containerGroup;\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"setHandleXY\", function (handle, x, y) {\r\n      var inner = handle.querySelector('.a9s-handle-inner');\r\n      inner.setAttribute('cx', x);\r\n      inner.setAttribute('cy', y);\r\n      inner.setAttribute('transform-origin', \"\".concat(x, \" \").concat(y));\r\n      var outer = handle.querySelector('.a9s-handle-outer');\r\n      outer.setAttribute('cx', x);\r\n      outer.setAttribute('cy', y);\r\n      outer.setAttribute('transform-origin', \"\".concat(x, \" \").concat(y));\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"getHandleXY\", function (handle) {\r\n      var outer = handle.querySelector('.a9s-handle-outer');\r\n      return {\r\n        x: parseFloat(outer.getAttribute('cx')),\r\n        y: parseFloat(outer.getAttribute('cy'))\r\n      };\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this), \"scaleHandle\", function (handle) {\r\n      var inner = handle.querySelector('.a9s-handle-inner');\r\n      var outer = handle.querySelector('.a9s-handle-outer');\r\n      var radius = _this.scale * (_this.config.handleRadius || 6);\r\n      inner.setAttribute('r', radius);\r\n      outer.setAttribute('r', radius);\r\n    });\r\n\r\n    _this.svg = g.closest('svg');\r\n    _this.g = g;\r\n    _this.config = config;\r\n    _this.env = env; // Default image scale\r\n\r\n    _this.scale = 1; // Bit of a hack. If we are dealing with a 'real' image, we enable\r\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\r\n    // so we don't need responsive mode.\r\n\r\n    var image = env.image;\r\n    if (image instanceof Element || image instanceof HTMLDocument) _this.enableResponsive();\r\n    return _this;\r\n  }\r\n  /**\r\n   * Implementations MAY extend this (calling super),\r\n   * to destroy SVG elements, mask, etc.\r\n   */\r\n\r\n\r\n  Tool_createClass(ToolLike, [{\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      if (this.resizeObserver) this.resizeObserver.disconnect();\r\n      this.resizeObserver = null;\r\n    }\r\n  }]);\r\n\r\n  return ToolLike;\r\n}((tiny_emitter_default()));\r\n/**\r\n * Base class that adds some convenience stuff for tool plugins.\r\n */\r\n\r\nvar Tool = /*#__PURE__*/function (_ToolLike) {\r\n  _inherits(Tool, _ToolLike);\r\n\r\n  var _super2 = _createSuper(Tool);\r\n\r\n  function Tool(g, config, env) {\r\n    var _this2;\r\n\r\n    Tool_classCallCheck(this, Tool);\r\n\r\n    _this2 = _super2.call(this, g, config, env); // We'll keep a flag set to false until\r\n    // the user has started moving, so we can\r\n    // fire the startSelection event\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this2), \"attachListeners\", function (_ref) {\r\n      var mouseMove = _ref.mouseMove,\r\n          mouseUp = _ref.mouseUp,\r\n          dblClick = _ref.dblClick;\r\n\r\n      // Handle SVG conversion on behalf of tool implementations\r\n      if (mouseMove) {\r\n        _this2.mouseMove = function (evt) {\r\n          var _this2$getSVGPoint = _this2.getSVGPoint(evt),\r\n              x = _this2$getSVGPoint.x,\r\n              y = _this2$getSVGPoint.y;\r\n\r\n          if (!_this2.started) {\r\n            _this2.emit('startSelection', {\r\n              x: x,\r\n              y: y\r\n            });\r\n\r\n            _this2.started = true;\r\n          }\r\n\r\n          mouseMove(x, y, evt);\r\n        }; // Mouse move goes on SVG element\r\n\r\n\r\n        _this2.svg.addEventListener('mousemove', _this2.mouseMove);\r\n      }\r\n\r\n      if (mouseUp) {\r\n        _this2.mouseUp = function (evt) {\r\n          if (evt.button !== 0) return; // left click\r\n\r\n          var _this2$getSVGPoint2 = _this2.getSVGPoint(evt),\r\n              x = _this2$getSVGPoint2.x,\r\n              y = _this2$getSVGPoint2.y;\r\n\r\n          mouseUp(x, y, evt);\r\n        }; // Mouse up goes on doc, so we capture events outside, too\r\n\r\n\r\n        document.addEventListener('mouseup', _this2.mouseUp);\r\n      }\r\n\r\n      if (dblClick) {\r\n        _this2.dblClick = function (evt) {\r\n          var _this2$getSVGPoint3 = _this2.getSVGPoint(evt),\r\n              x = _this2$getSVGPoint3.x,\r\n              y = _this2$getSVGPoint3.y;\r\n\r\n          dblClick(x, y, evt);\r\n        };\r\n\r\n        document.addEventListener('dblclick', _this2.dblClick);\r\n      }\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this2), \"detachListeners\", function () {\r\n      if (_this2.mouseMove) _this2.svg.removeEventListener('mousemove', _this2.mouseMove);\r\n      if (_this2.mouseUp) document.removeEventListener('mouseup', _this2.mouseUp);\r\n      if (_this2.dblClick) document.removeEventListener('dblclick', _this2.dblClick);\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this2), \"start\", function (evt, startOnSingleClick) {\r\n      // Handle SVG conversion on behalf of tool implementations\r\n      var _this2$getSVGPoint4 = _this2.getSVGPoint(evt),\r\n          x = _this2$getSVGPoint4.x,\r\n          y = _this2$getSVGPoint4.y;\r\n\r\n      _this2.startDrawing(x, y, startOnSingleClick, evt);\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this2), \"startDrawing\", function (evt) {\r\n      throw new Error(IMPLEMENTATION_MISSING);\r\n    });\r\n\r\n    Tool_defineProperty(_assertThisInitialized(_this2), \"createEditableShape\", function (annotation, formatters) {\r\n      throw new Error(IMPLEMENTATION_MISSING);\r\n    });\r\n\r\n    _this2.started = false;\r\n    return _this2;\r\n  }\r\n\r\n  Tool_createClass(Tool, [{\r\n    key: \"isDrawing\",\r\n    get:\r\n    /**\r\n     * Tool implementations MUST override these\r\n     */\r\n    function get() {\r\n      throw new Error(IMPLEMENTATION_MISSING);\r\n    }\r\n  }]);\r\n\r\n  return Tool;\r\n}(ToolLike); // In addition, Tool implementations need to implement the following static methods\r\n// Tool.identifier = '...'\r\n\r\n\r\n\r\n\r\nTool.supports = function (annotation) {\r\n  throw new Error(IMPLEMENTATION_MISSING);\r\n}; // Just some convenience shortcuts to client-core, for quicker\r\n// importing in plugins. (In a way, the intention is to make the\r\n// Tool class serve as a kind of mini-SDK).\r\n\r\n\r\n\r\n\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/EditableShape.js\r\nfunction EditableShape_typeof(obj) { \"@babel/helpers - typeof\"; return EditableShape_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableShape_typeof(obj); }\r\n\r\nfunction EditableShape_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableShape_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableShape_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableShape_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableShape_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableShape_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableShape_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableShape_setPrototypeOf(o, p) { EditableShape_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableShape_setPrototypeOf(o, p); }\r\n\r\nfunction EditableShape_createSuper(Derived) { var hasNativeReflectConstruct = EditableShape_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableShape_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableShape_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableShape_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableShape_possibleConstructorReturn(self, call) { if (call && (EditableShape_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableShape_assertThisInitialized(self); }\r\n\r\nfunction EditableShape_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableShape_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableShape_getPrototypeOf(o) { EditableShape_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableShape_getPrototypeOf(o); }\r\n\r\nfunction EditableShape_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\nvar EditableShape_IMPLEMENTATION_MISSING = \"An implementation is missing\";\r\n\r\nvar EditableShape = /*#__PURE__*/function (_ToolLike) {\r\n  EditableShape_inherits(EditableShape, _ToolLike);\r\n\r\n  var _super = EditableShape_createSuper(EditableShape);\r\n\r\n  function EditableShape(annotation, g, config, env) {\r\n    var _this;\r\n\r\n    EditableShape_classCallCheck(this, EditableShape);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    EditableShape_defineProperty(EditableShape_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      throw new Error(EditableShape_IMPLEMENTATION_MISSING);\r\n    });\r\n\r\n    _this.annotation = annotation;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Implementations MUST override this method!\r\n   * \r\n   * Must return the 'g' element with the a9s-annotation class.\r\n   */\r\n\r\n\r\n  EditableShape_createClass(EditableShape, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      throw new Error(EditableShape_IMPLEMENTATION_MISSING);\r\n    }\r\n    /**\r\n     * Implementations MUST override this method!\r\n     * \r\n     * The annotation argument MUST be used to update\r\n     * the current state of the shape. It MUST NOT\r\n     * be stored as 'this.annotation'! 'this.annotation'\r\n     * MUST remain the original annotation at the time\r\n     * this EditableShape was created, because we will\r\n     * need it again in case the user cancels editing.\r\n     * \r\n     * Thinking of it in React terms, 'this.annotation'\r\n     * has the same purpose as props.annotation, whereas\r\n     * this method affects state.\r\n     */\r\n\r\n  }]);\r\n\r\n  return EditableShape;\r\n}(ToolLike);\r\n\r\n\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/selectors/RectFragment.js\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\n\r\n/** \r\n * Parses a W3C Web Annotation FragmentSelector conforming\r\n * to the Media Fragments spec. Supports (well-formed) xywh=pixel\r\n * and xywh=percent fragments. \r\n */\r\n\r\nvar parseRectFragment = function parseRectFragment(annotation, image) {\r\n  var selector = annotation.selector('FragmentSelector');\r\n\r\n  if (selector !== null && selector !== void 0 && selector.conformsTo.startsWith('http://www.w3.org/TR/media-frags')) {\r\n    var value = selector.value;\r\n    var format = value.includes(':') ? value.substring(value.indexOf('=') + 1, value.indexOf(':')) : 'pixel';\r\n    var coords = value.includes(':') ? value.substring(value.indexOf(':') + 1) : value.substring(value.indexOf('=') + 1);\r\n\r\n    var _coords$split$map = coords.split(',').map(parseFloat),\r\n        _coords$split$map2 = _slicedToArray(_coords$split$map, 4),\r\n        x = _coords$split$map2[0],\r\n        y = _coords$split$map2[1],\r\n        w = _coords$split$map2[2],\r\n        h = _coords$split$map2[3];\r\n\r\n    if (format.toLowerCase() === 'percent') {\r\n      x = x * image.naturalWidth / 100;\r\n      y = y * image.naturalHeight / 100;\r\n      w = w * image.naturalWidth / 100;\r\n      h = h * image.naturalHeight / 100;\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      w: w,\r\n      h: h\r\n    };\r\n  }\r\n};\r\n/** \r\n * Serializes a (x, y, w, h)-tuple as Media Fragment selector\r\n * using pixel coordinates.\r\n */\r\n\r\nvar toPixelRectFragment = function toPixelRectFragment(x, y, w, h, image) {\r\n  return {\r\n    source: image === null || image === void 0 ? void 0 : image.src,\r\n    selector: {\r\n      type: \"FragmentSelector\",\r\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\r\n      value: \"xywh=pixel:\".concat(x, \",\").concat(y, \",\").concat(w, \",\").concat(h)\r\n    }\r\n  };\r\n};\r\n/** \r\n * Serializes a (x, y, w, h)-tuple as Media Fragment selector \r\n * using percent coordinates.\r\n */\r\n\r\n\r\nvar toPercentRectFragment = function toPercentRectFragment(x, y, w, h, image) {\r\n  var px = x / image.naturalWidth * 100;\r\n  var py = y / image.naturalHeight * 100;\r\n  var pw = w / image.naturalWidth * 100;\r\n  var ph = h / image.naturalHeight * 100;\r\n  return {\r\n    source: image.src,\r\n    selector: {\r\n      type: \"FragmentSelector\",\r\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\r\n      value: \"xywh=percent:\".concat(px, \",\").concat(py, \",\").concat(pw, \",\").concat(ph)\r\n    }\r\n  };\r\n};\r\n\r\nvar toRectFragment = function toRectFragment(x, y, w, h, image, fragmentUnit) {\r\n  return (fragmentUnit === null || fragmentUnit === void 0 ? void 0 : fragmentUnit.toLowerCase()) === 'percent' ? toPercentRectFragment(x, y, w, h, image) : toPixelRectFragment(x, y, w, h, image);\r\n};\r\n/** Shorthand to apply the given (x, y, w, h) to the SVG shape **/\r\n\r\nvar setXYWH = function setXYWH(shape, x, y, w, h) {\r\n  shape.setAttribute('x', x);\r\n  shape.setAttribute('y', y);\r\n  shape.setAttribute('width', w);\r\n  shape.setAttribute('height', h);\r\n};\r\n\r\nvar setPointXY = function setPointXY(shape, x, y) {\r\n  shape.setAttribute('cx', x);\r\n  shape.setAttribute('cy', y);\r\n  shape.setAttribute('r', 7); // TODO make configurable\r\n};\r\n\r\nvar drawRectMask = function drawRectMask(imageDimensions, x, y, w, h) {\r\n  var mask = document.createElementNS(SVG_NAMESPACE, 'path');\r\n  mask.setAttribute('fill-rule', 'evenodd');\r\n  var naturalWidth = imageDimensions.naturalWidth,\r\n      naturalHeight = imageDimensions.naturalHeight;\r\n  mask.setAttribute('d', \"M0 0 h\".concat(naturalWidth, \" v\").concat(naturalHeight, \" h-\").concat(naturalWidth, \" z M\").concat(x, \" \").concat(y, \" h\").concat(w, \" v\").concat(h, \" h-\").concat(w, \" z\"));\r\n  return mask;\r\n};\r\nvar setRectMaskSize = function setRectMaskSize(mask, imageDimensions, x, y, w, h) {\r\n  var naturalWidth = imageDimensions.naturalWidth,\r\n      naturalHeight = imageDimensions.naturalHeight;\r\n  mask.setAttribute('d', \"M0 0 h\".concat(naturalWidth, \" v\").concat(naturalHeight, \" h-\").concat(naturalWidth, \" z M\").concat(x, \" \").concat(y, \" h\").concat(w, \" v\").concat(h, \" h-\").concat(w, \" z\"));\r\n};\r\n/** \r\n * Draws an SVG rectangle, either from an annotation, or an\r\n * (x, y, w, h)-tuple.\r\n */\r\n\r\nvar drawRect = function drawRect(arg1, arg2, arg3, arg4) {\r\n  var _ref = arg1.type === 'Annotation' || arg1.type === 'Selection' ? parseRectFragment(arg1, arg2) : {\r\n    x: arg1,\r\n    y: arg2,\r\n    w: arg3,\r\n    h: arg4\r\n  },\r\n      x = _ref.x,\r\n      y = _ref.y,\r\n      w = _ref.w,\r\n      h = _ref.h;\r\n\r\n  var g = document.createElementNS(SVG_NAMESPACE, 'g');\r\n\r\n  if (w === 0 && h === 0) {\r\n    // Edge case: rect is actually a point\r\n    addClass(g, 'a9s-point');\r\n    addClass(g, 'a9s-non-scaling');\r\n    g.setAttribute('transform-origin', \"\".concat(x, \" \").concat(y));\r\n    var outerPoint = document.createElementNS(SVG_NAMESPACE, 'circle');\r\n    var innerPoint = document.createElementNS(SVG_NAMESPACE, 'circle');\r\n    innerPoint.setAttribute('class', 'a9s-inner');\r\n    setPointXY(innerPoint, x, y);\r\n    outerPoint.setAttribute('class', 'a9s-outer');\r\n    setPointXY(outerPoint, x, y);\r\n    g.appendChild(outerPoint);\r\n    g.appendChild(innerPoint);\r\n  } else {\r\n    var outerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\r\n    var innerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\r\n    innerRect.setAttribute('class', 'a9s-inner');\r\n    setXYWH(innerRect, x, y, w, h);\r\n    outerRect.setAttribute('class', 'a9s-outer');\r\n    setXYWH(outerRect, x, y, w, h);\r\n    g.appendChild(outerRect);\r\n    g.appendChild(innerRect);\r\n  }\r\n\r\n  return g;\r\n};\r\n/** Gets the (x, y, w, h)-values from the attributes of the SVG group **/\r\n\r\nvar getRectSize = function getRectSize(g) {\r\n  var outer = g.querySelector('.a9s-outer');\r\n\r\n  if (outer.nodeName === 'rect') {\r\n    var x = parseFloat(outer.getAttribute('x'));\r\n    var y = parseFloat(outer.getAttribute('y'));\r\n    var w = parseFloat(outer.getAttribute('width'));\r\n    var h = parseFloat(outer.getAttribute('height'));\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      w: w,\r\n      h: h\r\n    };\r\n  } else {\r\n    var _x = parseFloat(outer.getAttribute('cx'));\r\n\r\n    var _y = parseFloat(outer.getAttribute('cy'));\r\n\r\n    return {\r\n      x: _x,\r\n      y: _y,\r\n      w: 0,\r\n      h: 0\r\n    };\r\n  }\r\n};\r\n/** Applies the (x, y, w, h)-values to the rects in the SVG group **/\r\n\r\nvar setRectSize = function setRectSize(g, x, y, w, h) {\r\n  var inner = g.querySelector('.a9s-inner');\r\n  var outer = g.querySelector('.a9s-outer');\r\n\r\n  if (outer.nodeName === 'rect') {\r\n    setXYWH(inner, x, y, w, h);\r\n    setXYWH(outer, x, y, w, h);\r\n  } else {\r\n    setPointXY(inner, x, y);\r\n    setPointXY(outer, x, y);\r\n  }\r\n};\r\n/** \r\n * Shorthand to get the area (rectangle w x h) from the \r\n * annotation's fragment selector. \r\n */\r\n\r\nvar rectArea = function rectArea(annotation, image) {\r\n  var _parseRectFragment = parseRectFragment(annotation, image),\r\n      w = _parseRectFragment.w,\r\n      h = _parseRectFragment.h;\r\n\r\n  return w * h;\r\n};\r\n;// CONCATENATED MODULE: ./src/point/Point.js\r\nfunction Point_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction Point_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? Point_ownKeys(Object(source), !0).forEach(function (key) { Point_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : Point_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction Point_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\nvar isPoint = function isPoint(annotation) {\r\n  var _annotation$target$re;\r\n\r\n  return ((_annotation$target$re = annotation.target.renderedVia) === null || _annotation$target$re === void 0 ? void 0 : _annotation$target$re.name) === 'point';\r\n};\r\nvar toFragment = function toFragment(x, y, image, fragmentUnit) {\r\n  return Point_objectSpread(Point_objectSpread({}, toRectFragment(x, y, 0, 0, image, fragmentUnit)), {}, {\r\n    renderedVia: {\r\n      name: 'point'\r\n    }\r\n  });\r\n};\r\n;// CONCATENATED MODULE: ./src/point/EditablePoint.js\r\nfunction EditablePoint_typeof(obj) { \"@babel/helpers - typeof\"; return EditablePoint_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditablePoint_typeof(obj); }\r\n\r\nfunction EditablePoint_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditablePoint_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditablePoint_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditablePoint_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditablePoint_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\r\n\r\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditablePoint_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditablePoint_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditablePoint_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditablePoint_setPrototypeOf(o, p) { EditablePoint_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditablePoint_setPrototypeOf(o, p); }\r\n\r\nfunction EditablePoint_createSuper(Derived) { var hasNativeReflectConstruct = EditablePoint_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditablePoint_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditablePoint_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditablePoint_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditablePoint_possibleConstructorReturn(self, call) { if (call && (EditablePoint_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditablePoint_assertThisInitialized(self); }\r\n\r\nfunction EditablePoint_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditablePoint_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditablePoint_getPrototypeOf(o) { EditablePoint_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditablePoint_getPrototypeOf(o); }\r\n\r\nfunction EditablePoint_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar EditablePoint = /*#__PURE__*/function (_EditableShape) {\r\n  EditablePoint_inherits(EditablePoint, _EditableShape);\r\n\r\n  var _super = EditablePoint_createSuper(EditablePoint);\r\n\r\n  function EditablePoint(_annotation, g, config, env) {\r\n    var _this;\r\n\r\n    EditablePoint_classCallCheck(this, EditablePoint);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditablePoint_defineProperty(EditablePoint_assertThisInitialized(_this), \"onScaleChanged\", function () {\r\n      return _this.scaleHandle(_this.point);\r\n    });\r\n\r\n    EditablePoint_defineProperty(EditablePoint_assertThisInitialized(_this), \"onGrab\", function () {\r\n      _this.isGrabbed = true;\r\n    });\r\n\r\n    EditablePoint_defineProperty(EditablePoint_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      if (evt.button !== 0) return; // left click\r\n\r\n      if (_this.isGrabbed) {\r\n        var _this$getSVGPoint = _this.getSVGPoint(evt),\r\n            x = _this$getSVGPoint.x,\r\n            y = _this$getSVGPoint.y;\r\n\r\n        _this.setHandleXY(_this.point, x, y);\r\n\r\n        var target = toFragment(x, y, _this.env.image, _this.config.fragmentUnit);\r\n\r\n        _this.emit('update', target);\r\n      }\r\n    });\r\n\r\n    EditablePoint_defineProperty(EditablePoint_assertThisInitialized(_this), \"onMouseUp\", function () {\r\n      _this.isGrabbed = false;\r\n    });\r\n\r\n    EditablePoint_defineProperty(EditablePoint_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var _parseRectFragment = parseRectFragment(annotation, _this.env.image),\r\n          x = _parseRectFragment.x,\r\n          y = _parseRectFragment.y;\r\n\r\n      _this.setHandleXY(_this.point, x, y);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp);\r\n\r\n    var _parseRectFragment2 = parseRectFragment(_annotation, env.image),\r\n        _x = _parseRectFragment2.x,\r\n        _y = _parseRectFragment2.y;\r\n\r\n    _this.container = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.point = _this.drawHandle(_x, _y);\r\n\r\n    _this.point.addEventListener('mousedown', _this.onGrab);\r\n\r\n    _this.elementGroup.appendChild(_this.point);\r\n\r\n    _this.container.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.container); // true if te mouse has grabbed the point\r\n\r\n    _this.isGrabbed = false;\r\n    return _this;\r\n  }\r\n\r\n  EditablePoint_createClass(EditablePoint, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.svg.removeEventListener('mousemove', this.onMouseMove);\r\n      this.svg.removeEventListener('mouseup', this.onMouseUp);\r\n      this.container.parentNode.removeChild(this.container);\r\n\r\n      _get(EditablePoint_getPrototypeOf(EditablePoint.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }]);\r\n\r\n  return EditablePoint;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/point/PointTool.js\r\nfunction PointTool_typeof(obj) { \"@babel/helpers - typeof\"; return PointTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, PointTool_typeof(obj); }\r\n\r\nfunction PointTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction PointTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction PointTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) PointTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) PointTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction PointTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) PointTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction PointTool_setPrototypeOf(o, p) { PointTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PointTool_setPrototypeOf(o, p); }\r\n\r\nfunction PointTool_createSuper(Derived) { var hasNativeReflectConstruct = PointTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PointTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PointTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PointTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction PointTool_possibleConstructorReturn(self, call) { if (call && (PointTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return PointTool_assertThisInitialized(self); }\r\n\r\nfunction PointTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction PointTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction PointTool_getPrototypeOf(o) { PointTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PointTool_getPrototypeOf(o); }\r\n\r\nfunction PointTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\nvar PointTool = /*#__PURE__*/function (_Tool) {\r\n  PointTool_inherits(PointTool, _Tool);\r\n\r\n  var _super = PointTool_createSuper(PointTool);\r\n\r\n  function PointTool(g, config, env) {\r\n    var _this;\r\n\r\n    PointTool_classCallCheck(this, PointTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    PointTool_defineProperty(PointTool_assertThisInitialized(_this), \"startDrawing\", function (x, y, _, evt) {\r\n      var _evt$target$closest;\r\n\r\n      // The top-most existing annotation at this position (if any) \r\n      var annotation = (_evt$target$closest = evt.target.closest('.a9s-annotation')) === null || _evt$target$closest === void 0 ? void 0 : _evt$target$closest.annotation; // The point drawing tool will ALWAYS create a point annotation,\r\n      // regardless of whether there's already an annotation underneath.\r\n      // UNLESS the annotation underneath is itself a point!\r\n\r\n      if (!annotation || !isPoint(annotation)) {\r\n        var element = _this.drawHandle(x, y);\r\n\r\n        _this.scaleHandle(element);\r\n\r\n        _this.g.appendChild(element);\r\n\r\n        element.annotation = new Selection(toFragment(x, y, _this.env.image, _this.config.fragmentUnit));\r\n\r\n        _this.emit('complete', element);\r\n      } else {\r\n        _this.emit('cancel');\r\n      }\r\n    });\r\n\r\n    PointTool_defineProperty(PointTool_assertThisInitialized(_this), \"stop\", function () {// Nothing to do\r\n    });\r\n\r\n    PointTool_defineProperty(PointTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditablePoint(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    return _this;\r\n  }\r\n\r\n  PointTool_createClass(PointTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      // Point selection is an instant action - the\r\n      // tool is never an 'drawing' state\r\n      return false;\r\n    }\r\n  }]);\r\n\r\n  return PointTool;\r\n}(Tool);\r\n\r\n\r\nPointTool.identifier = 'point';\r\n\r\nPointTool.supports = function (annotation) {\r\n  // Not needed, since the target.renderedVia property will be evaluated first\r\n  return false;\r\n};\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js\r\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = EmbeddedSVG_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction EmbeddedSVG_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return EmbeddedSVG_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EmbeddedSVG_arrayLikeToArray(o, minLen); }\r\n\r\nfunction EmbeddedSVG_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\n\r\n\r\n/** Helper that forces an un-namespaced node to SVG **/\r\n\r\nvar insertSVGNamespace = function insertSVGNamespace(originalDoc) {\r\n  // Serialize and parse for the namespace to take effect on every node\r\n  var serializer = new XMLSerializer();\r\n  var str = serializer.serializeToString(originalDoc.documentElement); // Doesn't seem that there's a clean cross-browser way for this...\r\n\r\n  var namespaced = str.replace('<svg>', \"<svg xmlns=\\\"\".concat(SVG_SVG_NAMESPACE, \"\\\">\"));\r\n  var parser = new DOMParser();\r\n  var namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\r\n  return namespacedDoc.documentElement;\r\n};\r\n\r\nvar sanitize = function sanitize(doc) {\r\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \r\n  // for the basic approach\r\n  var cleanEl = function cleanEl(el) {\r\n    Array.from(el.attributes).forEach(function (attr) {\r\n      if (attr.name.startsWith('on')) el.removeAttribute(attr.name);\r\n    });\r\n  }; // Remove script tags\r\n\r\n\r\n  var scripts = doc.getElementsByTagName('script');\r\n  Array.from(scripts).reverse().forEach(function (el) {\r\n    return el.parentNode.removeChild(el);\r\n  }); // Remove on... attributes\r\n\r\n  cleanEl(doc);\r\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\r\n  return doc;\r\n};\r\n\r\nvar svgFragmentToShape = function svgFragmentToShape(annotation) {\r\n  var selector = annotation.selector('SvgSelector');\r\n\r\n  if (selector) {\r\n    var parser = new DOMParser(); // Parse the XML document, assuming SVG\r\n\r\n    var value = selector.value;\r\n    var doc = parser.parseFromString(value, \"image/svg+xml\"); // SVG needs a namespace declaration - check if it's set or insert if not\r\n\r\n    var isPrefixDeclared = doc.lookupPrefix(SVG_SVG_NAMESPACE); // SVG declared via prefix\r\n\r\n    var isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\r\n\r\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\r\n      return sanitize(doc).firstChild;\r\n    } else {\r\n      return sanitize(insertSVGNamespace(doc)).firstChild;\r\n    }\r\n  }\r\n};\r\nvar drawEmbeddedSVG = function drawEmbeddedSVG(annotation) {\r\n  var shape = svgFragmentToShape(annotation); // Because we're nitpicky, we don't just draw the shape,\r\n  // but duplicate it, so we can have inner and an outer lines\r\n\r\n  var g = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n  var inner = shape.cloneNode(true);\r\n  inner.setAttribute('class', 'a9s-inner');\r\n  var outer = shape.cloneNode(true);\r\n  outer.setAttribute('class', 'a9s-outer');\r\n  g.appendChild(outer);\r\n  g.appendChild(inner);\r\n  return g;\r\n};\r\nvar toSVGTarget = function toSVGTarget(shape, image) {\r\n  var inner = shape.querySelector('.a9s-inner').cloneNode(true);\r\n  inner.removeAttribute('class');\r\n  inner.removeAttribute('xmlns');\r\n  var serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\r\n  serialized = serialized.replace(\" xmlns=\\\"\".concat(SVG_SVG_NAMESPACE, \"\\\"\"), '');\r\n  return {\r\n    source: image === null || image === void 0 ? void 0 : image.src,\r\n    selector: {\r\n      type: \"SvgSelector\",\r\n      value: \"<svg>\".concat(serialized, \"</svg>\")\r\n    }\r\n  };\r\n};\r\nvar svgArea = function svgArea(annotation) {\r\n  var shape = svgFragmentToShape(annotation);\r\n  var nodeName = shape.nodeName.toLowerCase();\r\n  if (nodeName === 'polygon') return svgPolygonArea(shape);else if (nodeName === 'circle') return svgCircleArea(shape);else if (nodeName === 'ellipse') return svgEllipseArea(shape);else if (nodeName == 'path') return svgPathArea(shape);else if (nodeName == 'line') return 0;else throw \"Unsupported SVG shape type: \".concat(nodeName);\r\n};\r\n\r\nvar svgPolygonArea = function svgPolygonArea(polygon) {\r\n  var points = polygon.getAttribute('points').trim().split(' ') // Split x/y tuples\r\n  .map(function (xy) {\r\n    return xy.split(',').map(function (str) {\r\n      return parseFloat(str.trim());\r\n    });\r\n  });\r\n  return polygonArea(points);\r\n};\r\n\r\nvar svgCircleArea = function svgCircleArea(circle) {\r\n  var r = circle.getAttribute('r');\r\n  return r * r * Math.PI;\r\n};\r\n\r\nvar svgEllipseArea = function svgEllipseArea(ellipse) {\r\n  var rx = ellipse.getAttribute('rx');\r\n  var ry = ellipse.getAttribute('ry');\r\n  return rx * ry * Math.PI;\r\n};\r\n\r\nvar svgPathArea = function svgPathArea(path) {\r\n  var polygons = svgPathToPolygons(path);\r\n\r\n  if (polygons.length == 1) {\r\n    return polygonArea(polygons[0]);\r\n  } else {\r\n    // Helper to check if a polygon is a hole\r\n    var isHole = function isHole(p) {\r\n      return polygons.find(function (other) {\r\n        if (p !== other) return polygonInPolygon(p, other);\r\n      });\r\n    };\r\n\r\n    var area = 0;\r\n\r\n    var _iterator = _createForOfIteratorHelper(polygons),\r\n        _step;\r\n\r\n    try {\r\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n        var poly = _step.value;\r\n        if (isHole(poly)) area -= polygonArea(poly);else area += polygonArea(poly);\r\n      }\r\n    } catch (err) {\r\n      _iterator.e(err);\r\n    } finally {\r\n      _iterator.f();\r\n    }\r\n\r\n    return area;\r\n  }\r\n};\r\n;// CONCATENATED MODULE: ./src/circle/Circle.js\r\n\r\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\r\n\r\nvar setXYR = function setXYR(shape, x, y, r) {\r\n  shape.setAttribute('cx', x);\r\n  shape.setAttribute('cy', y);\r\n  shape.setAttribute('r', r);\r\n};\r\n/** \r\n * Draws an SVG circle, either from an annotation, or an\r\n * (cx, cy, r)-tuple.\r\n */\r\n\r\n\r\nvar drawCircle = function drawCircle(cx, cy, r) {\r\n  var g = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n  var outerCircle = document.createElementNS(SVG_SVG_NAMESPACE, 'circle');\r\n  var innerCircle = document.createElementNS(SVG_SVG_NAMESPACE, 'circle');\r\n  innerCircle.setAttribute('class', 'a9s-inner');\r\n  setXYR(innerCircle, cx, cy, r);\r\n  outerCircle.setAttribute('class', 'a9s-outer');\r\n  setXYR(outerCircle, cx, cy, r);\r\n  g.appendChild(outerCircle);\r\n  g.appendChild(innerCircle);\r\n  return g;\r\n};\r\nvar setCircleSize = function setCircleSize(g, cx, cy, r) {\r\n  var innerCircle = g.querySelector('.a9s-inner');\r\n  var outerCircle = g.querySelector('.a9s-outer');\r\n  setXYR(innerCircle, cx, cy, r);\r\n  setXYR(outerCircle, cx, cy, r);\r\n};\r\nvar getCircleSize = function getCircleSize(g) {\r\n  var outerCircle = g.querySelector('.a9s-outer');\r\n  var cx = parseFloat(outerCircle.getAttribute('cx'));\r\n  var cy = parseFloat(outerCircle.getAttribute('cy'));\r\n  var r = parseFloat(outerCircle.getAttribute('r'));\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r: r\r\n  };\r\n};\r\n;// CONCATENATED MODULE: ./src/circle/CircleMask.js\r\nfunction CircleMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction CircleMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction CircleMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) CircleMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) CircleMask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction CircleMask_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\nvar CircleMask = /*#__PURE__*/function () {\r\n  function CircleMask(imageDimensions, circle) {\r\n    var _this = this;\r\n\r\n    CircleMask_classCallCheck(this, CircleMask);\r\n\r\n    CircleMask_defineProperty(this, \"redraw\", function () {\r\n      var _getCircleSize = getCircleSize(_this.circle),\r\n          cx = _getCircleSize.cx,\r\n          cy = _getCircleSize.cy,\r\n          r = _getCircleSize.r;\r\n\r\n      var tx = cx + r > _this.w ? _this.w - r : cx;\r\n      var ty = cy + r > _this.h ? _this.h - r : cy + r;\r\n\r\n      _this.mask.setAttribute('d', \"M0 0 h\".concat(_this.w, \" v\").concat(_this.h, \" h-\").concat(_this.w, \" z M\").concat(tx, \" \").concat(ty, \" a \").concat(r, \" \").concat(r, \" 0 1 1 1 0\"));\r\n    });\r\n\r\n    CircleMask_defineProperty(this, \"destroy\", function () {\r\n      return _this.mask.parentNode.removeChild(_this.mask);\r\n    });\r\n\r\n    this.w = imageDimensions.naturalWidth;\r\n    this.h = imageDimensions.naturalHeight;\r\n    this.circle = circle;\r\n\r\n    var _getCircleSize2 = getCircleSize(this.circle),\r\n        _cx = _getCircleSize2.cx,\r\n        _cy = _getCircleSize2.cy,\r\n        _r = _getCircleSize2.r;\r\n\r\n    var _tx = _cx + _r > this.w ? this.w - _r : _cx;\r\n\r\n    var _ty = _cy + _r > this.h ? this.h - _r : _cy + _r;\r\n\r\n    this.mask = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.mask.setAttribute('fill-rule', 'evenodd');\r\n    this.mask.setAttribute('class', 'a9s-selection-mask');\r\n    this.mask.setAttribute('d', \"M0 0 h\".concat(this.w, \" v\").concat(this.h, \" h-\").concat(this.w, \" z M\").concat(_tx, \" \").concat(_ty, \" a \").concat(_r, \" \").concat(_r, \" 0 1 1 1 0\"));\r\n  }\r\n\r\n  CircleMask_createClass(CircleMask, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.mask;\r\n    }\r\n  }]);\r\n\r\n  return CircleMask;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/circle/RubberbandCircle.js\r\nfunction RubberbandCircle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandCircle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandCircle_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandCircle_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandCircle_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandCircle_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating a circle by\r\n * clicking and dragging.\r\n */\r\n\r\nvar RubberbandCircle = /*#__PURE__*/function () {\r\n  function RubberbandCircle(anchorX, anchorY, g, env) {\r\n    var _this = this;\r\n\r\n    RubberbandCircle_classCallCheck(this, RubberbandCircle);\r\n\r\n    RubberbandCircle_defineProperty(this, \"dragTo\", function (oppositeX, oppositeY) {\r\n      var _this$env$image = _this.env.image,\r\n          naturalWidth = _this$env$image.naturalWidth,\r\n          naturalHeight = _this$env$image.naturalHeight; // Make visible\r\n\r\n      _this.group.style.display = null;\r\n      var w = oppositeX - _this.anchor[0];\r\n      var h = oppositeY - _this.anchor[1];\r\n      var r = Math.max(1, Math.pow(Math.pow(w, 2) + Math.pow(h, 2), 0.5) / 2);\r\n      var cx = _this.anchor[0] + w / 2;\r\n      var cy = _this.anchor[1] + h / 2;\r\n      if (cx - r < 0 || cx + r > naturalWidth || cy - r < 0 || cy + r > naturalHeight) return;\r\n      setCircleSize(_this.circle, cx, cy, r);\r\n\r\n      _this.mask.redraw();\r\n    });\r\n\r\n    RubberbandCircle_defineProperty(this, \"getBoundingClientRect\", function () {\r\n      return _this.circle.getBoundingClientRect();\r\n    });\r\n\r\n    RubberbandCircle_defineProperty(this, \"toSelection\", function () {\r\n      return new Selection(toSVGTarget(_this.group, _this.env.image));\r\n    });\r\n\r\n    RubberbandCircle_defineProperty(this, \"destroy\", function () {\r\n      _this.group.parentNode.removeChild(_this.group);\r\n\r\n      _this.mask = null;\r\n      _this.circle = null;\r\n      _this.group = null;\r\n    });\r\n\r\n    this.anchor = [anchorX, anchorY];\r\n    this.env = env;\r\n    this.group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.circle = drawCircle(anchorX, anchorY, 2);\r\n    this.circle.setAttribute('class', 'a9s-selection');\r\n    this.mask = new CircleMask(env.image, this.circle); // We make the selection transparent to \r\n    // pointer events because it would interfere with the \r\n    // rendered annotations' mouseleave/enter events\r\n\r\n    this.group.style.pointerEvents = 'none'; // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n\r\n    this.group.style.display = 'none';\r\n    this.group.appendChild(this.mask.element);\r\n    this.group.appendChild(this.circle);\r\n    g.appendChild(this.group);\r\n  }\r\n\r\n  RubberbandCircle_createClass(RubberbandCircle, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.circle;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandCircle;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/Formatting.js\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Formatting_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction Formatting_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return Formatting_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Formatting_arrayLikeToArray(o, minLen); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Formatting_arrayLikeToArray(arr); }\r\n\r\nfunction Formatting_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\n\r\nvar isFirefox = /firefox/i.test(navigator.userAgent);\r\n\r\nvar formatSvgEl = function formatSvgEl(svgEl, x, y, w, h) {\r\n  svgEl.setAttribute('width', w);\r\n  svgEl.setAttribute('height', h); // Argh - Firefox produces broken SVG bounds for nested SVG\r\n\r\n  if (isFirefox) {\r\n    svgEl.setAttribute('x', 0);\r\n    svgEl.setAttribute('y', 0);\r\n    svgEl.setAttribute('transform', \"translate(\".concat(x, \", \").concat(y, \")\"));\r\n  } else {\r\n    svgEl.setAttribute('x', x);\r\n    svgEl.setAttribute('y', y);\r\n  }\r\n};\r\n\r\nvar appendFormatterEl = function appendFormatterEl(formatterEl, shape) {\r\n  var _shape$getBBox = shape.getBBox(),\r\n      x = _shape$getBBox.x,\r\n      y = _shape$getBBox.y,\r\n      width = _shape$getBBox.width,\r\n      height = _shape$getBBox.height;\r\n\r\n  var svgEl = document.createElementNS(SVG_SVG_NAMESPACE, 'svg');\r\n  svgEl.setAttribute('class', 'a9s-formatter-el');\r\n  formatSvgEl(svgEl, x, y, width, height);\r\n  var g = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n  g.appendChild(formatterEl);\r\n  y;\r\n  svgEl.appendChild(g);\r\n  shape.append(svgEl);\r\n};\r\n/**\r\n * A formatter is a user-defined function that takes an annotation as input,\r\n * and returns either a string, or an object. If a string is returned, this\r\n * will be appended to the annotation element CSS class list. Otherwise, the\r\n * object can have the following properties: \r\n * \r\n * - 'className' added to the CSS class list\r\n * - 'data-*' added as data attributes\r\n * - 'style' a list of CSS styles (in the form of a string) \r\n */\r\n\r\n\r\nvar format = function format(shape, annotation, formatters) {\r\n  // The formatter can be undefined\r\n  if (!formatters) return shape; // Merge outputs from all formatter functions into one object\r\n\r\n  var format = formatters.reduce(function (merged, fn) {\r\n    var format = fn(annotation);\r\n    if (!format) return merged;\r\n\r\n    if (typeof format === 'string' || format instanceof String) {\r\n      merged.className = merged.className ? \"\".concat(merged.className, \" \").concat(format) : format;\r\n    } else if (format.nodeType === Node.ELEMENT_NODE) {\r\n      merged.elements = merged.elements ? [].concat(_toConsumableArray(merged.elements), [format]) : [format];\r\n    } else {\r\n      var _className = format.className,\r\n          _style = format.style,\r\n          element = format.element;\r\n      if (_className) merged.className = merged.className ? \"\".concat(merged.className, \" \").concat(_className) : _className;\r\n      if (_style) merged.style = merged.style ? \"\".concat(merged.style, \" \").concat(_style) : _style;\r\n      if (element) merged.elements = merged.elements ? [].concat(_toConsumableArray(merged.elements), [element]) : [element];\r\n    } // Copy data attributes\r\n\r\n\r\n    for (var key in format) {\r\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\r\n        merged[key] = format[key];\r\n      }\r\n    }\r\n\r\n    return merged;\r\n  }, {});\r\n  var className = format.className,\r\n      style = format.style,\r\n      elements = format.elements;\r\n  if (className) SVG_addClass(shape, className);\r\n\r\n  if (style) {\r\n    var outer = shape.querySelector('.a9s-outer');\r\n    var inner = shape.querySelector('.a9s-inner');\r\n\r\n    if (outer && inner) {\r\n      outer.setAttribute('style', 'display:none');\r\n      inner.setAttribute('style', style);\r\n    } else {\r\n      shape.setAttribute('style', style);\r\n    }\r\n  }\r\n\r\n  if (elements) elements.forEach(function (el) {\r\n    return appendFormatterEl(el, shape);\r\n  });\r\n\r\n  for (var key in format) {\r\n    if (format.hasOwnProperty(key) && key.startsWith('data-')) {\r\n      shape.setAttribute(key, format[key]);\r\n    }\r\n  }\r\n};\r\nvar setFormatterElSize = function setFormatterElSize(group, x, y, w, h) {\r\n  var formatterEl = group.querySelector('.a9s-formatter-el');\r\n  if (formatterEl) formatSvgEl(formatterEl, x, y, w, h);\r\n};\r\n;// CONCATENATED MODULE: ./src/circle/EditableCircle.js\r\nfunction EditableCircle_typeof(obj) { \"@babel/helpers - typeof\"; return EditableCircle_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableCircle_typeof(obj); }\r\n\r\nfunction EditableCircle_slicedToArray(arr, i) { return EditableCircle_arrayWithHoles(arr) || EditableCircle_iterableToArrayLimit(arr, i) || EditableCircle_unsupportedIterableToArray(arr, i) || EditableCircle_nonIterableRest(); }\r\n\r\nfunction EditableCircle_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction EditableCircle_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return EditableCircle_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EditableCircle_arrayLikeToArray(o, minLen); }\r\n\r\nfunction EditableCircle_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction EditableCircle_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction EditableCircle_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction EditableCircle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableCircle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableCircle_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableCircle_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableCircle_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableCircle_get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { EditableCircle_get = Reflect.get.bind(); } else { EditableCircle_get = function _get(target, property, receiver) { var base = EditableCircle_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return EditableCircle_get.apply(this, arguments); }\r\n\r\nfunction EditableCircle_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditableCircle_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditableCircle_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableCircle_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableCircle_setPrototypeOf(o, p) { EditableCircle_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableCircle_setPrototypeOf(o, p); }\r\n\r\nfunction EditableCircle_createSuper(Derived) { var hasNativeReflectConstruct = EditableCircle_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableCircle_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableCircle_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableCircle_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableCircle_possibleConstructorReturn(self, call) { if (call && (EditableCircle_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableCircle_assertThisInitialized(self); }\r\n\r\nfunction EditableCircle_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableCircle_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableCircle_getPrototypeOf(o) { EditableCircle_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableCircle_getPrototypeOf(o); }\r\n\r\nfunction EditableCircle_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * An editable circle shape.\r\n */\r\n\r\nvar EditableCircle = /*#__PURE__*/function (_EditableShape) {\r\n  EditableCircle_inherits(EditableCircle, _EditableShape);\r\n\r\n  var _super = EditableCircle_createSuper(EditableCircle);\r\n\r\n  function EditableCircle(_annotation, g, config, env) {\r\n    var _this;\r\n\r\n    EditableCircle_classCallCheck(this, EditableCircle);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"setSize\", function (cx, cy, r) {\r\n      setCircleSize(_this.circle, cx, cy, r);\r\n\r\n      _this.mask.redraw();\r\n\r\n      setFormatterElSize(_this.elementGroup, cx, cy, r, r);\r\n\r\n      var _this$handles = EditableCircle_slicedToArray(_this.handles, 4),\r\n          topleft = _this$handles[0],\r\n          topright = _this$handles[1],\r\n          bottomright = _this$handles[2],\r\n          bottomleft = _this$handles[3];\r\n\r\n      _this.setHandleXY(topleft, cx, cy - r);\r\n\r\n      _this.setHandleXY(topright, cx + r, cy);\r\n\r\n      _this.setHandleXY(bottomright, cx, cy + r);\r\n\r\n      _this.setHandleXY(bottomleft, cx - r, cy);\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"stretchCorners\", function (draggedHandleIdx, anchorHandle, mousePos) {\r\n      var anchor = _this.getHandleXY(anchorHandle);\r\n\r\n      var mouseX = mousePos.x;\r\n      var mouseY = mousePos.y;\r\n      var width = 0;\r\n      var height = 0;\r\n      var r;\r\n\r\n      if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\r\n        mouseX = anchor.x;\r\n        height = mouseY - anchor.y;\r\n        r = Math.abs(height) / 2;\r\n      } else {\r\n        mouseY = anchor.y;\r\n        width = mouseX - anchor.x;\r\n        r = Math.abs(width) / 2;\r\n      }\r\n\r\n      var x = width > 0 ? anchor.x : mouseX;\r\n      var y = height > 0 ? anchor.y : mouseY;\r\n      var w = Math.abs(width);\r\n      var h = Math.abs(height);\r\n      var cx = x + w / 2;\r\n      var cy = y + h / 2;\r\n      setCircleSize(_this.circle, cx, cy, r);\r\n\r\n      _this.mask.redraw();\r\n\r\n      setFormatterElSize(_this.elementGroup, cx, cy, r, r);\r\n\r\n      if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\r\n        var idx0 = 0;\r\n        var idx2 = 2;\r\n\r\n        if (draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\r\n          idx0 = 2;\r\n          idx2 = 0;\r\n        }\r\n\r\n        _this.setHandleXY(_this.handles[idx0], cx, cy - r);\r\n\r\n        _this.setHandleXY(_this.handles[idx2], cx, cy + r);\r\n\r\n        _this.setHandleXY(_this.handles[1], cx + r, cy);\r\n\r\n        _this.setHandleXY(_this.handles[3], cx - r, cy);\r\n      } else {\r\n        var idx3 = 3;\r\n        var idx1 = 1;\r\n\r\n        if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\r\n          idx3 = 1;\r\n          idx1 = 3;\r\n        }\r\n\r\n        _this.setHandleXY(_this.handles[idx3], cx + r, cy);\r\n\r\n        _this.setHandleXY(_this.handles[idx1], cx - r, cy);\r\n\r\n        _this.setHandleXY(_this.handles[0], cx, cy - r);\r\n\r\n        _this.setHandleXY(_this.handles[2], cx, cy + r);\r\n      }\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"onGrab\", function (grabbedElem) {\r\n      return function (evt) {\r\n        _this.grabbedElem = grabbedElem;\r\n\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        var _getCircleSize = getCircleSize(_this.circle),\r\n            cx = _getCircleSize.cx,\r\n            cy = _getCircleSize.cy;\r\n\r\n        _this.grabbedAt = {\r\n          x: pos.x - cx,\r\n          y: pos.y - cy\r\n        };\r\n      };\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      var constrain = function constrain(coord, max) {\r\n        return coord < 0 ? 0 : coord > max ? max : coord;\r\n      };\r\n\r\n      if (_this.grabbedElem) {\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        if (_this.grabbedElem === _this.circle) {\r\n          var _getCircleSize2 = getCircleSize(_this.circle),\r\n              r = _getCircleSize2.r;\r\n\r\n          var _this$env$image = _this.env.image,\r\n              naturalWidth = _this$env$image.naturalWidth,\r\n              naturalHeight = _this$env$image.naturalHeight;\r\n          var cx = Math.max(constrain(pos.x - _this.grabbedAt.x, naturalWidth - r), r);\r\n          var cy = Math.max(constrain(pos.y - _this.grabbedAt.y, naturalHeight - r), r);\r\n\r\n          _this.setSize(cx, cy, r);\r\n\r\n          _this.emit('update', toSVGTarget(_this.circle, _this.env.image));\r\n        } else {\r\n          // Mouse position replaces one of the corner coords, depending\r\n          // on which handle is the grabbed element\r\n          var handleIdx = _this.handles.indexOf(_this.grabbedElem);\r\n\r\n          var oppositeHandle = handleIdx < 2 ? _this.handles[handleIdx + 2] : _this.handles[handleIdx - 2];\r\n\r\n          _this.stretchCorners(handleIdx, oppositeHandle, pos);\r\n\r\n          _this.emit('update', toSVGTarget(_this.circle, _this.env.image));\r\n        }\r\n      }\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"onMouseUp\", function () {\r\n      _this.grabbedElem = null;\r\n      _this.grabbedAt = null;\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"onScaleChanged\", function (scale) {\r\n      return _this.handles.map(_this.scaleHandle);\r\n    });\r\n\r\n    EditableCircle_defineProperty(EditableCircle_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var shape = svgFragmentToShape(annotation);\r\n      var cx = parseFloat(shape.getAttribute('cx'));\r\n      var cy = parseFloat(shape.getAttribute('cy'));\r\n      var r = parseFloat(shape.getAttribute('r'));\r\n\r\n      _this.setSize(cx, cy, r);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp); // SVG markup for this class looks like this:\r\n    // \r\n    // <g>\r\n    //   <path class=\"a9s-selection mask\"... />\r\n    //   <g> <-- return this node as .element\r\n    //     <circle class=\"a9s-outer\" ... />\r\n    //     <circle class=\"a9s-inner\" ... />\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //   </g> \r\n    // </g>\r\n    // 'g' for the editable circle compound shape\r\n\r\n\r\n    _this.containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.circle = drawEmbeddedSVG(_annotation);\r\n\r\n    _this.circle.querySelector('.a9s-inner').addEventListener('mousedown', _this.onGrab(_this.circle));\r\n\r\n    _this.mask = new CircleMask(env.image, _this.circle);\r\n\r\n    _this.containerGroup.appendChild(_this.mask.element); // The 'element' = circle + handles\r\n\r\n\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.elementGroup.appendChild(_this.circle);\r\n\r\n    var _getCircleSize3 = getCircleSize(_this.circle),\r\n        _cx = _getCircleSize3.cx,\r\n        _cy = _getCircleSize3.cy,\r\n        _r = _getCircleSize3.r;\r\n\r\n    _this.handles = [[_cx, _cy - _r], [_cx + _r, _cy], [_cx, _cy + _r], [_cx - _r, _cy]].map(function (t) {\r\n      var _t = EditableCircle_slicedToArray(t, 2),\r\n          x = _t[0],\r\n          y = _t[1];\r\n\r\n      var handle = _this.drawHandle(x, y);\r\n\r\n      handle.addEventListener('mousedown', _this.onGrab(handle));\r\n\r\n      _this.elementGroup.appendChild(handle);\r\n\r\n      return handle;\r\n    });\r\n\r\n    _this.containerGroup.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.containerGroup);\r\n    format(_this.circle, _annotation, config.formatter); // The grabbed element (handle or entire group), if any\r\n\r\n    _this.grabbedElem = null; // Mouse xy offset inside the shape, if mouse pressed\r\n\r\n    _this.grabbedAt = null;\r\n    return _this;\r\n  }\r\n\r\n  EditableCircle_createClass(EditableCircle, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.containerGroup.parentNode.removeChild(this.containerGroup);\r\n\r\n      EditableCircle_get(EditableCircle_getPrototypeOf(EditableCircle.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }]);\r\n\r\n  return EditableCircle;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/circle/RubberbandCircleTool.js\r\nfunction RubberbandCircleTool_typeof(obj) { \"@babel/helpers - typeof\"; return RubberbandCircleTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, RubberbandCircleTool_typeof(obj); }\r\n\r\nfunction RubberbandCircleTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandCircleTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandCircleTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandCircleTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandCircleTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandCircleTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) RubberbandCircleTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction RubberbandCircleTool_setPrototypeOf(o, p) { RubberbandCircleTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RubberbandCircleTool_setPrototypeOf(o, p); }\r\n\r\nfunction RubberbandCircleTool_createSuper(Derived) { var hasNativeReflectConstruct = RubberbandCircleTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RubberbandCircleTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RubberbandCircleTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RubberbandCircleTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction RubberbandCircleTool_possibleConstructorReturn(self, call) { if (call && (RubberbandCircleTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RubberbandCircleTool_assertThisInitialized(self); }\r\n\r\nfunction RubberbandCircleTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction RubberbandCircleTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction RubberbandCircleTool_getPrototypeOf(o) { RubberbandCircleTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RubberbandCircleTool_getPrototypeOf(o); }\r\n\r\nfunction RubberbandCircleTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * A rubberband selector for circle selections.\r\n */\r\n\r\nvar RubberbandCircleTool = /*#__PURE__*/function (_Tool) {\r\n  RubberbandCircleTool_inherits(RubberbandCircleTool, _Tool);\r\n\r\n  var _super = RubberbandCircleTool_createSuper(RubberbandCircleTool);\r\n\r\n  function RubberbandCircleTool(g, config, env) {\r\n    var _this;\r\n\r\n    RubberbandCircleTool_classCallCheck(this, RubberbandCircleTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    RubberbandCircleTool_defineProperty(RubberbandCircleTool_assertThisInitialized(_this), \"startDrawing\", function (x, y) {\r\n      _this.attachListeners({\r\n        mouseMove: _this.onMouseMove,\r\n        mouseUp: _this.onMouseUp\r\n      });\r\n\r\n      _this.rubberband = new RubberbandCircle(x, y, _this.g, _this.env);\r\n    });\r\n\r\n    RubberbandCircleTool_defineProperty(RubberbandCircleTool_assertThisInitialized(_this), \"stop\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.destroy();\r\n\r\n        _this.rubberband = null;\r\n      }\r\n    });\r\n\r\n    RubberbandCircleTool_defineProperty(RubberbandCircleTool_assertThisInitialized(_this), \"onMouseMove\", function (x, y) {\r\n      return _this.rubberband.dragTo(x, y);\r\n    });\r\n\r\n    RubberbandCircleTool_defineProperty(RubberbandCircleTool_assertThisInitialized(_this), \"onMouseUp\", function () {\r\n      _this.detachListeners();\r\n\r\n      _this.started = false;\r\n\r\n      var _this$rubberband$getB = _this.rubberband.getBoundingClientRect(),\r\n          width = _this$rubberband$getB.width,\r\n          height = _this$rubberband$getB.height;\r\n\r\n      var minWidth = _this.config.minSelectionWidth || 4;\r\n      var minHeight = _this.config.minSelectionHeight || 4;\r\n\r\n      if (width >= minWidth && height >= minHeight) {\r\n        // Emit the SVG shape with selection attached    \r\n        var element = _this.rubberband.element;\r\n        element.annotation = _this.rubberband.toSelection(); // Emit the completed shape...\r\n\r\n        _this.emit('complete', element);\r\n      } else {\r\n        _this.emit('cancel');\r\n      }\r\n\r\n      _this.stop();\r\n    });\r\n\r\n    RubberbandCircleTool_defineProperty(RubberbandCircleTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditableCircle(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    _this.rubberband = null;\r\n    return _this;\r\n  }\r\n\r\n  RubberbandCircleTool_createClass(RubberbandCircleTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      return this.rubberband != null;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandCircleTool;\r\n}(Tool);\r\n\r\n\r\nRubberbandCircleTool.identifier = 'circle';\r\n\r\nRubberbandCircleTool.supports = function (annotation) {\r\n  var _selector$value;\r\n\r\n  var selector = annotation.selector('SvgSelector');\r\n  if (selector) return (_selector$value = selector.value) === null || _selector$value === void 0 ? void 0 : _selector$value.match(/^<svg.*<circle/g);\r\n};\r\n;// CONCATENATED MODULE: ./src/ellipse/Ellipse.js\r\n\r\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\r\n\r\nvar Ellipse_setXYR = function setXYR(shape, x, y, rx, ry) {\r\n  shape.setAttribute('cx', x);\r\n  shape.setAttribute('cy', y);\r\n  shape.setAttribute('rx', rx);\r\n  shape.setAttribute('ry', ry);\r\n};\r\n/** \r\n * Draws an SVG ellipse, either from an annotation, or an\r\n * (cx, cy, rx, ry)-tuple.\r\n */\r\n\r\n\r\nvar drawEllipse = function drawEllipse(cx, cy, rx, ry) {\r\n  var g = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n  var innerEllipse = document.createElementNS(SVG_SVG_NAMESPACE, 'ellipse');\r\n  var outerEllipse = document.createElementNS(SVG_SVG_NAMESPACE, 'ellipse');\r\n  innerEllipse.setAttribute('class', 'a9s-inner');\r\n  Ellipse_setXYR(innerEllipse, cx, cy, rx, ry);\r\n  outerEllipse.setAttribute('class', 'a9s-outer');\r\n  Ellipse_setXYR(outerEllipse, cx, cy, rx, ry);\r\n  g.appendChild(outerEllipse);\r\n  g.appendChild(innerEllipse);\r\n  return g;\r\n};\r\nvar setEllipseSize = function setEllipseSize(g, cx, cy, rx, ry) {\r\n  var innerEllipse = g.querySelector('.a9s-inner');\r\n  var outerEllipse = g.querySelector('.a9s-outer');\r\n  Ellipse_setXYR(innerEllipse, cx, cy, rx, ry);\r\n  Ellipse_setXYR(outerEllipse, cx, cy, rx, ry);\r\n};\r\nvar getEllipseSize = function getEllipseSize(g) {\r\n  var outerEllipse = g.querySelector('.a9s-outer');\r\n  var cx = parseFloat(outerEllipse.getAttribute('cx'));\r\n  var cy = parseFloat(outerEllipse.getAttribute('cy'));\r\n  var rx = parseFloat(outerEllipse.getAttribute('rx'));\r\n  var ry = parseFloat(outerEllipse.getAttribute('ry'));\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    rx: rx,\r\n    ry: ry\r\n  };\r\n};\r\n;// CONCATENATED MODULE: ./src/ellipse/EllipseMask.js\r\nfunction EllipseMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EllipseMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EllipseMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) EllipseMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) EllipseMask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EllipseMask_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\nvar EllipseMask = /*#__PURE__*/function () {\r\n  function EllipseMask(imageDimensions, ellipse) {\r\n    var _this = this;\r\n\r\n    EllipseMask_classCallCheck(this, EllipseMask);\r\n\r\n    EllipseMask_defineProperty(this, \"redraw\", function () {\r\n      var _getEllipseSize = getEllipseSize(_this.ellipse),\r\n          cx = _getEllipseSize.cx,\r\n          cy = _getEllipseSize.cy,\r\n          rx = _getEllipseSize.rx,\r\n          ry = _getEllipseSize.ry;\r\n\r\n      var ty = cy + ry;\r\n\r\n      _this.mask.setAttribute('d', \"M0 0 h\".concat(_this.w, \" v\").concat(_this.h, \" h-\").concat(_this.w, \" z M\").concat(cx, \" \").concat(ty, \" a \").concat(rx, \" \").concat(ry, \" 0 1 1 1 0\"));\r\n    });\r\n\r\n    EllipseMask_defineProperty(this, \"destroy\", function () {\r\n      return _this.mask.parentNode.removeChild(_this.mask);\r\n    });\r\n\r\n    this.w = imageDimensions.naturalWidth;\r\n    this.h = imageDimensions.naturalHeight;\r\n    this.ellipse = ellipse;\r\n\r\n    var _getEllipseSize2 = getEllipseSize(this.ellipse),\r\n        _cx = _getEllipseSize2.cx,\r\n        _cy = _getEllipseSize2.cy,\r\n        _rx = _getEllipseSize2.rx,\r\n        _ry = _getEllipseSize2.ry;\r\n\r\n    var _ty = _cy + _ry;\r\n\r\n    this.mask = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.mask.setAttribute('fill-rule', 'evenodd');\r\n    this.mask.setAttribute('class', 'a9s-selection-mask');\r\n    this.mask.setAttribute('d', \"M0 0 h\".concat(this.w, \" v\").concat(this.h, \" h-\").concat(this.w, \" z M\").concat(_cx, \" \").concat(_ty, \" a \").concat(_rx, \" \").concat(_ry, \" 0 1 1 1 0\"));\r\n  }\r\n\r\n  EllipseMask_createClass(EllipseMask, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.mask;\r\n    }\r\n  }]);\r\n\r\n  return EllipseMask;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/ellipse/RubberbandEllipse.js\r\nfunction RubberbandEllipse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandEllipse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandEllipse_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandEllipse_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandEllipse_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandEllipse_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating a ellipse by\r\n * clicking and dragging.\r\n */\r\n\r\nvar RubberbandEllipse = /*#__PURE__*/function () {\r\n  function RubberbandEllipse(anchorX, anchorY, g, env) {\r\n    var _this = this;\r\n\r\n    RubberbandEllipse_classCallCheck(this, RubberbandEllipse);\r\n\r\n    RubberbandEllipse_defineProperty(this, \"dragTo\", function (oppositeX, oppositeY) {\r\n      // Make visible\r\n      _this.group.style.display = null;\r\n      var w = oppositeX - _this.anchor[0];\r\n      var h = oppositeY - _this.anchor[1];\r\n      var cx = w > 0 ? _this.anchor[0] + w / 2 : oppositeX + w / 2;\r\n      var cy = h > 0 ? _this.anchor[1] + h / 2 : oppositeY + h / 2;\r\n      var rx = Math.abs(w / 2);\r\n      var ry = Math.abs(h / 2);\r\n      setEllipseSize(_this.ellipse, cx, cy, rx, ry);\r\n\r\n      _this.mask.redraw();\r\n    });\r\n\r\n    RubberbandEllipse_defineProperty(this, \"getBoundingClientRect\", function () {\r\n      return _this.ellipse.getBoundingClientRect();\r\n    });\r\n\r\n    RubberbandEllipse_defineProperty(this, \"toSelection\", function () {\r\n      return new Selection(toSVGTarget(_this.group, _this.env.image));\r\n    });\r\n\r\n    RubberbandEllipse_defineProperty(this, \"destroy\", function () {\r\n      _this.group.parentNode.removeChild(_this.group);\r\n\r\n      _this.mask = null;\r\n      _this.ellipse = null;\r\n      _this.group = null;\r\n    });\r\n\r\n    this.anchor = [anchorX, anchorY];\r\n    this.env = env;\r\n    this.group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\r\n    this.ellipse.setAttribute('class', 'a9s-selection');\r\n    this.mask = new EllipseMask(env.image, this.ellipse); // We make the selection transparent to \r\n    // pointer events because it would interfere with the \r\n    // rendered annotations' mouseleave/enter events\r\n\r\n    this.group.style.pointerEvents = 'none'; // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n\r\n    this.group.style.display = 'none';\r\n    this.group.appendChild(this.mask.element);\r\n    this.group.appendChild(this.ellipse);\r\n    g.appendChild(this.group);\r\n  }\r\n\r\n  RubberbandEllipse_createClass(RubberbandEllipse, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.ellipse;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandEllipse;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/ellipse/EditableEllipse.js\r\nfunction EditableEllipse_typeof(obj) { \"@babel/helpers - typeof\"; return EditableEllipse_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableEllipse_typeof(obj); }\r\n\r\nfunction EditableEllipse_slicedToArray(arr, i) { return EditableEllipse_arrayWithHoles(arr) || EditableEllipse_iterableToArrayLimit(arr, i) || EditableEllipse_unsupportedIterableToArray(arr, i) || EditableEllipse_nonIterableRest(); }\r\n\r\nfunction EditableEllipse_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction EditableEllipse_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return EditableEllipse_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EditableEllipse_arrayLikeToArray(o, minLen); }\r\n\r\nfunction EditableEllipse_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction EditableEllipse_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction EditableEllipse_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction EditableEllipse_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableEllipse_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableEllipse_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableEllipse_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableEllipse_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableEllipse_get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { EditableEllipse_get = Reflect.get.bind(); } else { EditableEllipse_get = function _get(target, property, receiver) { var base = EditableEllipse_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return EditableEllipse_get.apply(this, arguments); }\r\n\r\nfunction EditableEllipse_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditableEllipse_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditableEllipse_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableEllipse_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableEllipse_setPrototypeOf(o, p) { EditableEllipse_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableEllipse_setPrototypeOf(o, p); }\r\n\r\nfunction EditableEllipse_createSuper(Derived) { var hasNativeReflectConstruct = EditableEllipse_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableEllipse_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableEllipse_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableEllipse_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableEllipse_possibleConstructorReturn(self, call) { if (call && (EditableEllipse_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableEllipse_assertThisInitialized(self); }\r\n\r\nfunction EditableEllipse_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableEllipse_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableEllipse_getPrototypeOf(o) { EditableEllipse_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableEllipse_getPrototypeOf(o); }\r\n\r\nfunction EditableEllipse_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * An editable ellipse shape.\r\n */\r\n\r\nvar EditableEllipse = /*#__PURE__*/function (_EditableShape) {\r\n  EditableEllipse_inherits(EditableEllipse, _EditableShape);\r\n\r\n  var _super = EditableEllipse_createSuper(EditableEllipse);\r\n\r\n  function EditableEllipse(_annotation, g, config, env) {\r\n    var _this;\r\n\r\n    EditableEllipse_classCallCheck(this, EditableEllipse);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"setSize\", function (cx, cy, rx, ry) {\r\n      setEllipseSize(_this.ellipse, cx, cy, rx, ry);\r\n\r\n      _this.mask.redraw();\r\n\r\n      setFormatterElSize(_this.elementGroup, cx, cy, rx, ry);\r\n\r\n      var _this$handles = EditableEllipse_slicedToArray(_this.handles, 4),\r\n          topleft = _this$handles[0],\r\n          topright = _this$handles[1],\r\n          bottomright = _this$handles[2],\r\n          bottomleft = _this$handles[3];\r\n\r\n      _this.setHandleXY(topleft, cx, cy - ry);\r\n\r\n      _this.setHandleXY(topright, cx + rx, cy);\r\n\r\n      _this.setHandleXY(bottomright, cx, cy + ry);\r\n\r\n      _this.setHandleXY(bottomleft, cx - rx, cy);\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"stretchCorners\", function (draggedHandleIdx, anchorHandle, leftHandle, mousePos) {\r\n      var anchor = _this.getHandleXY(anchorHandle);\r\n\r\n      var anchorLeft = _this.getHandleXY(leftHandle);\r\n\r\n      var mouseX = mousePos.x;\r\n      var mouseY = mousePos.y;\r\n      var rx = 0;\r\n      var ry = 0;\r\n\r\n      if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\r\n        mouseX = anchor.x;\r\n      } else {\r\n        mouseY = anchor.y;\r\n      }\r\n\r\n      var width = mouseX - anchor.x;\r\n      var height = mouseY - anchor.y;\r\n      var x = width > 0 ? anchor.x : mouseX;\r\n      var y = height > 0 ? anchor.y : mouseY;\r\n      var w = Math.abs(width);\r\n      var h = Math.abs(height);\r\n      var cx = x + w / 2;\r\n      var cy = y + h / 2;\r\n      var rx = w / 2;\r\n      var ry = h / 2;\r\n\r\n      if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\r\n        rx = Math.abs(anchor.x - anchorLeft.x);\r\n      } else {\r\n        ry = Math.abs(anchor.y - anchorLeft.y);\r\n      }\r\n\r\n      setEllipseSize(_this.ellipse, cx, cy, rx, ry);\r\n\r\n      _this.mask.redraw();\r\n\r\n      setFormatterElSize(_this.elementGroup, cx, cy, rx, ry);\r\n\r\n      if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\r\n        var idx0 = 0;\r\n        var idx2 = 2;\r\n\r\n        if (draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\r\n          idx0 = 2;\r\n          idx2 = 0;\r\n        }\r\n\r\n        _this.setHandleXY(_this.handles[idx0], cx, cy - ry);\r\n\r\n        _this.setHandleXY(_this.handles[idx2], cx, cy + ry);\r\n\r\n        _this.setHandleXY(_this.handles[1], cx + rx, cy);\r\n\r\n        _this.setHandleXY(_this.handles[3], cx - rx, cy);\r\n      } else {\r\n        var idx3 = 3;\r\n        var idx1 = 1;\r\n\r\n        if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\r\n          idx3 = 1;\r\n          idx1 = 3;\r\n        }\r\n\r\n        _this.setHandleXY(_this.handles[idx3], cx + rx, cy);\r\n\r\n        _this.setHandleXY(_this.handles[idx1], cx - rx, cy);\r\n\r\n        _this.setHandleXY(_this.handles[0], cx, cy - ry);\r\n\r\n        _this.setHandleXY(_this.handles[2], cx, cy + ry);\r\n      }\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"onGrab\", function (grabbedElem) {\r\n      return function (evt) {\r\n        _this.grabbedElem = grabbedElem;\r\n\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        var _getEllipseSize = getEllipseSize(_this.ellipse),\r\n            cx = _getEllipseSize.cx,\r\n            cy = _getEllipseSize.cy;\r\n\r\n        _this.grabbedAt = {\r\n          x: pos.x - cx,\r\n          y: pos.y - cy\r\n        };\r\n      };\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      var constrain = function constrain(coord, max) {\r\n        return coord < 0 ? 0 : coord > max ? max : coord;\r\n      };\r\n\r\n      if (_this.grabbedElem) {\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        if (_this.grabbedElem === _this.ellipse) {\r\n          var _getEllipseSize2 = getEllipseSize(_this.ellipse),\r\n              rx = _getEllipseSize2.rx,\r\n              ry = _getEllipseSize2.ry;\r\n\r\n          var _this$env$image = _this.env.image,\r\n              naturalWidth = _this$env$image.naturalWidth,\r\n              naturalHeight = _this$env$image.naturalHeight;\r\n          var cx = constrain(pos.x - _this.grabbedAt.x, naturalWidth - rx);\r\n          var cy = constrain(pos.y - _this.grabbedAt.y, naturalHeight - ry);\r\n\r\n          _this.setSize(cx, cy, rx, ry);\r\n\r\n          _this.emit('update', toSVGTarget(_this.ellipse, _this.env.image));\r\n        } else {\r\n          // Mouse position replaces one of the corner coords, depending\r\n          // on which handle is the grabbed element\r\n          var handleIdx = _this.handles.indexOf(_this.grabbedElem);\r\n\r\n          var oppositeHandle = handleIdx < 2 ? _this.handles[handleIdx + 2] : _this.handles[handleIdx - 2];\r\n          var leftHandle = _this.handles[(handleIdx + 3) % 4];\r\n\r\n          _this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\r\n\r\n          _this.emit('update', toSVGTarget(_this.ellipse, _this.env.image));\r\n        }\r\n      }\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"onMouseUp\", function () {\r\n      _this.grabbedElem = null;\r\n      _this.grabbedAt = null;\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"onScaleChanged\", function (scale) {\r\n      return _this.handles.map(_this.scaleHandle);\r\n    });\r\n\r\n    EditableEllipse_defineProperty(EditableEllipse_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var shape = svgFragmentToShape(annotation);\r\n      var cx = parseFloat(shape.getAttribute('cx'));\r\n      var cy = parseFloat(shape.getAttribute('cy'));\r\n      var rx = parseFloat(shape.getAttribute('rx'));\r\n      var ry = parseFloat(shape.getAttribute('ry'));\r\n\r\n      _this.setSize(cx, cy, rx, ry);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp); // SVG markup for this class looks like this:\r\n    // \r\n    // <g>\r\n    //   <path class=\"a9s-selection mask\"... />\r\n    //   <g> <-- return this node as .element\r\n    //     <ellipse class=\"a9s-outer\" ... />\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //   </g> \r\n    // </g>\r\n    // 'g' for the editable ellipse compound shape\r\n\r\n\r\n    _this.containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.ellipse = drawEmbeddedSVG(_annotation);\r\n\r\n    _this.ellipse.querySelector('.a9s-inner').addEventListener('mousedown', _this.onGrab(_this.ellipse));\r\n\r\n    _this.mask = new EllipseMask(env.image, _this.ellipse);\r\n\r\n    _this.containerGroup.appendChild(_this.mask.element); // The 'element' = ellipse + handles\r\n\r\n\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.elementGroup.appendChild(_this.ellipse);\r\n\r\n    var _getEllipseSize3 = getEllipseSize(_this.ellipse),\r\n        _cx = _getEllipseSize3.cx,\r\n        _cy = _getEllipseSize3.cy,\r\n        _rx = _getEllipseSize3.rx,\r\n        _ry = _getEllipseSize3.ry;\r\n\r\n    _this.handles = [[_cx, _cy - _ry], [_cx + _rx, _cy], [_cx, _cy + _ry], [_cx - _rx, _cy]].map(function (t) {\r\n      var _t = EditableEllipse_slicedToArray(t, 2),\r\n          x = _t[0],\r\n          y = _t[1];\r\n\r\n      var handle = _this.drawHandle(x, y);\r\n\r\n      handle.addEventListener('mousedown', _this.onGrab(handle));\r\n\r\n      _this.elementGroup.appendChild(handle);\r\n\r\n      return handle;\r\n    });\r\n\r\n    _this.containerGroup.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.containerGroup);\r\n    format(_this.ellipse, _annotation, config.formatter); // The grabbed element (handle or entire group), if any\r\n\r\n    _this.grabbedElem = null; // Mouse xy offset inside the shape, if mouse pressed\r\n\r\n    _this.grabbedAt = null;\r\n    return _this;\r\n  }\r\n\r\n  EditableEllipse_createClass(EditableEllipse, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    }\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this.containerGroup.parentNode.removeChild(this.containerGroup);\r\n\r\n      EditableEllipse_get(EditableEllipse_getPrototypeOf(EditableEllipse.prototype), \"destroy\", this).call(this);\r\n    }\r\n  }]);\r\n\r\n  return EditableEllipse;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/ellipse/RubberbandEllipseTool.js\r\nfunction RubberbandEllipseTool_typeof(obj) { \"@babel/helpers - typeof\"; return RubberbandEllipseTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, RubberbandEllipseTool_typeof(obj); }\r\n\r\nfunction RubberbandEllipseTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandEllipseTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandEllipseTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandEllipseTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandEllipseTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandEllipseTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) RubberbandEllipseTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction RubberbandEllipseTool_setPrototypeOf(o, p) { RubberbandEllipseTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RubberbandEllipseTool_setPrototypeOf(o, p); }\r\n\r\nfunction RubberbandEllipseTool_createSuper(Derived) { var hasNativeReflectConstruct = RubberbandEllipseTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RubberbandEllipseTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RubberbandEllipseTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RubberbandEllipseTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction RubberbandEllipseTool_possibleConstructorReturn(self, call) { if (call && (RubberbandEllipseTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RubberbandEllipseTool_assertThisInitialized(self); }\r\n\r\nfunction RubberbandEllipseTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction RubberbandEllipseTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction RubberbandEllipseTool_getPrototypeOf(o) { RubberbandEllipseTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RubberbandEllipseTool_getPrototypeOf(o); }\r\n\r\nfunction RubberbandEllipseTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * A rubberband selector for ellipse selections.\r\n */\r\n\r\nvar RubberbandEllipseTool = /*#__PURE__*/function (_Tool) {\r\n  RubberbandEllipseTool_inherits(RubberbandEllipseTool, _Tool);\r\n\r\n  var _super = RubberbandEllipseTool_createSuper(RubberbandEllipseTool);\r\n\r\n  function RubberbandEllipseTool(g, config, env) {\r\n    var _this;\r\n\r\n    RubberbandEllipseTool_classCallCheck(this, RubberbandEllipseTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    RubberbandEllipseTool_defineProperty(RubberbandEllipseTool_assertThisInitialized(_this), \"startDrawing\", function (x, y) {\r\n      _this.attachListeners({\r\n        mouseMove: _this.onMouseMove,\r\n        mouseUp: _this.onMouseUp\r\n      });\r\n\r\n      _this.rubberband = new RubberbandEllipse(x, y, _this.g, _this.env);\r\n    });\r\n\r\n    RubberbandEllipseTool_defineProperty(RubberbandEllipseTool_assertThisInitialized(_this), \"stop\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.destroy();\r\n\r\n        _this.rubberband = null;\r\n      }\r\n    });\r\n\r\n    RubberbandEllipseTool_defineProperty(RubberbandEllipseTool_assertThisInitialized(_this), \"onMouseMove\", function (x, y) {\r\n      return _this.rubberband.dragTo(x, y);\r\n    });\r\n\r\n    RubberbandEllipseTool_defineProperty(RubberbandEllipseTool_assertThisInitialized(_this), \"onMouseUp\", function () {\r\n      _this.detachListeners();\r\n\r\n      _this.started = false;\r\n\r\n      var _this$rubberband$getB = _this.rubberband.getBoundingClientRect(),\r\n          width = _this$rubberband$getB.width,\r\n          height = _this$rubberband$getB.height;\r\n\r\n      var minWidth = _this.config.minSelectionWidth || 4;\r\n      var minHeight = _this.config.minSelectionHeight || 4;\r\n\r\n      if (width >= minWidth && height >= minHeight) {\r\n        // Emit the SVG shape with selection attached    \r\n        var element = _this.rubberband.element;\r\n        element.annotation = _this.rubberband.toSelection(); // Emit the completed shape...\r\n\r\n        _this.emit('complete', element);\r\n      } else {\r\n        _this.emit('cancel');\r\n      }\r\n\r\n      _this.stop();\r\n    });\r\n\r\n    RubberbandEllipseTool_defineProperty(RubberbandEllipseTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditableEllipse(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    _this.rubberband = null;\r\n    return _this;\r\n  }\r\n\r\n  RubberbandEllipseTool_createClass(RubberbandEllipseTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      return this.rubberband != null;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandEllipseTool;\r\n}(Tool);\r\n\r\n\r\nRubberbandEllipseTool.identifier = 'ellipse';\r\n\r\nRubberbandEllipseTool.supports = function (annotation) {\r\n  var _selector$value;\r\n\r\n  var selector = annotation.selector('SvgSelector');\r\n  if (selector) return (_selector$value = selector.value) === null || _selector$value === void 0 ? void 0 : _selector$value.match(/^<svg.*<ellipse/g);\r\n};\r\n;// CONCATENATED MODULE: ./src/freehand/RubberbandFreehand.js\r\nfunction RubberbandFreehand_toConsumableArray(arr) { return RubberbandFreehand_arrayWithoutHoles(arr) || RubberbandFreehand_iterableToArray(arr) || RubberbandFreehand_unsupportedIterableToArray(arr) || RubberbandFreehand_nonIterableSpread(); }\r\n\r\nfunction RubberbandFreehand_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction RubberbandFreehand_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return RubberbandFreehand_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return RubberbandFreehand_arrayLikeToArray(o, minLen); }\r\n\r\nfunction RubberbandFreehand_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction RubberbandFreehand_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return RubberbandFreehand_arrayLikeToArray(arr); }\r\n\r\nfunction RubberbandFreehand_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction RubberbandFreehand_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandFreehand_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandFreehand_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandFreehand_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandFreehand_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandFreehand_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n // TODO optional: mask to dim the outside area\r\n//import Mask from './FreehandMask';\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating freehand drawing by\r\n * clicking and dragging.\r\n */\r\n\r\nvar RubberbandFreehand = /*#__PURE__*/function () {\r\n  function RubberbandFreehand(anchor, g, env) {\r\n    var _this = this;\r\n\r\n    RubberbandFreehand_classCallCheck(this, RubberbandFreehand);\r\n\r\n    RubberbandFreehand_defineProperty(this, \"setPoints\", function (points) {\r\n      var str = points.map(function (pt) {\r\n        return \"L\".concat(pt[0], \" \").concat(pt[1]);\r\n      }).join(' ');\r\n      str = 'M' + str.substring(1);\r\n\r\n      _this.outer.setAttribute('d', str);\r\n\r\n      _this.inner.setAttribute('d', str);\r\n    });\r\n\r\n    RubberbandFreehand_defineProperty(this, \"getBoundingClientRect\", function () {\r\n      return _this.outer.getBoundingClientRect();\r\n    });\r\n\r\n    RubberbandFreehand_defineProperty(this, \"dragTo\", function (xy) {\r\n      // Make visible\r\n      _this.group.style.display = null; //TODO optional: edge smoothing\r\n\r\n      _this.addPoint(xy); // TODO optional: mask to dim the outside area\r\n      // this.mask.redraw();\r\n\r\n    });\r\n\r\n    RubberbandFreehand_defineProperty(this, \"addPoint\", function (xy) {\r\n      _this.points = [].concat(RubberbandFreehand_toConsumableArray(_this.points), [xy]);\r\n\r\n      _this.setPoints(_this.points); // TODO optional: mask to dim the outside area\r\n      // this.mask.redraw();\r\n\r\n    });\r\n\r\n    RubberbandFreehand_defineProperty(this, \"destroy\", function () {\r\n      _this.group.parentNode.removeChild(_this.group);\r\n\r\n      _this.freehand = null;\r\n      _this.group = null;\r\n    });\r\n\r\n    RubberbandFreehand_defineProperty(this, \"toSelection\", function () {\r\n      return new Selection(toSVGTarget(_this.group, _this.env.image));\r\n    });\r\n\r\n    this.points = [anchor];\r\n    this.env = env;\r\n    this.group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.freehand = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.freehand.setAttribute('class', 'a9s-selection');\r\n    this.outer = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.outer.setAttribute('class', 'a9s-outer');\r\n    this.inner = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.inner.setAttribute('class', 'a9s-inner');\r\n    this.setPoints(this.points); // TODO optional: mask to dim the outside area\r\n    // this.mask = new Mask(env.image, this.inner);\r\n\r\n    this.freehand.appendChild(this.outer);\r\n    this.freehand.appendChild(this.inner); // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n\r\n    this.group.style.display = 'none'; // TODO optional: mask to dim the outside area\r\n    // this.group.appendChild(this.mask.element);\r\n\r\n    this.group.appendChild(this.freehand);\r\n    g.appendChild(this.group);\r\n  }\r\n\r\n  RubberbandFreehand_createClass(RubberbandFreehand, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.freehand;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandFreehand;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/freehand/EditableFreehand.js\r\nfunction EditableFreehand_typeof(obj) { \"@babel/helpers - typeof\"; return EditableFreehand_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableFreehand_typeof(obj); }\r\n\r\nfunction EditableFreehand_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableFreehand_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableFreehand_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableFreehand_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableFreehand_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableFreehand_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableFreehand_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableFreehand_setPrototypeOf(o, p) { EditableFreehand_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableFreehand_setPrototypeOf(o, p); }\r\n\r\nfunction EditableFreehand_createSuper(Derived) { var hasNativeReflectConstruct = EditableFreehand_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableFreehand_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableFreehand_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableFreehand_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableFreehand_possibleConstructorReturn(self, call) { if (call && (EditableFreehand_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableFreehand_assertThisInitialized(self); }\r\n\r\nfunction EditableFreehand_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableFreehand_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableFreehand_get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { EditableFreehand_get = Reflect.get.bind(); } else { EditableFreehand_get = function _get(target, property, receiver) { var base = EditableFreehand_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return EditableFreehand_get.apply(this, arguments); }\r\n\r\nfunction EditableFreehand_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditableFreehand_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditableFreehand_getPrototypeOf(o) { EditableFreehand_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableFreehand_getPrototypeOf(o); }\r\n\r\nfunction EditableFreehand_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n // TODO optional: mask to dim the outside area\r\n//import Mask from './FreehandMask';\r\n\r\nvar getPoints = function getPoints(shape) {\r\n  var pointList = shape.getAttribute('d').split('L');\r\n  var points = [];\r\n\r\n  if (pointList.length > 0) {\r\n    var point = pointList[0].substring(1).trim().split(' ');\r\n    points.push({\r\n      x: parseFloat(point[0]),\r\n      y: parseFloat(point[1])\r\n    });\r\n\r\n    for (var i = 1; i < pointList.length; i++) {\r\n      var point = pointList[i].trim().split(' ');\r\n      points.push({\r\n        x: parseFloat(point[0]),\r\n        y: parseFloat(point[1])\r\n      });\r\n    }\r\n  }\r\n\r\n  return points;\r\n};\r\n\r\nvar getBBox = function getBBox(shape) {\r\n  return shape.querySelector('.a9s-inner').getBBox();\r\n};\r\n/**\r\n * An editable freehand drawing.\r\n */\r\n\r\n\r\nvar EditableFreehand = /*#__PURE__*/function (_EditableShape) {\r\n  EditableFreehand_inherits(EditableFreehand, _EditableShape);\r\n\r\n  var _super = EditableFreehand_createSuper(EditableFreehand);\r\n\r\n  function EditableFreehand(_annotation, g, config, env) {\r\n    var _thisSuper, _this;\r\n\r\n    EditableFreehand_classCallCheck(this, EditableFreehand);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"setPoints\", function (points) {\r\n      // Not using .toFixed(1) because that will ALWAYS\r\n      // return one decimal, e.g. \"15.0\" (when we want \"15\")\r\n      var round = function round(num) {\r\n        return Math.round(10 * num) / 10;\r\n      };\r\n\r\n      var str = points.map(function (pt) {\r\n        return \"L\".concat(round(pt.x), \" \").concat(round(pt.y));\r\n      }).join(' ');\r\n      str = 'M' + str.substring(1);\r\n\r\n      var inner = _this.shape.querySelector('.a9s-inner');\r\n\r\n      inner.setAttribute('d', str);\r\n\r\n      var outer = _this.shape.querySelector('.a9s-outer');\r\n\r\n      outer.setAttribute('d', str);\r\n\r\n      var _outer$getBBox = outer.getBBox(),\r\n          x = _outer$getBBox.x,\r\n          y = _outer$getBBox.y,\r\n          width = _outer$getBBox.width,\r\n          height = _outer$getBBox.height; // TODO optional: mask to dim the outside area\r\n      // this.mask.redraw();\r\n      // TODO optional: handles to stretch the shape\r\n\r\n      /*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\r\n      \r\n          this.setHandleXY(topleft, x, y);\r\n          this.setHandleXY(topright, x + width, y);\r\n          this.setHandleXY(bottomright, x + width, y + height);\r\n          this.setHandleXY(bottomleft, x, y + height);*/\r\n\r\n\r\n      setFormatterElSize(_this.elementGroup, x, y, width, height);\r\n    });\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"onGrab\", function (grabbedElem) {\r\n      return function (evt) {\r\n        _this.grabbedElem = grabbedElem;\r\n\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        _this.grabbedAt = {\r\n          x: pos.x,\r\n          y: pos.y\r\n        };\r\n      };\r\n    });\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      var constrain = function constrain(coord, delta, max) {\r\n        return coord + delta < 0 ? -coord : coord + delta > max ? max - coord : delta;\r\n      };\r\n\r\n      if (_this.grabbedElem) {\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        var _getBBox = getBBox(_this.shape),\r\n            x = _getBBox.x,\r\n            y = _getBBox.y,\r\n            width = _getBBox.width,\r\n            height = _getBBox.height;\r\n\r\n        if (_this.grabbedElem === _this.shape) {\r\n          var _this$env$image = _this.env.image,\r\n              naturalWidth = _this$env$image.naturalWidth,\r\n              naturalHeight = _this$env$image.naturalHeight;\r\n          var dx = constrain(x, pos.x - _this.grabbedAt.x, naturalWidth - width);\r\n          var dy = constrain(y, pos.y - _this.grabbedAt.y, naturalHeight - height);\r\n\r\n          var inner = _this.shape.querySelector('.a9s-inner');\r\n\r\n          var updatedPoints = getPoints(inner).map(function (pt) {\r\n            return {\r\n              x: pt.x + dx,\r\n              y: pt.y + dy\r\n            };\r\n          });\r\n          _this.grabbedAt = pos;\r\n\r\n          _this.setPoints(updatedPoints);\r\n\r\n          _this.emit('update', toSVGTarget(_this.shape, _this.env.image));\r\n        } // TODO optional: handles to stretch the shape\r\n\r\n        /* else {\r\n          const handleIdx = this.handles.indexOf(this.grabbedElem);\r\n          const oppositeHandle = handleIdx < 2 ? \r\n            this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\r\n           this.stretchCorners(handleIdx, oppositeHandle, pos);\r\n           this.emit('update', toSVGTarget(this.shape, this.env.image));\r\n        }*/\r\n\r\n      }\r\n    });\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"onMouseUp\", function (evt) {\r\n      _this.grabbedElem = null;\r\n      _this.grabbedAt = null;\r\n    });\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var points = getPoints(svgFragmentToShape(annotation));\r\n\r\n      _this.setPoints(points);\r\n    });\r\n\r\n    EditableFreehand_defineProperty(EditableFreehand_assertThisInitialized(_this), \"destroy\", function () {\r\n      _this.containerGroup.parentNode.removeChild(_this.containerGroup);\r\n\r\n      EditableFreehand_get((_thisSuper = EditableFreehand_assertThisInitialized(_this), EditableFreehand_getPrototypeOf(EditableFreehand.prototype)), \"destroy\", _thisSuper).call(_thisSuper);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp); // SVG markup for this class looks like this:\r\n    // \r\n    // <g>\r\n    //   <path class=\"a9s-selection mask\"... />\r\n    //   <g> <-- return this node as .element\r\n    //     <polygon class=\"a9s-outer\" ... />\r\n    //     <polygon class=\"a9s-inner\" ... />\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     ...\r\n    //   </g> \r\n    // </g>\r\n    // 'g' for the editable free drawing compound shape\r\n\r\n\r\n    _this.containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.shape = drawEmbeddedSVG(_annotation); // TODO optional: mask to dim the outside area\r\n    // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\r\n    // this.containerGroup.appendChild(this.mask.element);\r\n\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.elementGroup.appendChild(_this.shape);\r\n\r\n    _this.containerGroup.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.containerGroup);\r\n    format(_this.shape, _annotation, config.formatter);\r\n\r\n    _this.shape.querySelector('.a9s-inner').addEventListener('mousedown', _this.onGrab(_this.shape));\r\n\r\n    var _getBBox2 = getBBox(_this.shape),\r\n        _x = _getBBox2.x,\r\n        _y = _getBBox2.y,\r\n        _width = _getBBox2.width,\r\n        _height = _getBBox2.height; // TODO optional: handles to stretch the shape\r\n\r\n    /*    this.handles = [\r\n          [ x, y ], \r\n          [ x + width, y ], \r\n          [ x + width, y + height ], \r\n          [ x, y + height ]\r\n        ].map(t => { \r\n          const [ x, y ] = t;\r\n          const handle = this.drawHandle(x, y);\r\n    \r\n          handle.addEventListener('mousedown', this.onGrab(handle));\r\n          this.elementGroup.appendChild(handle);\r\n    \r\n          return handle;\r\n        });*/\r\n    // The grabbed element (handle or entire shape), if any\r\n\r\n\r\n    _this.grabbedElem = null; // Mouse grab point\r\n\r\n    _this.grabbedAt = null;\r\n    return _this;\r\n  }\r\n\r\n  EditableFreehand_createClass(EditableFreehand, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    }\r\n  }]);\r\n\r\n  return EditableFreehand;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/freehand/RubberbandFreehandTool.js\r\nfunction RubberbandFreehandTool_typeof(obj) { \"@babel/helpers - typeof\"; return RubberbandFreehandTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, RubberbandFreehandTool_typeof(obj); }\r\n\r\nfunction RubberbandFreehandTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandFreehandTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandFreehandTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandFreehandTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandFreehandTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandFreehandTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) RubberbandFreehandTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction RubberbandFreehandTool_setPrototypeOf(o, p) { RubberbandFreehandTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RubberbandFreehandTool_setPrototypeOf(o, p); }\r\n\r\nfunction RubberbandFreehandTool_createSuper(Derived) { var hasNativeReflectConstruct = RubberbandFreehandTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RubberbandFreehandTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RubberbandFreehandTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RubberbandFreehandTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction RubberbandFreehandTool_possibleConstructorReturn(self, call) { if (call && (RubberbandFreehandTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RubberbandFreehandTool_assertThisInitialized(self); }\r\n\r\nfunction RubberbandFreehandTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction RubberbandFreehandTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction RubberbandFreehandTool_getPrototypeOf(o) { RubberbandFreehandTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RubberbandFreehandTool_getPrototypeOf(o); }\r\n\r\nfunction RubberbandFreehandTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * A rubberband selector for freehand fragments.\r\n */\r\n\r\nvar RubberbandFreehandTool = /*#__PURE__*/function (_Tool) {\r\n  RubberbandFreehandTool_inherits(RubberbandFreehandTool, _Tool);\r\n\r\n  var _super = RubberbandFreehandTool_createSuper(RubberbandFreehandTool);\r\n\r\n  function RubberbandFreehandTool(g, config, env) {\r\n    var _this;\r\n\r\n    RubberbandFreehandTool_classCallCheck(this, RubberbandFreehandTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"startDrawing\", function (x, y) {\r\n      _this._isDrawing = true;\r\n\r\n      _this.attachListeners({\r\n        mouseMove: _this.onMouseMove,\r\n        mouseUp: _this.onMouseUp,\r\n        dblClick: _this.onDblClick\r\n      });\r\n\r\n      _this.rubberband = new RubberbandFreehand([x, y], _this.g, _this.env);\r\n    });\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"stop\", function () {\r\n      _this.detachListeners();\r\n\r\n      _this._isDrawing = false;\r\n\r\n      if (_this.rubberband) {\r\n        _this.rubberband.destroy();\r\n\r\n        _this.rubberband = null;\r\n      }\r\n    });\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"onMouseMove\", function (x, y) {\r\n      return _this.rubberband.dragTo([x, y]);\r\n    });\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"onMouseUp\", function (x, y) {\r\n      _this.onDblClick(x, y);\r\n    });\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"onDblClick\", function (x, y) {\r\n      _this._isDrawing = false;\r\n\r\n      _this.rubberband.addPoint([x, y]);\r\n\r\n      _this.detachListeners();\r\n\r\n      var _this$rubberband$getB = _this.rubberband.getBoundingClientRect(),\r\n          width = _this$rubberband$getB.width,\r\n          height = _this$rubberband$getB.height;\r\n\r\n      var minWidth = _this.config.minSelectionWidth || 4;\r\n      var minHeight = _this.config.minSelectionHeight || 4;\r\n\r\n      if (width >= minWidth || height >= minHeight) {\r\n        var shape = _this.rubberband.element;\r\n        shape.annotation = _this.rubberband.toSelection();\r\n\r\n        _this.emit('complete', shape);\r\n      } else {\r\n        _this.emit('cancel');\r\n      }\r\n\r\n      _this.stop();\r\n    });\r\n\r\n    RubberbandFreehandTool_defineProperty(RubberbandFreehandTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditableFreehand(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    _this._isDrawing = false;\r\n    return _this;\r\n  }\r\n\r\n  RubberbandFreehandTool_createClass(RubberbandFreehandTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      return this._isDrawing;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandFreehandTool;\r\n}(Tool);\r\n\r\n\r\nRubberbandFreehandTool.identifier = 'freehand';\r\n\r\nRubberbandFreehandTool.supports = function (annotation) {\r\n  var selector = annotation.selector('SvgSelector');\r\n  if (selector) return selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z');\r\n};\r\n;// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/polygon/PolygonMask.js\r\nfunction PolygonMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction PolygonMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction PolygonMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) PolygonMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) PolygonMask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction PolygonMask_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\nvar PolygonMask = /*#__PURE__*/function () {\r\n  function PolygonMask(imageDimensions, polygon) {\r\n    var _this = this;\r\n\r\n    PolygonMask_classCallCheck(this, PolygonMask);\r\n\r\n    PolygonMask_defineProperty(this, \"redraw\", function () {\r\n      _this.mask.setAttribute('d', \"M0 0 h\".concat(_this.w, \" v\").concat(_this.h, \" h-\").concat(_this.w, \" z M\").concat(_this.polygon.getAttribute('points'), \" z\"));\r\n    });\r\n\r\n    PolygonMask_defineProperty(this, \"destroy\", function () {\r\n      return _this.mask.parentNode.removeChild(_this.mask);\r\n    });\r\n\r\n    this.w = imageDimensions.naturalWidth;\r\n    this.h = imageDimensions.naturalHeight;\r\n    this.polygon = polygon;\r\n    this.mask = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.mask.setAttribute('fill-rule', 'evenodd');\r\n    this.mask.setAttribute('class', 'a9s-selection-mask');\r\n    this.mask.setAttribute('d', \"M0 0 h\".concat(this.w, \" v\").concat(this.h, \" h-\").concat(this.w, \" z M\").concat(this.polygon.getAttribute('points'), \" z\"));\r\n  }\r\n\r\n  PolygonMask_createClass(PolygonMask, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.mask;\r\n    }\r\n  }]);\r\n\r\n  return PolygonMask;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/multipolygon/RubberbandMultipolygon.js\r\nfunction RubberbandMultipolygon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction RubberbandMultipolygon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? RubberbandMultipolygon_ownKeys(Object(source), !0).forEach(function (key) { RubberbandMultipolygon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : RubberbandMultipolygon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction RubberbandMultipolygon_toConsumableArray(arr) { return RubberbandMultipolygon_arrayWithoutHoles(arr) || RubberbandMultipolygon_iterableToArray(arr) || RubberbandMultipolygon_unsupportedIterableToArray(arr) || RubberbandMultipolygon_nonIterableSpread(); }\r\n\r\nfunction RubberbandMultipolygon_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction RubberbandMultipolygon_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction RubberbandMultipolygon_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return RubberbandMultipolygon_arrayLikeToArray(arr); }\r\n\r\nfunction RubberbandMultipolygon_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = RubberbandMultipolygon_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction RubberbandMultipolygon_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return RubberbandMultipolygon_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return RubberbandMultipolygon_arrayLikeToArray(o, minLen); }\r\n\r\nfunction RubberbandMultipolygon_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction RubberbandMultipolygon_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandMultipolygon_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandMultipolygon_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandMultipolygon_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandMultipolygon_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandMultipolygon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n // TODO optional: mask to dim the outside area\r\n//import Mask from './multipolygonMask';\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating multipolygon drawing by\r\n * clicking and dragging.\r\n */\r\n\r\nvar RubberbandMultipolygon = /*#__PURE__*/function () {\r\n  function RubberbandMultipolygon(anchor, g, env) {\r\n    var _this = this;\r\n\r\n    RubberbandMultipolygon_classCallCheck(this, RubberbandMultipolygon);\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"setPoints\", function (points) {\r\n      var attr = \"\";\r\n\r\n      var _iterator = RubberbandMultipolygon_createForOfIteratorHelper(points),\r\n          _step;\r\n\r\n      try {\r\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n          var ps = _step.value;\r\n          var attr2 = \"\";\r\n\r\n          if (ps.length > 0) {\r\n            var _iterator2 = RubberbandMultipolygon_createForOfIteratorHelper(ps),\r\n                _step2;\r\n\r\n            try {\r\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n                var p = _step2.value;\r\n\r\n                if (p) {\r\n                  if (attr2 === \"\") {\r\n                    attr2 += \"M\".concat(p[0], \",\").concat(p[1]);\r\n                  } else {\r\n                    attr2 += \" L\".concat(p[0], \",\").concat(p[1]);\r\n                  }\r\n                }\r\n              }\r\n            } catch (err) {\r\n              _iterator2.e(err);\r\n            } finally {\r\n              _iterator2.f();\r\n            }\r\n\r\n            ;\r\n            attr += attr2;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        _iterator.e(err);\r\n      } finally {\r\n        _iterator.f();\r\n      }\r\n\r\n      attr += \" Z\";\r\n\r\n      _this.outer.setAttribute('d', attr);\r\n\r\n      _this.inner.setAttribute('d', attr);\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"getBoundingClientRect\", function () {\r\n      return _this.outer.getBoundingClientRect();\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"dragTo\", function (xy) {\r\n      // Make visible\r\n      _this.group.style.display = null;\r\n\r\n      var head = _this.points[_this.points.length - 1].slice(0, _this.points[_this.points.length - 1].length - 1);\r\n\r\n      var headRest = _this.points.slice(0, -1);\r\n\r\n      var rubberband = [].concat(RubberbandMultipolygon_toConsumableArray(head), [xy, head[0]]);\r\n      headRest.push(rubberband);\r\n\r\n      _this.setPoints(headRest);\r\n\r\n      _this.mask.redraw();\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"addPoint\", function (xy) {\r\n      // Don't add a new point if distance < 2 pixels\r\n      if (_this.points[_this.points.length - 1].length > 0) {\r\n        var head = _this.points[_this.points.length - 1].slice(0, _this.points[_this.points.length - 1].length - 1);\r\n\r\n        var lastCorner = head[head.length - 1];\r\n        var dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\r\n\r\n        if (dist > 4) {\r\n          _this.points[_this.points.length - 1] = [].concat(RubberbandMultipolygon_toConsumableArray(head), [xy, head[0]]);\r\n\r\n          _this.setPoints(_this.points);\r\n\r\n          _this.mask.redraw();\r\n        }\r\n      } else {\r\n        _this.points[_this.points.length - 1] = [xy, xy];\r\n\r\n        _this.setPoints(_this.points);\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"undo\", function () {\r\n      if (_this.points[_this.points.length - 1].length > 2) {\r\n        _this.points[_this.points.length - 1].pop();\r\n      } else {\r\n        if (_this.points.length > 1) {\r\n          _this.points.pop();\r\n        }\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"newPart\", function () {\r\n      _this.points.push([]);\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"destroy\", function () {\r\n      _this.group.parentNode.removeChild(_this.group);\r\n\r\n      _this.multipolygon = null;\r\n      _this.group = null;\r\n    });\r\n\r\n    RubberbandMultipolygon_defineProperty(this, \"toSelection\", function () {\r\n      return new Selection(RubberbandMultipolygon_objectSpread(RubberbandMultipolygon_objectSpread({}, toSVGTarget(_this.group, _this.env.image)), {}, {\r\n        renderedVia: {\r\n          name: 'multipolygon'\r\n        }\r\n      }));\r\n    });\r\n\r\n    this.points = [];\r\n    this.points.push([anchor, anchor]);\r\n    this.env = env;\r\n    this.group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.multipolygon = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.multipolygon.setAttribute('class', 'a9s-selection');\r\n    this.outer = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.outer.setAttribute('class', 'a9s-outer');\r\n    this.inner = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.inner.setAttribute('class', 'a9s-inner');\r\n    this.setPoints(this.points);\r\n    this.mask = new PolygonMask(env.image, this.inner); // TODO optional: mask to dim the outside area\r\n    // this.mask = new Mask(env.image, this.inner);\r\n\r\n    this.multipolygon.appendChild(this.outer);\r\n    this.multipolygon.appendChild(this.inner); // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n\r\n    this.group.style.display = 'none'; // TODO optional: mask to dim the outside area\r\n    // this.group.appendChild(this.mask.element);\r\n\r\n    this.group.appendChild(this.mask.element);\r\n    this.group.appendChild(this.multipolygon);\r\n    g.appendChild(this.group);\r\n  }\r\n\r\n  RubberbandMultipolygon_createClass(RubberbandMultipolygon, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.multipolygon;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandMultipolygon;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/multipolygon/EditableMultipolygon.js\r\nfunction EditableMultipolygon_typeof(obj) { \"@babel/helpers - typeof\"; return EditableMultipolygon_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableMultipolygon_typeof(obj); }\r\n\r\nfunction EditableMultipolygon_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction EditableMultipolygon_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? EditableMultipolygon_ownKeys(Object(source), !0).forEach(function (key) { EditableMultipolygon_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : EditableMultipolygon_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction EditableMultipolygon_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableMultipolygon_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableMultipolygon_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableMultipolygon_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableMultipolygon_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableMultipolygon_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableMultipolygon_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableMultipolygon_setPrototypeOf(o, p) { EditableMultipolygon_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableMultipolygon_setPrototypeOf(o, p); }\r\n\r\nfunction EditableMultipolygon_createSuper(Derived) { var hasNativeReflectConstruct = EditableMultipolygon_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableMultipolygon_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableMultipolygon_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableMultipolygon_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableMultipolygon_possibleConstructorReturn(self, call) { if (call && (EditableMultipolygon_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableMultipolygon_assertThisInitialized(self); }\r\n\r\nfunction EditableMultipolygon_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableMultipolygon_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableMultipolygon_get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { EditableMultipolygon_get = Reflect.get.bind(); } else { EditableMultipolygon_get = function _get(target, property, receiver) { var base = EditableMultipolygon_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return EditableMultipolygon_get.apply(this, arguments); }\r\n\r\nfunction EditableMultipolygon_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditableMultipolygon_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditableMultipolygon_getPrototypeOf(o) { EditableMultipolygon_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableMultipolygon_getPrototypeOf(o); }\r\n\r\nfunction EditableMultipolygon_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction EditableMultipolygon_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = EditableMultipolygon_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\r\n\r\nfunction EditableMultipolygon_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return EditableMultipolygon_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EditableMultipolygon_arrayLikeToArray(o, minLen); }\r\n\r\nfunction EditableMultipolygon_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\n\r\n\r\n\r\n // TODO optional: mask to dim the outside area\r\n//import Mask from './MultipolygonMask';\r\n\r\nvar EditableMultipolygon_getPoints = function getPoints(shape) {\r\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\r\n  // IE11 :-(\r\n  var pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue);\r\n  var pointArray = [];\r\n\r\n  var _iterator = EditableMultipolygon_createForOfIteratorHelper(pointLists),\r\n      _step;\r\n\r\n  try {\r\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\r\n      var pointList = _step.value;\r\n      var points = [];\r\n\r\n      var _iterator2 = EditableMultipolygon_createForOfIteratorHelper(pointList),\r\n          _step2;\r\n\r\n      try {\r\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\r\n          var point = _step2.value;\r\n          var p = {\r\n            x: parseFloat(point[0]),\r\n            y: parseFloat(point[1])\r\n          };\r\n          points.push(p);\r\n        }\r\n      } catch (err) {\r\n        _iterator2.e(err);\r\n      } finally {\r\n        _iterator2.f();\r\n      }\r\n\r\n      pointArray.push(points);\r\n    }\r\n  } catch (err) {\r\n    _iterator.e(err);\r\n  } finally {\r\n    _iterator.f();\r\n  }\r\n\r\n  return pointArray;\r\n};\r\n\r\nvar getPointsFromPathValue = function getPointsFromPathValue(polygon) {\r\n  var results = polygon.split('M');\r\n  var allcoords = [];\r\n  results.forEach(function (result, index) {\r\n    if (result.length > 0) {\r\n      var coords = [];\r\n      result = result.replace(/ Z/g, \"Z\");\r\n      result = result.replace(/Z /g, \"Z\");\r\n      result = result.replace(/Z/g, \"\");\r\n      result = result.replace(/L /g, \"L\");\r\n      result = result.replace(/ L/g, \"L\");\r\n      var coordsString = result.split(\"L\");\r\n      coordsString.forEach(function (coord, index) {\r\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(), parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\r\n      });\r\n\r\n      if (coords[0] !== coords[coords.length - 1]) {\r\n        coords.push(coords[0]);\r\n      }\r\n\r\n      allcoords.push(coords);\r\n    }\r\n  });\r\n  return allcoords;\r\n};\r\n\r\nvar EditableMultipolygon_getBBox = function getBBox(shape) {\r\n  return shape.querySelector('.a9s-inner').getBBox();\r\n};\r\n\r\nvar svgFragmentToPoints = function svgFragmentToPoints(annotation) {\r\n  var svgShape = svgFragmentToShape(annotation);\r\n  var polygon = svgShape.getAttribute('d');\r\n  var allcoords = getPointsFromPathValue(polygon);\r\n  return allcoords; //svgShape.getAttribute('d')\r\n  //  .split(' ') // Split x/y tuples\r\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\r\n};\r\n\r\nvar EditableMultipolygon_drawEmbeddedSVG = function drawEmbeddedSVG(annotation) {\r\n  var shape = svgFragmentToShape(annotation); // Hack\r\n\r\n  svgFragmentToPoints(annotation); // Because we're nitpicky, we don't just draw the shape,\r\n  // but duplicate it, so we can have inner and an outer lines\r\n\r\n  var g = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n  var inner = shape.cloneNode(true);\r\n  inner.setAttribute('class', 'a9s-inner');\r\n  var outer = shape.cloneNode(true);\r\n  outer.setAttribute('class', 'a9s-outer');\r\n  g.appendChild(outer);\r\n  g.appendChild(inner);\r\n  return g;\r\n};\r\n/**\r\n * An editable multipolygon drawing.\r\n */\r\n\r\n\r\nvar EditableMultipolygon = /*#__PURE__*/function (_EditableShape) {\r\n  EditableMultipolygon_inherits(EditableMultipolygon, _EditableShape);\r\n\r\n  var _super = EditableMultipolygon_createSuper(EditableMultipolygon);\r\n\r\n  function EditableMultipolygon(_annotation, g, config, env) {\r\n    var _thisSuper, _this;\r\n\r\n    EditableMultipolygon_classCallCheck(this, EditableMultipolygon);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"setPoints\", function (points) {\r\n      var round = function round(num) {\r\n        return Math.round(10 * num) / 10;\r\n      };\r\n\r\n      var str = \"\";\r\n\r\n      var _iterator3 = EditableMultipolygon_createForOfIteratorHelper(points),\r\n          _step3;\r\n\r\n      try {\r\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\r\n          var pointList = _step3.value;\r\n          str += \"M\";\r\n          var first = true;\r\n\r\n          var _iterator4 = EditableMultipolygon_createForOfIteratorHelper(pointList),\r\n              _step4;\r\n\r\n          try {\r\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\r\n              var point = _step4.value;\r\n\r\n              if (first) {\r\n                first = false;\r\n                str += point.x.toString() + \",\" + point.y.toString();\r\n              } else {\r\n                str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString();\r\n              }\r\n            }\r\n          } catch (err) {\r\n            _iterator4.e(err);\r\n          } finally {\r\n            _iterator4.f();\r\n          }\r\n\r\n          str += \" Z\";\r\n        }\r\n      } catch (err) {\r\n        _iterator3.e(err);\r\n      } finally {\r\n        _iterator3.f();\r\n      }\r\n\r\n      var inner = _this.shape.querySelector('.a9s-inner');\r\n\r\n      inner.setAttribute('d', str);\r\n\r\n      var outer = _this.shape.querySelector('.a9s-outer');\r\n\r\n      outer.setAttribute('d', str); // this.mask.redraw();\r\n\r\n      var _outer$getBBox = outer.getBBox(),\r\n          x = _outer$getBBox.x,\r\n          y = _outer$getBBox.y,\r\n          width = _outer$getBBox.width,\r\n          height = _outer$getBBox.height;\r\n\r\n      setFormatterElSize(_this.elementGroup, x, y, width, height);\r\n    });\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"onGrab\", function (grabbedElem) {\r\n      return function (evt) {\r\n        _this.grabbedElem = grabbedElem;\r\n\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        _this.grabbedAt = {\r\n          x: pos.x,\r\n          y: pos.y\r\n        };\r\n      };\r\n    });\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      if (_this.grabbedElem) {\r\n        (function () {\r\n          var pos = _this.getSVGPoint(evt);\r\n\r\n          if (_this.grabbedElem === _this.shape) {\r\n            (function () {\r\n              var dx = pos.x - _this.grabbedAt.x;\r\n              var dy = pos.y - _this.grabbedAt.y;\r\n              var pointList = EditableMultipolygon_getPoints(_this.shape);\r\n              var updatedPoints = [];\r\n\r\n              var _iterator5 = EditableMultipolygon_createForOfIteratorHelper(pointList),\r\n                  _step5;\r\n\r\n              try {\r\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\r\n                  var points = _step5.value;\r\n                  updatedPoints.push(points.map(function (pt) {\r\n                    return {\r\n                      x: pt.x + dx,\r\n                      y: pt.y + dy\r\n                    };\r\n                  }));\r\n                }\r\n              } catch (err) {\r\n                _iterator5.e(err);\r\n              } finally {\r\n                _iterator5.f();\r\n              }\r\n\r\n              _this.grabbedAt = pos;\r\n\r\n              _this.setPoints(updatedPoints);\r\n\r\n              var i = 0;\r\n\r\n              for (var _i = 0, _updatedPoints = updatedPoints; _i < _updatedPoints.length; _i++) {\r\n                var updatedPointsList = _updatedPoints[_i];\r\n                updatedPointsList.forEach(function (pt, idx) {\r\n                  if (_this.handles[i][idx] !== undefined) _this.setHandleXY(_this.handles[i][idx], pt.x, pt.y);\r\n                });\r\n                i += 1;\r\n              }\r\n\r\n              _this.emit('update', EditableMultipolygon_objectSpread(EditableMultipolygon_objectSpread({}, toSVGTarget(_this.shape, _this.env.image)), {}, {\r\n                renderedVia: {\r\n                  name: 'multipolygon'\r\n                }\r\n              }));\r\n            })();\r\n          } else {\r\n            (function () {\r\n              var handleIdx = -1;\r\n              var pointListIDX = 0;\r\n              var found = false;\r\n\r\n              var _iterator6 = EditableMultipolygon_createForOfIteratorHelper(_this.handles),\r\n                  _step6;\r\n\r\n              try {\r\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\r\n                  var handle = _step6.value;\r\n\r\n                  if (handle.indexOf(_this.grabbedElem) > 0) {\r\n                    handleIdx = handle.indexOf(_this.grabbedElem);\r\n                    found = true;\r\n                  } else {\r\n                    if (!found) {\r\n                      pointListIDX += 1;\r\n                    }\r\n                  }\r\n                }\r\n              } catch (err) {\r\n                _iterator6.e(err);\r\n              } finally {\r\n                _iterator6.f();\r\n              }\r\n\r\n              var pointList = EditableMultipolygon_getPoints(_this.shape);\r\n              var updatedPoints = [];\r\n              var updatedPointsIDX = 0;\r\n\r\n              var _iterator7 = EditableMultipolygon_createForOfIteratorHelper(pointList),\r\n                  _step7;\r\n\r\n              try {\r\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\r\n                  var points = _step7.value;\r\n\r\n                  if (updatedPointsIDX === pointListIDX) {\r\n                    (function () {\r\n                      var newPoints = [];\r\n                      points.forEach(function (value, i) {\r\n                        if (i === handleIdx) {\r\n                          newPoints.push(pos);\r\n                        } else {\r\n                          newPoints.push(value);\r\n                        }\r\n                      });\r\n                      updatedPoints.push(newPoints);\r\n                    })();\r\n                  } else {\r\n                    updatedPoints.push(points);\r\n                  }\r\n\r\n                  updatedPointsIDX += 1;\r\n                }\r\n              } catch (err) {\r\n                _iterator7.e(err);\r\n              } finally {\r\n                _iterator7.f();\r\n              }\r\n\r\n              _this.setPoints(updatedPoints);\r\n\r\n              updatedPointsIDX = 0;\r\n\r\n              var _iterator8 = EditableMultipolygon_createForOfIteratorHelper(_this.handles),\r\n                  _step8;\r\n\r\n              try {\r\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\r\n                  var _handle = _step8.value;\r\n\r\n                  if (updatedPointsIDX === pointListIDX) {\r\n                    _this.setHandleXY(_handle[handleIdx], pos.x, pos.y);\r\n                  }\r\n\r\n                  updatedPointsIDX += 1;\r\n                }\r\n              } catch (err) {\r\n                _iterator8.e(err);\r\n              } finally {\r\n                _iterator8.f();\r\n              }\r\n\r\n              _this.emit('update', EditableMultipolygon_objectSpread(EditableMultipolygon_objectSpread({}, toSVGTarget(_this.shape, _this.env.image)), {}, {\r\n                renderedVia: {\r\n                  name: 'multipolygon'\r\n                }\r\n              }));\r\n            })();\r\n          }\r\n        })();\r\n      }\r\n    });\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"onMouseUp\", function (evt) {\r\n      _this.grabbedElem = null;\r\n      _this.grabbedAt = null;\r\n    });\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var points = EditableMultipolygon_getPoints(svgFragmentToShape(annotation));\r\n\r\n      _this.setPoints(points);\r\n    });\r\n\r\n    EditableMultipolygon_defineProperty(EditableMultipolygon_assertThisInitialized(_this), \"destroy\", function () {\r\n      _this.containerGroup.parentNode.removeChild(_this.containerGroup);\r\n\r\n      EditableMultipolygon_get((_thisSuper = EditableMultipolygon_assertThisInitialized(_this), EditableMultipolygon_getPrototypeOf(EditableMultipolygon.prototype)), \"destroy\", _thisSuper).call(_thisSuper);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp); // SVG markup for this class looks like this:\r\n    // \r\n    // <g>\r\n    //   <path class=\"a9s-selection mask\"... />\r\n    //   <g> <-- return this node as .element\r\n    //     <polygon class=\"a9s-outer\" ... />\r\n    //     <polygon class=\"a9s-inner\" ... />\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     ...\r\n    //   </g> \r\n    // </g>\r\n    // 'g' for the editable free drawing compound shape\r\n\r\n\r\n    _this.containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.shape = EditableMultipolygon_drawEmbeddedSVG(_annotation); // TODO optional: mask to dim the outside area\r\n    // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\r\n    // this.containerGroup.appendChild(this.mask.element);\r\n\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.elementGroup.appendChild(_this.shape);\r\n\r\n    var _pointList = EditableMultipolygon_getPoints(_this.shape);\r\n\r\n    _this.handles = [];\r\n\r\n    var _iterator9 = EditableMultipolygon_createForOfIteratorHelper(_pointList),\r\n        _step9;\r\n\r\n    try {\r\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\r\n        var points = _step9.value;\r\n\r\n        _this.handles.push(points.map(function (pt) {\r\n          var handle = _this.drawHandle(pt.x, pt.y);\r\n\r\n          handle.addEventListener('mousedown', _this.onGrab(handle));\r\n\r\n          _this.elementGroup.appendChild(handle);\r\n\r\n          return handle;\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      _iterator9.e(err);\r\n    } finally {\r\n      _iterator9.f();\r\n    }\r\n\r\n    _this.containerGroup.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.containerGroup);\r\n    format(_this.shape, _annotation, config.formatter);\r\n\r\n    _this.shape.querySelector('.a9s-inner').addEventListener('mousedown', _this.onGrab(_this.shape));\r\n\r\n    var _getBBox = EditableMultipolygon_getBBox(_this.shape),\r\n        _x = _getBBox.x,\r\n        _y = _getBBox.y,\r\n        _width = _getBBox.width,\r\n        _height = _getBBox.height; // TODO optional: handles to stretch the shape\r\n\r\n    /*    this.handles = [\r\n          [ x, y ], \r\n          [ x + width, y ], \r\n          [ x + width, y + height ], \r\n          [ x, y + height ]\r\n        ].map(t => { \r\n          const [ x, y ] = t;\r\n          const handle = this.drawHandle(x, y);\r\n    \r\n          handle.addEventListener('mousedown', this.onGrab(handle));\r\n          this.elementGroup.appendChild(handle);\r\n    \r\n          return handle;\r\n        });*/\r\n    // The grabbed element (handle or entire shape), if any\r\n\r\n\r\n    _this.grabbedElem = null; // Mouse grab point\r\n\r\n    _this.grabbedAt = null;\r\n    return _this;\r\n  }\r\n\r\n  EditableMultipolygon_createClass(EditableMultipolygon, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    }\r\n  }]);\r\n\r\n  return EditableMultipolygon;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/multipolygon/RubberbandMultipolygonTool.js\r\nfunction RubberbandMultipolygonTool_typeof(obj) { \"@babel/helpers - typeof\"; return RubberbandMultipolygonTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, RubberbandMultipolygonTool_typeof(obj); }\r\n\r\nfunction RubberbandMultipolygonTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandMultipolygonTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandMultipolygonTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandMultipolygonTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandMultipolygonTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandMultipolygonTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) RubberbandMultipolygonTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction RubberbandMultipolygonTool_setPrototypeOf(o, p) { RubberbandMultipolygonTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RubberbandMultipolygonTool_setPrototypeOf(o, p); }\r\n\r\nfunction RubberbandMultipolygonTool_createSuper(Derived) { var hasNativeReflectConstruct = RubberbandMultipolygonTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RubberbandMultipolygonTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RubberbandMultipolygonTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RubberbandMultipolygonTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction RubberbandMultipolygonTool_possibleConstructorReturn(self, call) { if (call && (RubberbandMultipolygonTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RubberbandMultipolygonTool_assertThisInitialized(self); }\r\n\r\nfunction RubberbandMultipolygonTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction RubberbandMultipolygonTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction RubberbandMultipolygonTool_getPrototypeOf(o) { RubberbandMultipolygonTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RubberbandMultipolygonTool_getPrototypeOf(o); }\r\n\r\nfunction RubberbandMultipolygonTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * A rubberband selector for Multipolygon fragments.\r\n */\r\n\r\nvar RubberbandMultipolygonTool = /*#__PURE__*/function (_Tool) {\r\n  RubberbandMultipolygonTool_inherits(RubberbandMultipolygonTool, _Tool);\r\n\r\n  var _super = RubberbandMultipolygonTool_createSuper(RubberbandMultipolygonTool);\r\n\r\n  function RubberbandMultipolygonTool(g, config, env) {\r\n    var _this;\r\n\r\n    RubberbandMultipolygonTool_classCallCheck(this, RubberbandMultipolygonTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"startDrawing\", function (x, y) {\r\n      _this._isDrawing = true;\r\n\r\n      _this.attachListeners({\r\n        mouseMove: _this.onMouseMove,\r\n        mouseUp: _this.onMouseUp,\r\n        dblClick: _this.onDblClick\r\n      });\r\n\r\n      _this.rubberband = new RubberbandMultipolygon([x, y], _this.g, _this.env);\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"stop\", function () {\r\n      _this.detachListeners();\r\n\r\n      _this._isDrawing = false;\r\n\r\n      if (_this.rubberband) {\r\n        _this.rubberband.destroy();\r\n\r\n        _this.rubberband = null;\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"undo\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.undo();\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"newPart\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.newPart();\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"onMouseMove\", function (x, y) {\r\n      return _this.rubberband.dragTo([x, y]);\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"onMouseUp\", function (x, y, evt) {\r\n      if (evt.altKey) {\r\n        _this.onDblClick(evt);\r\n      } else if (evt.ctrlKey) {\r\n        _this.rubberband.undo();\r\n      } else {\r\n        var _this$rubberband$getB = _this.rubberband.getBoundingClientRect(),\r\n            width = _this$rubberband$getB.width,\r\n            height = _this$rubberband$getB.height;\r\n\r\n        var minWidth = _this.config.minSelectionWidth || 4;\r\n        var minHeight = _this.config.minSelectionHeight || 4;\r\n\r\n        if (width >= minWidth || height >= minHeight) {\r\n          _this.rubberband.addPoint([x, y]);\r\n        } else {\r\n          _this.emit('cancel');\r\n\r\n          _this.stop();\r\n        }\r\n      }\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"onDblClick\", function (x, y) {\r\n      _this._isDrawing = false;\r\n\r\n      _this.rubberband.addPoint([x, y]);\r\n\r\n      var shape = _this.rubberband.element;\r\n      shape.annotation = _this.rubberband.toSelection();\r\n\r\n      _this.emit('complete', shape);\r\n\r\n      _this.stop();\r\n    });\r\n\r\n    RubberbandMultipolygonTool_defineProperty(RubberbandMultipolygonTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditableMultipolygon(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    _this._isDrawing = false;\r\n    document.addEventListener('keydown', function (evt) {\r\n      if (evt.key == \"z\" && evt.ctrlKey) {\r\n        _this.undo();\r\n      }\r\n\r\n      if (evt.key == 'n') {\r\n        _this.newPart();\r\n      }\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  RubberbandMultipolygonTool_createClass(RubberbandMultipolygonTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      return this._isDrawing;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandMultipolygonTool;\r\n}(Tool);\r\n\r\n\r\nRubberbandMultipolygonTool.identifier = 'multipolygon';\r\n\r\nRubberbandMultipolygonTool.supports = function (annotation) {\r\n  return false;\r\n};\r\n;// CONCATENATED MODULE: ./src/line/LineMask.js\r\nfunction LineMask_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction LineMask_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction LineMask_createClass(Constructor, protoProps, staticProps) { if (protoProps) LineMask_defineProperties(Constructor.prototype, protoProps); if (staticProps) LineMask_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction LineMask_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\nvar LineMask = /*#__PURE__*/function () {\r\n  function LineMask(imageDimensions, line) {\r\n    var _this = this;\r\n\r\n    LineMask_classCallCheck(this, LineMask);\r\n\r\n    LineMask_defineProperty(this, \"redraw\", function () {\r\n      _this.mask.setAttribute('d', \"M0 0 h\".concat(_this.w, \" v\").concat(_this.h, \" h-\").concat(_this.w, \" z M\").concat(_this.line.getAttribute('x1'), \" \").concat(_this.line.getAttribute('y1'), \" \").concat(_this.line.getAttribute('x2'), \" \").concat(_this.line.getAttribute('y2'), \"z\"));\r\n    });\r\n\r\n    LineMask_defineProperty(this, \"destroy\", function () {\r\n      return _this.mask.parentNode.removeChild(_this.mask);\r\n    });\r\n\r\n    this.w = imageDimensions.naturalWidth;\r\n    this.h = imageDimensions.naturalHeight;\r\n    this.line = line;\r\n    this.mask = document.createElementNS(SVG_SVG_NAMESPACE, 'path');\r\n    this.mask.setAttribute('fill-rule', 'evenodd');\r\n    this.mask.setAttribute('class', 'a9s-selection-mask');\r\n    this.mask.setAttribute('d', \"M0 0 h\".concat(this.w, \" v\").concat(this.h, \" h-\").concat(this.w, \" z M\").concat(this.line.getAttribute('x1'), \" \").concat(this.line.getAttribute('y1'), \" z\"));\r\n  }\r\n\r\n  LineMask_createClass(LineMask, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.mask;\r\n    }\r\n  }]);\r\n\r\n  return LineMask;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/line/RubberbandLine.js\r\nfunction RubberbandLine_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction RubberbandLine_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? RubberbandLine_ownKeys(Object(source), !0).forEach(function (key) { RubberbandLine_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : RubberbandLine_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction RubberbandLine_toConsumableArray(arr) { return RubberbandLine_arrayWithoutHoles(arr) || RubberbandLine_iterableToArray(arr) || RubberbandLine_unsupportedIterableToArray(arr) || RubberbandLine_nonIterableSpread(); }\r\n\r\nfunction RubberbandLine_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction RubberbandLine_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return RubberbandLine_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return RubberbandLine_arrayLikeToArray(o, minLen); }\r\n\r\nfunction RubberbandLine_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction RubberbandLine_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return RubberbandLine_arrayLikeToArray(arr); }\r\n\r\nfunction RubberbandLine_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction RubberbandLine_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandLine_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandLine_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandLine_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandLine_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandLine_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A 'rubberband' selection tool for creating Line drawing by\r\n * clicking and dragging.\r\n */\r\n\r\nvar RubberbandLine = /*#__PURE__*/function () {\r\n  function RubberbandLine(anchor, g, env) {\r\n    var _this = this;\r\n\r\n    RubberbandLine_classCallCheck(this, RubberbandLine);\r\n\r\n    RubberbandLine_defineProperty(this, \"setPoints\", function (points) {\r\n      var attr = points; // set attribute for line svg element for outer and inner\r\n      // example: <line x1=\"0\" y1=\"80\" x2=\"100\" y2=\"20\" stroke=\"black\" />\r\n\r\n      _this.outer.setAttribute('x1', attr[0]);\r\n\r\n      _this.inner.setAttribute('x1', attr[0]);\r\n\r\n      _this.outer.setAttribute('y1', attr[1]);\r\n\r\n      _this.inner.setAttribute('y1', attr[1]);\r\n\r\n      if (attr.length > 2) {\r\n        _this.outer.setAttribute('x2', attr[2]);\r\n\r\n        _this.inner.setAttribute('x2', attr[2]);\r\n\r\n        _this.outer.setAttribute('y2', attr[3]);\r\n\r\n        _this.inner.setAttribute('y2', attr[3]);\r\n      }\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"getBoundingClientRect\", function () {\r\n      return _this.outer.getBoundingClientRect();\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"dragTo\", function (xy) {\r\n      // Make visible\r\n      _this.group.style.display = null;\r\n      _this.mousepos = xy; //console.log(xy);\r\n\r\n      var rubberband = [].concat(RubberbandLine_toConsumableArray(_this.points), [xy[0], xy[1]]);\r\n\r\n      _this.setPoints(rubberband);\r\n\r\n      _this.mask.redraw();\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"addPoint\", function (xy) {\r\n      // Don't add a new point if distance < 2 pixels\r\n      if (_this.points.length <= 2) {\r\n        _this.points[2] = xy[0];\r\n        _this.points[3] = xy[1];\r\n\r\n        _this.setPoints(_this.points);\r\n      }\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"undo\", function () {\r\n      if (_this.points[_this.points.length - 1].length > 2) {\r\n        _this.points[_this.points.length - 1].pop();\r\n      } else {\r\n        if (_this.points.length > 1) {\r\n          _this.points.pop();\r\n        }\r\n      }\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"newPart\", function () {\r\n      _this.points.push([]);\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"destroy\", function () {\r\n      _this.group.parentNode.removeChild(_this.group);\r\n\r\n      _this.Line = null;\r\n      _this.group = null;\r\n    });\r\n\r\n    RubberbandLine_defineProperty(this, \"toSelection\", function () {\r\n      return new Selection(RubberbandLine_objectSpread(RubberbandLine_objectSpread({}, toSVGTarget(_this.group, _this.env.image)), {}, {\r\n        renderedVia: {\r\n          name: 'line'\r\n        }\r\n      }));\r\n    });\r\n\r\n    this.points = anchor; //this.points.push([ anchor, anchor ])\r\n\r\n    this.env = env;\r\n    this.group = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.Line = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    this.Line.setAttribute('class', 'a9s-selection');\r\n    this.outer = document.createElementNS(SVG_SVG_NAMESPACE, 'line');\r\n    this.outer.setAttribute('class', 'a9s-outer');\r\n    this.inner = document.createElementNS(SVG_SVG_NAMESPACE, 'line');\r\n    this.inner.setAttribute('class', 'a9s-inner');\r\n    this.setPoints(this.points);\r\n    this.mask = new LineMask(env.image, this.inner); // TODO optional: mask to dim the outside area\r\n    // this.mask = new Mask(env.image, this.inner);\r\n\r\n    this.Line.appendChild(this.outer);\r\n    this.Line.appendChild(this.inner); // Additionally, selection remains hidden until \r\n    // the user actually moves the mouse\r\n\r\n    this.group.style.display = 'none'; // TODO optional: mask to dim the outside area\r\n    // this.group.appendChild(this.mask.element);\r\n\r\n    this.group.appendChild(this.mask.element);\r\n    this.group.appendChild(this.Line);\r\n    g.appendChild(this.group);\r\n  }\r\n\r\n  RubberbandLine_createClass(RubberbandLine, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.Line;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandLine;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/line/EditableLine.js\r\nfunction EditableLine_typeof(obj) { \"@babel/helpers - typeof\"; return EditableLine_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, EditableLine_typeof(obj); }\r\n\r\nfunction EditableLine_slicedToArray(arr, i) { return EditableLine_arrayWithHoles(arr) || EditableLine_iterableToArrayLimit(arr, i) || EditableLine_unsupportedIterableToArray(arr, i) || EditableLine_nonIterableRest(); }\r\n\r\nfunction EditableLine_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction EditableLine_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return EditableLine_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EditableLine_arrayLikeToArray(o, minLen); }\r\n\r\nfunction EditableLine_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction EditableLine_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction EditableLine_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction EditableLine_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction EditableLine_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction EditableLine_createClass(Constructor, protoProps, staticProps) { if (protoProps) EditableLine_defineProperties(Constructor.prototype, protoProps); if (staticProps) EditableLine_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction EditableLine_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) EditableLine_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction EditableLine_setPrototypeOf(o, p) { EditableLine_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return EditableLine_setPrototypeOf(o, p); }\r\n\r\nfunction EditableLine_createSuper(Derived) { var hasNativeReflectConstruct = EditableLine_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = EditableLine_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = EditableLine_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return EditableLine_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction EditableLine_possibleConstructorReturn(self, call) { if (call && (EditableLine_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return EditableLine_assertThisInitialized(self); }\r\n\r\nfunction EditableLine_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction EditableLine_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction EditableLine_get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { EditableLine_get = Reflect.get.bind(); } else { EditableLine_get = function _get(target, property, receiver) { var base = EditableLine_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return EditableLine_get.apply(this, arguments); }\r\n\r\nfunction EditableLine_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = EditableLine_getPrototypeOf(object); if (object === null) break; } return object; }\r\n\r\nfunction EditableLine_getPrototypeOf(o) { EditableLine_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return EditableLine_getPrototypeOf(o); }\r\n\r\nfunction EditableLine_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar EditableLine_getPoints = function getPoints(shape) {\r\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\r\n  // IE11 :-(\r\n  var innerElement = shape.querySelector('.a9s-inner');\r\n  var points = [[innerElement.x1.baseVal, innerElement.y1.baseVal], [innerElement.x2.baseVal, innerElement.y2.baseVal]];\r\n  return points;\r\n};\r\n\r\nvar EditableLine_getBBox = function getBBox(shape) {\r\n  return shape.querySelector('.a9s-inner').getBBox();\r\n};\r\n/**\r\n * An editable line shape.\r\n */\r\n\r\n\r\nvar EditableLine = /*#__PURE__*/function (_EditableShape) {\r\n  EditableLine_inherits(EditableLine, _EditableShape);\r\n\r\n  var _super = EditableLine_createSuper(EditableLine);\r\n\r\n  function EditableLine(_annotation, g, config, env) {\r\n    var _thisSuper, _this;\r\n\r\n    EditableLine_classCallCheck(this, EditableLine);\r\n\r\n    _this = _super.call(this, _annotation, g, config, env);\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"onScaleChanged\", function () {\r\n      return _this.handles.map(_this.scaleHandle);\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"setPoints\", function (points) {\r\n      // Not using .toFixed(1) because that will ALWAYS\r\n      // return one decimal, e.g. \"15.0\" (when we want \"15\")\r\n      var round = function round(num) {\r\n        return Math.round(10 * num) / 10;\r\n      };\r\n\r\n      var x1 = points[0].x;\r\n      var y1 = points[0].y;\r\n      var x2 = points[1].x;\r\n      var y2 = points[1].y;\r\n\r\n      var inner = _this.shape.querySelector('.a9s-inner');\r\n\r\n      inner.setAttribute('x1', x1);\r\n      inner.setAttribute('y1', y1);\r\n      inner.setAttribute('x2', x2);\r\n      inner.setAttribute('y2', y2);\r\n\r\n      var outer = _this.shape.querySelector('.a9s-outer');\r\n\r\n      outer.setAttribute('x1', x1);\r\n      outer.setAttribute('y1', y1);\r\n      outer.setAttribute('x2', x2);\r\n      outer.setAttribute('y2', y2);\r\n\r\n      _this.mask.redraw();\r\n\r\n      var _outer$getBBox = outer.getBBox(),\r\n          x = _outer$getBBox.x,\r\n          y = _outer$getBBox.y,\r\n          width = _outer$getBBox.width,\r\n          height = _outer$getBBox.height;\r\n\r\n      setFormatterElSize(_this.elementGroup, x, y, width, height);\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"onGrab\", function (grabbedElem) {\r\n      return function (evt) {\r\n        if (evt.button !== 0) return; // left click\r\n\r\n        _this.grabbedElem = grabbedElem;\r\n        _this.grabbedAt = _this.getSVGPoint(evt);\r\n      };\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"onMouseMove\", function (evt) {\r\n      var constrain = function constrain(coord, delta, max) {\r\n        return coord + delta < 0 ? -coord : coord + delta > max ? max - coord : delta;\r\n      };\r\n\r\n      if (_this.grabbedElem) {\r\n        var pos = _this.getSVGPoint(evt);\r\n\r\n        if (_this.grabbedElem === _this.shape) {\r\n          var _getBBox = EditableLine_getBBox(_this.shape),\r\n              x = _getBBox.x,\r\n              y = _getBBox.y,\r\n              width = _getBBox.width,\r\n              height = _getBBox.height;\r\n\r\n          var _this$env$image = _this.env.image,\r\n              naturalWidth = _this$env$image.naturalWidth,\r\n              naturalHeight = _this$env$image.naturalHeight;\r\n          var dx = constrain(x, pos.x - _this.grabbedAt.x, naturalWidth - width);\r\n          var dy = constrain(y, pos.y - _this.grabbedAt.y, naturalHeight - height);\r\n          var updatedPoints = EditableLine_getPoints(_this.shape).map(function (pt) {\r\n            return {\r\n              x: pt[0].value + dx,\r\n              y: pt[1].value + dy\r\n            };\r\n          });\r\n          _this.grabbedAt = pos;\r\n\r\n          _this.setPoints(updatedPoints);\r\n\r\n          updatedPoints.forEach(function (pt, idx) {\r\n            return _this.setHandleXY(_this.handles[idx], pt.x, pt.y);\r\n          });\r\n\r\n          _this.emit('update', toSVGTarget(_this.shape, _this.env.image));\r\n        } else {\r\n          var handleIdx = _this.handles.indexOf(_this.grabbedElem);\r\n\r\n          var _updatedPoints = EditableLine_getPoints(_this.shape).map(function (pt, idx) {\r\n            return idx === handleIdx ? pos : {\r\n              'x': pt[0].value,\r\n              'y': pt[1].value\r\n            };\r\n          });\r\n\r\n          _this.setPoints(_updatedPoints);\r\n\r\n          _this.setHandleXY(_this.handles[handleIdx], pos.x, pos.y);\r\n\r\n          _this.emit('update', toSVGTarget(_this.shape, _this.env.image));\r\n        }\r\n      }\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"onMouseUp\", function (evt) {\r\n      _this.grabbedElem = null;\r\n      _this.grabbedAt = null;\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"updateState\", function (annotation) {\r\n      var points = svgFragmentToShape(annotation).getAttribute('points').split(' ') // Split x/y tuples\r\n      .map(function (xy) {\r\n        var _xy$split$map = xy.split(',').map(function (str) {\r\n          return parseFloat(str.trim());\r\n        }),\r\n            _xy$split$map2 = EditableLine_slicedToArray(_xy$split$map, 2),\r\n            x = _xy$split$map2[0],\r\n            y = _xy$split$map2[1];\r\n\r\n        return {\r\n          x: x,\r\n          y: y\r\n        };\r\n      });\r\n\r\n      _this.setPoints(points);\r\n\r\n      points.forEach(function (pt, idx) {\r\n        return _this.setHandleXY(_this.handles[idx], pt.x, pt.y);\r\n      });\r\n    });\r\n\r\n    EditableLine_defineProperty(EditableLine_assertThisInitialized(_this), \"destroy\", function () {\r\n      _this.containerGroup.parentNode.removeChild(_this.containerGroup);\r\n\r\n      EditableLine_get((_thisSuper = EditableLine_assertThisInitialized(_this), EditableLine_getPrototypeOf(EditableLine.prototype)), \"destroy\", _thisSuper).call(_thisSuper);\r\n    });\r\n\r\n    _this.svg.addEventListener('mousemove', _this.onMouseMove);\r\n\r\n    _this.svg.addEventListener('mouseup', _this.onMouseUp); // SVG markup for this class looks like this:\r\n    //\r\n    // <g>\r\n    //   <path class=\"a9s-selection mask\"... />\r\n    //   <g> <-- return this node as .element\r\n    //     <line class=\"a9s-outer\" ... />\r\n    //     <line class=\"a9s-inner\" ... />\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     <g class=\"a9s-handle\" ...> ... </g>\r\n    //     ...\r\n    //   </g>\r\n    // </g>\r\n    // 'g' for the editable line shape\r\n\r\n\r\n    _this.containerGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n    _this.shape = drawEmbeddedSVG(_annotation);\r\n\r\n    _this.shape.querySelector('.a9s-inner').addEventListener('mousedown', _this.onGrab(_this.shape));\r\n\r\n    _this.mask = new LineMask(env.image, _this.shape.querySelector('.a9s-inner'));\r\n\r\n    _this.containerGroup.appendChild(_this.mask.element);\r\n\r\n    _this.elementGroup = document.createElementNS(SVG_SVG_NAMESPACE, 'g');\r\n\r\n    _this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\r\n\r\n    _this.elementGroup.setAttribute('data-id', _annotation.id);\r\n\r\n    _this.elementGroup.appendChild(_this.shape);\r\n\r\n    _this.handles = EditableLine_getPoints(_this.shape).map(function (pt) {\r\n      var handle = _this.drawHandle(pt[0].value, pt[1].value);\r\n\r\n      handle.addEventListener('mousedown', _this.onGrab(handle));\r\n\r\n      _this.elementGroup.appendChild(handle);\r\n\r\n      return handle;\r\n    });\r\n\r\n    _this.containerGroup.appendChild(_this.elementGroup);\r\n\r\n    g.appendChild(_this.containerGroup);\r\n    format(_this.shape, _annotation, config.formatters); // The grabbed element (handle or entire shape), if any\r\n\r\n    _this.grabbedElem = null; // Mouse grab point\r\n\r\n    _this.grabbedAt = null;\r\n    return _this;\r\n  }\r\n\r\n  EditableLine_createClass(EditableLine, [{\r\n    key: \"element\",\r\n    get: function get() {\r\n      return this.elementGroup;\r\n    } // TODO: update this for line svg Attributes, currently not being used\r\n\r\n  }]);\r\n\r\n  return EditableLine;\r\n}(EditableShape);\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/line/RubberbandLineTool.js\r\nfunction RubberbandLineTool_typeof(obj) { \"@babel/helpers - typeof\"; return RubberbandLineTool_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, RubberbandLineTool_typeof(obj); }\r\n\r\nfunction RubberbandLineTool_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction RubberbandLineTool_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction RubberbandLineTool_createClass(Constructor, protoProps, staticProps) { if (protoProps) RubberbandLineTool_defineProperties(Constructor.prototype, protoProps); if (staticProps) RubberbandLineTool_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\r\n\r\nfunction RubberbandLineTool_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) RubberbandLineTool_setPrototypeOf(subClass, superClass); }\r\n\r\nfunction RubberbandLineTool_setPrototypeOf(o, p) { RubberbandLineTool_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RubberbandLineTool_setPrototypeOf(o, p); }\r\n\r\nfunction RubberbandLineTool_createSuper(Derived) { var hasNativeReflectConstruct = RubberbandLineTool_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RubberbandLineTool_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RubberbandLineTool_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RubberbandLineTool_possibleConstructorReturn(this, result); }; }\r\n\r\nfunction RubberbandLineTool_possibleConstructorReturn(self, call) { if (call && (RubberbandLineTool_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return RubberbandLineTool_assertThisInitialized(self); }\r\n\r\nfunction RubberbandLineTool_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\r\n\r\nfunction RubberbandLineTool_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\r\n\r\nfunction RubberbandLineTool_getPrototypeOf(o) { RubberbandLineTool_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RubberbandLineTool_getPrototypeOf(o); }\r\n\r\nfunction RubberbandLineTool_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n\r\n\r\n\r\n/**\r\n * A rubberband selector for Line fragments.\r\n */\r\n\r\nvar RubberbandLineTool = /*#__PURE__*/function (_Tool) {\r\n  RubberbandLineTool_inherits(RubberbandLineTool, _Tool);\r\n\r\n  var _super = RubberbandLineTool_createSuper(RubberbandLineTool);\r\n\r\n  function RubberbandLineTool(g, config, env) {\r\n    var _this;\r\n\r\n    RubberbandLineTool_classCallCheck(this, RubberbandLineTool);\r\n\r\n    _this = _super.call(this, g, config, env);\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"startDrawing\", function (x, y) {\r\n      _this._isDrawing = true;\r\n\r\n      _this.attachListeners({\r\n        mouseMove: _this.onMouseMove,\r\n        mouseUp: _this.onMouseUp\r\n      });\r\n\r\n      _this.rubberband = new RubberbandLine([x, y], _this.g, _this.env);\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"stop\", function () {\r\n      _this.detachListeners();\r\n\r\n      _this._isDrawing = false;\r\n\r\n      if (_this.rubberband) {\r\n        _this.rubberband.destroy();\r\n\r\n        _this.rubberband = null;\r\n      }\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"undo\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.undo();\r\n      }\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"newPart\", function () {\r\n      if (_this.rubberband) {\r\n        _this.rubberband.newPart();\r\n      }\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"onMouseMove\", function (x, y) {\r\n      return _this.rubberband.dragTo([x, y]);\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"onMouseUp\", function (x, y, evt) {\r\n      if (evt.altKey) {\r\n        _this.onDblClick(evt);\r\n      } else if (evt.ctrlKey) {\r\n        _this.rubberband.undo();\r\n      } else {\r\n        // TODO: see when this is useful\r\n        // const { width, height } = this.rubberband.getBoundingClientRect();\r\n        // const minWidth = this.config.minSelectionWidth || 4;\r\n        // const minHeight = this.config.minSelectionHeight || 4;\r\n        if (_this.rubberband.points.length == 2) {\r\n          _this.rubberband.addPoint([x, y]); // check if both coordinates are same\r\n\r\n\r\n          if (_this.rubberband.points[0] == _this.rubberband.points[2] && _this.rubberband.points[1] == _this.rubberband.points[3]) {\r\n            _this.emit('cancel');\r\n\r\n            _this.stop();\r\n          } else {\r\n            _this._isDrawing = false;\r\n            var shape = _this.rubberband.element;\r\n            shape.annotation = _this.rubberband.toSelection();\r\n\r\n            _this.emit('complete', shape);\r\n\r\n            _this.stop();\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    RubberbandLineTool_defineProperty(RubberbandLineTool_assertThisInitialized(_this), \"createEditableShape\", function (annotation) {\r\n      return new EditableLine(annotation, _this.g, _this.config, _this.env);\r\n    });\r\n\r\n    _this._isDrawing = false;\r\n    document.addEventListener('keydown', function (evt) {\r\n      if (evt.key == \"z\" && evt.ctrlKey) {\r\n        _this.undo();\r\n      }\r\n\r\n      if (evt.key == 'n') {\r\n        _this.newPart();\r\n      }\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  RubberbandLineTool_createClass(RubberbandLineTool, [{\r\n    key: \"isDrawing\",\r\n    get: function get() {\r\n      return this._isDrawing;\r\n    }\r\n  }]);\r\n\r\n  return RubberbandLineTool;\r\n}(Tool);\r\n\r\n\r\nRubberbandLineTool.identifier = 'line';\r\n\r\nRubberbandLineTool.supports = function (annotation) {\r\n  var _selector$value;\r\n\r\n  var selector = annotation.selector('SvgSelector');\r\n  if (selector) return (_selector$value = selector.value) === null || _selector$value === void 0 ? void 0 : _selector$value.match(/^<svg.*<line/g);\r\n};\r\n;// CONCATENATED MODULE: ./src/index.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ALL_TOOLS = new Set(['point', 'circle', 'ellipse', 'freehand', 'line' // 'multipolygon' // exclude from defaults for now\r\n]);\r\n\r\nvar SelectorPack = function SelectorPack(anno, config) {\r\n  // Add configured tools, or all\r\n  var tools = config !== null && config !== void 0 && config.tools ? config.tools.map(function (t) {\r\n    return t.toLowerCase();\r\n  }) : ALL_TOOLS;\r\n  tools.forEach(function (tool) {\r\n    if (tool === 'point') anno.addDrawingTool(PointTool);\r\n    if (tool === 'circle') anno.addDrawingTool(RubberbandCircleTool);\r\n    if (tool === 'ellipse') anno.addDrawingTool(RubberbandEllipseTool);\r\n    if (tool === 'freehand') anno.addDrawingTool(RubberbandFreehandTool);\r\n    if (tool === 'multipolygon') anno.addDrawingTool(RubberbandMultipolygonTool);\r\n    if (tool === 'line') anno.addDrawingTool(RubberbandLineTool);\r\n  });\r\n};\r\n\r\n/* harmony default export */ const src = (SelectorPack);\r\n})();\r\n\r\n__webpack_exports__ = __webpack_exports__[\"default\"];\r\n/******/ \treturn __webpack_exports__;\r\n/******/ })()\r\n;\r\n});\r\n//# sourceMappingURL=annotorious-selector-pack.js.map",{"ruleId":"268","severity":2,"message":"269","line":95,"column":5,"nodeType":"270","messageId":"271","endLine":95,"endColumn":6,"fix":"272"},{"ruleId":"268","severity":2,"message":"269","line":207,"column":1,"nodeType":"270","messageId":"271","endLine":207,"endColumn":2,"fix":"273"},{"ruleId":"268","severity":2,"message":"269","line":253,"column":1,"nodeType":"270","messageId":"271","endLine":253,"endColumn":2,"fix":"274"},{"ruleId":"268","severity":2,"message":"269","line":276,"column":1,"nodeType":"270","messageId":"271","endLine":276,"endColumn":2,"fix":"275"},{"ruleId":"268","severity":2,"message":"269","line":296,"column":1,"nodeType":"270","messageId":"271","endLine":296,"endColumn":2,"fix":"276"},{"ruleId":"268","severity":2,"message":"269","line":298,"column":1,"nodeType":"270","messageId":"271","endLine":298,"endColumn":2,"fix":"277"},{"ruleId":"268","severity":2,"message":"269","line":306,"column":1,"nodeType":"270","messageId":"271","endLine":306,"endColumn":2,"fix":"278"},{"ruleId":"268","severity":2,"message":"269","line":337,"column":1,"nodeType":"270","messageId":"271","endLine":337,"endColumn":2,"fix":"279"},{"ruleId":"268","severity":2,"message":"269","line":365,"column":1,"nodeType":"270","messageId":"271","endLine":365,"endColumn":2,"fix":"280"},{"ruleId":"268","severity":2,"message":"269","line":539,"column":1,"nodeType":"270","messageId":"271","endLine":539,"endColumn":2,"fix":"281"},{"ruleId":"268","severity":2,"message":"269","line":672,"column":1,"nodeType":"270","messageId":"271","endLine":672,"endColumn":2,"fix":"282"},{"ruleId":"268","severity":2,"message":"269","line":966,"column":1,"nodeType":"270","messageId":"271","endLine":966,"endColumn":2,"fix":"283"},{"ruleId":"268","severity":2,"message":"269","line":1046,"column":1,"nodeType":"270","messageId":"271","endLine":1046,"endColumn":2,"fix":"284"},{"ruleId":"268","severity":2,"message":"269","line":1263,"column":1,"nodeType":"270","messageId":"271","endLine":1263,"endColumn":2,"fix":"285"},{"ruleId":"268","severity":2,"message":"269","line":1283,"column":1,"nodeType":"270","messageId":"271","endLine":1283,"endColumn":2,"fix":"286"},{"ruleId":"268","severity":2,"message":"269","line":1412,"column":1,"nodeType":"270","messageId":"271","endLine":1412,"endColumn":2,"fix":"287"},{"ruleId":"268","severity":2,"message":"269","line":1505,"column":1,"nodeType":"270","messageId":"271","endLine":1505,"endColumn":2,"fix":"288"},{"ruleId":"268","severity":2,"message":"269","line":1653,"column":1,"nodeType":"270","messageId":"271","endLine":1653,"endColumn":2,"fix":"289"},{"ruleId":"268","severity":2,"message":"269","line":1697,"column":1,"nodeType":"270","messageId":"271","endLine":1697,"endColumn":2,"fix":"290"},{"ruleId":"268","severity":2,"message":"269","line":1761,"column":1,"nodeType":"270","messageId":"271","endLine":1761,"endColumn":2,"fix":"291"},{"ruleId":"268","severity":2,"message":"269","line":1848,"column":1,"nodeType":"270","messageId":"271","endLine":1848,"endColumn":2,"fix":"292"},{"ruleId":"268","severity":2,"message":"269","line":1967,"column":1,"nodeType":"270","messageId":"271","endLine":1967,"endColumn":2,"fix":"293"},{"ruleId":"268","severity":2,"message":"269","line":2270,"column":1,"nodeType":"270","messageId":"271","endLine":2270,"endColumn":2,"fix":"294"},{"ruleId":"268","severity":2,"message":"269","line":2387,"column":1,"nodeType":"270","messageId":"271","endLine":2387,"endColumn":2,"fix":"295"},{"ruleId":"268","severity":2,"message":"269","line":2434,"column":1,"nodeType":"270","messageId":"271","endLine":2434,"endColumn":2,"fix":"296"},{"ruleId":"268","severity":2,"message":"269","line":2497,"column":1,"nodeType":"270","messageId":"271","endLine":2497,"endColumn":2,"fix":"297"},{"ruleId":"268","severity":2,"message":"269","line":2581,"column":1,"nodeType":"270","messageId":"271","endLine":2581,"endColumn":2,"fix":"298"},{"ruleId":"268","severity":2,"message":"269","line":2895,"column":1,"nodeType":"270","messageId":"271","endLine":2895,"endColumn":2,"fix":"299"},{"ruleId":"268","severity":2,"message":"269","line":3012,"column":1,"nodeType":"270","messageId":"271","endLine":3012,"endColumn":2,"fix":"300"},{"ruleId":"268","severity":2,"message":"269","line":3126,"column":1,"nodeType":"270","messageId":"271","endLine":3126,"endColumn":2,"fix":"301"},{"ruleId":"268","severity":2,"message":"269","line":3396,"column":1,"nodeType":"270","messageId":"271","endLine":3396,"endColumn":2,"fix":"302"},{"ruleId":"268","severity":2,"message":"269","line":3523,"column":1,"nodeType":"270","messageId":"271","endLine":3523,"endColumn":2,"fix":"303"},{"ruleId":"268","severity":2,"message":"269","line":3568,"column":1,"nodeType":"270","messageId":"271","endLine":3568,"endColumn":2,"fix":"304"},{"ruleId":"268","severity":2,"message":"269","line":3645,"column":13,"nodeType":"270","messageId":"271","endLine":3645,"endColumn":14,"fix":"305"},{"ruleId":"268","severity":2,"message":"269","line":3770,"column":1,"nodeType":"270","messageId":"271","endLine":3770,"endColumn":2,"fix":"306"},{"ruleId":"268","severity":2,"message":"269","line":4271,"column":1,"nodeType":"270","messageId":"271","endLine":4271,"endColumn":2,"fix":"307"},{"ruleId":"268","severity":2,"message":"269","line":4424,"column":1,"nodeType":"270","messageId":"271","endLine":4424,"endColumn":2,"fix":"308"},{"ruleId":"268","severity":2,"message":"269","line":4469,"column":1,"nodeType":"270","messageId":"271","endLine":4469,"endColumn":2,"fix":"309"},{"ruleId":"268","severity":2,"message":"269","line":4624,"column":1,"nodeType":"270","messageId":"271","endLine":4624,"endColumn":2,"fix":"310"},{"ruleId":"268","severity":2,"message":"269","line":4905,"column":1,"nodeType":"270","messageId":"271","endLine":4905,"endColumn":2,"fix":"311"},{"ruleId":"268","severity":2,"message":"269","line":5055,"column":1,"nodeType":"270","messageId":"271","endLine":5055,"endColumn":2,"fix":"312"},"no-extra-semi","Unnecessary semicolon.","EmptyStatement","unexpected",{"range":"313","text":"314"},{"range":"315","text":"316"},{"range":"317","text":"318"},{"range":"319","text":"320"},{"range":"321","text":"322"},{"range":"323","text":"324"},{"range":"325","text":"326"},{"range":"327","text":"328"},{"range":"329","text":"330"},{"range":"331","text":"332"},{"range":"333","text":"334"},{"range":"335","text":"336"},{"range":"337","text":"338"},{"range":"339","text":"340"},{"range":"341","text":"342"},{"range":"343","text":"344"},{"range":"345","text":"346"},{"range":"347","text":"348"},{"range":"349","text":"350"},{"range":"351","text":"352"},{"range":"353","text":"354"},{"range":"355","text":"356"},{"range":"357","text":"358"},{"range":"359","text":"360"},{"range":"361","text":"362"},{"range":"363","text":"364"},{"range":"365","text":"366"},{"range":"367","text":"368"},{"range":"369","text":"370"},{"range":"371","text":"372"},{"range":"373","text":"374"},{"range":"375","text":"376"},{"range":"377","text":"378"},{"range":"379","text":"380"},{"range":"381","text":"382"},{"range":"383","text":"384"},{"range":"385","text":"386"},{"range":"387","text":"388"},{"range":"389","text":"390"},{"range":"391","text":"392"},{"range":"393","text":"394"},[3054,3078],"}\r\n\r\n    \r\n    listener",[7032,7119],";\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/Touch.js\r\nvar",[8658,8743],";\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/SVG.js\r\nvar",[9590,9893],";\r\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\r\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\r\n// require the crypto API and do not support built-in fallback to lower quality random number\r\n// generators (like Math.random()).\r\nvar",[10705,10814],"}\r\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\r\n/* harmony default export */ const",[10942,11032],";\r\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\r\n\r\n\r\nfunction",[11180,11388],";\r\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\r\n\r\n/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\n\r\nvar",[12770,12856],";\r\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\r\n\r\n\r\n\r\nfunction",[13586,13690],";\r\n// CONCATENATED MODULE: ./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js\r\nfunction",[20018,20122],";\r\n\r\n\r\n// CONCATENATED MODULE: ./node_modules/@recogito/recogito-client-core/src/Selection.js\r\nfunction",[25183,25279],";\r\n\r\n\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/Tool.js\r\nfunction",[37313,37596],"; // Just some convenience shortcuts to client-core, for quicker\r\n// importing in plugins. (In a way, the intention is to make the\r\n// Tool class serve as a kind of mini-SDK).\r\n\r\n\r\n\r\n\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/EditableShape.js\r\nfunction",[42964,43072],";\r\n\r\n\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/selectors/RectFragment.js\r\nfunction",[51499,51557],";\r\n// CONCATENATED MODULE: ./src/point/Point.js\r\nfunction",[53129,53195],";\r\n// CONCATENATED MODULE: ./src/point/EditablePoint.js\r\nfunction",[60711,60777],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/point/PointTool.js\r\nfunction",[66519,66622],";\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js\r\nfunction",[73285,73409],";\r\n// CONCATENATED MODULE: ./src/circle/Circle.js\r\n\r\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\r\n\r\nvar",[74724,74788],";\r\n// CONCATENATED MODULE: ./src/circle/CircleMask.js\r\nfunction",[77595,77669],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/circle/RubberbandCircle.js\r\nfunction",[81235,81336],";\r\n\r\n\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/util/Formatting.js\r\nfunction",[86415,86483],";\r\n// CONCATENATED MODULE: ./src/circle/EditableCircle.js\r\nfunction",[101112,101190],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/circle/RubberbandCircleTool.js\r\nfunction",[108055,108186],";\r\n// CONCATENATED MODULE: ./src/ellipse/Ellipse.js\r\n\r\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\r\n\r\nvar",[109715,109781],";\r\n// CONCATENATED MODULE: ./src/ellipse/EllipseMask.js\r\nfunction",[112524,112600],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/ellipse/RubberbandEllipse.js\r\nfunction",[115991,116065],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/ellipse/EditableEllipse.js\r\nfunction",[131209,131289],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/ellipse/RubberbandEllipseTool.js\r\nfunction",[138209,138283],";\r\n// CONCATENATED MODULE: ./src/freehand/RubberbandFreehand.js\r\nfunction",[143838,143914],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/freehand/EditableFreehand.js\r\nfunction",[156488,156570],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/freehand/RubberbandFreehandTool.js\r\nfunction",[163738,163845],";\r\n// CONCATENATED MODULE: ./node_modules/@recogito/annotorious/src/tools/polygon/PolygonMask.js\r\nfunction",[166066,166152],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/multipolygon/RubberbandMultipolygon.js\r\nfunction",[172231,172267],"}\r\n\r\n            \r\n            attr",[176376,176460],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/multipolygon/EditableMultipolygon.js\r\nfunction",[198953,199043],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/multipolygon/RubberbandMultipolygonTool.js\r\nfunction",[207099,207159],";\r\n// CONCATENATED MODULE: ./src/line/LineMask.js\r\nfunction",[209482,209552],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/line/RubberbandLine.js\r\nfunction",[216912,216980],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/line/EditableLine.js\r\nfunction",[231136,231210],";\r\n\r\n\r\n// CONCATENATED MODULE: ./src/line/RubberbandLineTool.js\r\nfunction",[238949,239008],";\r\n// CONCATENATED MODULE: ./src/index.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar"]