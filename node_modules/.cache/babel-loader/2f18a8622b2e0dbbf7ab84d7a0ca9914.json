{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst Transform = require('readable-stream').Transform;\n\nconst duplexify = require('duplexify');\n/* global wx */\n\n\nlet socketTask, proxy, stream;\n\nfunction buildProxy() {\n  const proxy = new Transform();\n\n  proxy._write = function (chunk, encoding, next) {\n    socketTask.send({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function (errMsg) {\n        next(new Error(errMsg));\n      }\n    });\n  };\n\n  proxy._flush = function socketEnd(done) {\n    socketTask.close({\n      success: function () {\n        done();\n      }\n    });\n  };\n\n  return proxy;\n}\n\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n\n  if (!opts.path) {\n    opts.path = '/';\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\n\nfunction buildUrl(opts, client) {\n  const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws';\n  let url = protocol + '://' + opts.hostname + opts.path;\n\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n\n  return url;\n}\n\nfunction bindEventHandler() {\n  socketTask.onOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  socketTask.onMessage(function (res) {\n    let data = res.data;\n    if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n    proxy.push(data);\n  });\n  socketTask.onClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  socketTask.onError(function (res) {\n    stream.destroy(new Error(res.errMsg));\n  });\n}\n\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n\n  const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  const url = buildUrl(opts, client);\n  socketTask = wx.connectSocket({\n    url: url,\n    protocols: [websocketSubProtocol]\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n\n  stream._destroy = function (err, cb) {\n    socketTask.close({\n      success: function () {\n        cb && cb(err);\n      }\n    });\n  };\n\n  const destroyRef = stream.destroy;\n\n  stream.destroy = function () {\n    stream.destroy = destroyRef;\n    const self = this;\n    setTimeout(function () {\n      socketTask.close({\n        fail: function () {\n          self._destroy(new Error());\n        }\n      });\n    }, 0);\n  }.bind(stream);\n\n  bindEventHandler();\n  return stream;\n}\n\nmodule.exports = buildStream;","map":{"version":3,"names":["Buffer","require","Transform","duplexify","socketTask","proxy","stream","buildProxy","_write","chunk","encoding","next","send","data","buffer","success","fail","errMsg","Error","_flush","socketEnd","done","close","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onOpen","setReadable","setWritable","emit","onMessage","res","ArrayBuffer","from","push","onClose","end","destroy","onError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","wx","connectSocket","protocols","obj","_destroy","err","cb","destroyRef","self","setTimeout","bind","module","exports"],"sources":["C:/Users/Danil/Desktop/122/node_modules/mqtt/lib/connect/wx.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst Transform = require('readable-stream').Transform\nconst duplexify = require('duplexify')\n\n/* global wx */\nlet socketTask, proxy, stream\n\nfunction buildProxy () {\n  const proxy = new Transform()\n  proxy._write = function (chunk, encoding, next) {\n    socketTask.send({\n      data: chunk.buffer,\n      success: function () {\n        next()\n      },\n      fail: function (errMsg) {\n        next(new Error(errMsg))\n      }\n    })\n  }\n  proxy._flush = function socketEnd (done) {\n    socketTask.close({\n      success: function () {\n        done()\n      }\n    })\n  }\n\n  return proxy\n}\n\nfunction setDefaultOpts (opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost'\n  }\n  if (!opts.path) {\n    opts.path = '/'\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {}\n  }\n}\n\nfunction buildUrl (opts, client) {\n  const protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'\n  let url = protocol + '://' + opts.hostname + opts.path\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\n  }\n  if (typeof (opts.transformWsUrl) === 'function') {\n    url = opts.transformWsUrl(url, opts, client)\n  }\n  return url\n}\n\nfunction bindEventHandler () {\n  socketTask.onOpen(function () {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  })\n\n  socketTask.onMessage(function (res) {\n    let data = res.data\n\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    else data = Buffer.from(data, 'utf8')\n    proxy.push(data)\n  })\n\n  socketTask.onClose(function () {\n    stream.end()\n    stream.destroy()\n  })\n\n  socketTask.onError(function (res) {\n    stream.destroy(new Error(res.errMsg))\n  })\n}\n\nfunction buildStream (client, opts) {\n  opts.hostname = opts.hostname || opts.host\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.')\n  }\n\n  const websocketSubProtocol =\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\n      ? 'mqttv3.1'\n      : 'mqtt'\n\n  setDefaultOpts(opts)\n\n  const url = buildUrl(opts, client)\n  socketTask = wx.connectSocket({\n    url: url,\n    protocols: [websocketSubProtocol]\n  })\n\n  proxy = buildProxy()\n  stream = duplexify.obj()\n  stream._destroy = function (err, cb) {\n    socketTask.close({\n      success: function () {\n        cb && cb(err)\n      }\n    })\n  }\n\n  const destroyRef = stream.destroy\n  stream.destroy = function () {\n    stream.destroy = destroyRef\n\n    const self = this\n    setTimeout(function () {\n      socketTask.close({\n        fail: function () {\n          self._destroy(new Error())\n        }\n      })\n    }, 0)\n  }.bind(stream)\n\n  bindEventHandler()\n\n  return stream\n}\n\nmodule.exports = buildStream\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}