{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/*\r\n * This software was developed at the National Institute of Standards and\r\n * Technology by employees of the Federal Government in the course of\r\n * their official duties. Pursuant to title 17 Section 105 of the United\r\n * States Code this software is not subject to copyright protection and is\r\n * in the public domain. This software is an experimental system. NIST assumes\r\n * no responsibility whatsoever for its use by other parties, and makes no\r\n * guarantees, expressed or implied, about its quality, reliability, or\r\n * any other characteristic. We would appreciate acknowledgement if the\r\n * software is used.\r\n */\n\n/**\r\n *\r\n * @author Antoine Vandecreme <antoine.vandecreme@nist.gov>\r\n */\n(function () {\n  'use strict';\n\n  var $ = window.OpenSeadragon;\n\n  if (!$) {\n    $ = require('openseadragon');\n\n    if (!$) {\n      throw new Error('OpenSeadragon is missing.');\n    }\n  } // Requires OpenSeadragon >=2.1\n\n\n  if (!$.version || $.version.major < 2 || $.version.major === 2 && $.version.minor < 1) {\n    throw new Error('Filtering plugin requires OpenSeadragon version >= 2.1');\n  }\n\n  $.Viewer.prototype.setFilterOptions = function (options) {\n    if (!this.filterPluginInstance) {\n      options = options || {};\n      options.viewer = this;\n      this.filterPluginInstance = new $.FilterPlugin(options);\n    } else {\n      setOptions(this.filterPluginInstance, options);\n    }\n  };\n  /**\r\n   * @class FilterPlugin\r\n   * @param {Object} options The options\r\n   * @param {OpenSeadragon.Viewer} options.viewer The viewer to attach this\r\n   * plugin to.\r\n   * @param {String} [options.loadMode='async'] Set to sync to have the filters\r\n   * applied synchronously. It will only work if the filters are all synchronous.\r\n   * Note that depending on how complex the filters are, it may also hang the browser.\r\n   * @param {Object[]} options.filters The filters to apply to the images.\r\n   * @param {OpenSeadragon.TiledImage[]} options.filters[x].items The tiled images\r\n   * on which to apply the filter.\r\n   * @param {function|function[]} options.filters[x].processors The processing\r\n   * function(s) to apply to the images. The parameters of this function are\r\n   * the context to modify and a callback to call upon completion.\r\n   */\n\n\n  $.FilterPlugin = function (options) {\n    options = options || {};\n\n    if (!options.viewer) {\n      throw new Error('A viewer must be specified.');\n    }\n\n    var self = this;\n    this.viewer = options.viewer;\n    this.viewer.addHandler('tile-loaded', tileLoadedHandler);\n    this.viewer.addHandler('tile-drawing', tileDrawingHandler); // filterIncrement allows to determine whether a tile contains the\n    // latest filters results.\n\n    this.filterIncrement = 0;\n    setOptions(this, options);\n\n    function tileLoadedHandler(event) {\n      var processors = getFiltersProcessors(self, event.tiledImage);\n\n      if (processors.length === 0) {\n        return;\n      }\n\n      var tile = event.tile;\n      var image = event.image;\n\n      if (image !== null && image !== undefined) {\n        var canvas = window.document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        tile._renderedContext = context;\n        var callback = event.getCompletionCallback();\n        applyFilters(context, processors, callback);\n        tile._filterIncrement = self.filterIncrement;\n      }\n    }\n\n    function applyFilters(context, filtersProcessors, callback) {\n      if (callback) {\n        var currentIncrement = self.filterIncrement;\n        var callbacks = [];\n\n        for (var i = 0; i < filtersProcessors.length - 1; i++) {\n          (function (i) {\n            callbacks[i] = function () {\n              // If the increment has changed, stop the computation\n              // chain immediately.\n              if (self.filterIncrement !== currentIncrement) {\n                return;\n              }\n\n              filtersProcessors[i + 1](context, callbacks[i + 1]);\n            };\n          })(i);\n        }\n\n        callbacks[filtersProcessors.length - 1] = function () {\n          // If the increment has changed, do not call the callback.\n          // (We don't want OSD to draw an outdated tile in the canvas).\n          if (self.filterIncrement !== currentIncrement) {\n            return;\n          }\n\n          callback();\n        };\n\n        filtersProcessors[0](context, callbacks[0]);\n      } else {\n        for (var i = 0; i < filtersProcessors.length; i++) {\n          filtersProcessors[i](context, function () {});\n        }\n      }\n    }\n\n    function tileDrawingHandler(event) {\n      var tile = event.tile;\n      var rendered = event.rendered;\n\n      if (rendered._filterIncrement === self.filterIncrement) {\n        return;\n      }\n\n      var processors = getFiltersProcessors(self, event.tiledImage);\n\n      if (processors.length === 0) {\n        if (rendered._originalImageData) {\n          // Restore initial data.\n          rendered.putImageData(rendered._originalImageData, 0, 0);\n          delete rendered._originalImageData;\n        }\n\n        rendered._filterIncrement = self.filterIncrement;\n        return;\n      }\n\n      if (rendered._originalImageData) {\n        // The tile has been previously filtered (by another filter),\n        // restore it first.\n        rendered.putImageData(rendered._originalImageData, 0, 0);\n      } else {\n        rendered._originalImageData = rendered.getImageData(0, 0, rendered.canvas.width, rendered.canvas.height);\n      }\n\n      if (tile._renderedContext) {\n        if (tile._filterIncrement === self.filterIncrement) {\n          var imgData = tile._renderedContext.getImageData(0, 0, tile._renderedContext.canvas.width, tile._renderedContext.canvas.height);\n\n          rendered.putImageData(imgData, 0, 0);\n          delete tile._renderedContext;\n          delete tile._filterIncrement;\n          rendered._filterIncrement = self.filterIncrement;\n          return;\n        }\n\n        delete tile._renderedContext;\n        delete tile._filterIncrement;\n      }\n\n      applyFilters(rendered, processors);\n      rendered._filterIncrement = self.filterIncrement;\n    }\n  };\n\n  function setOptions(instance, options) {\n    options = options || {};\n    var filters = options.filters;\n    instance.filters = !filters ? [] : $.isArray(filters) ? filters : [filters];\n\n    for (var i = 0; i < instance.filters.length; i++) {\n      var filter = instance.filters[i];\n\n      if (!filter.processors) {\n        throw new Error('Filter processors must be specified.');\n      }\n\n      filter.processors = $.isArray(filter.processors) ? filter.processors : [filter.processors];\n    }\n\n    instance.filterIncrement++;\n\n    if (options.loadMode === 'sync') {\n      instance.viewer.forceRedraw();\n    } else {\n      var itemsToReset = [];\n\n      for (var i = 0; i < instance.filters.length; i++) {\n        var filter = instance.filters[i];\n\n        if (!filter.items) {\n          itemsToReset = getAllItems(instance.viewer.world);\n          break;\n        }\n\n        if ($.isArray(filter.items)) {\n          for (var j = 0; j < filter.items.length; j++) {\n            addItemToReset(filter.items[j], itemsToReset);\n          }\n        } else {\n          addItemToReset(filter.items, itemsToReset);\n        }\n      }\n\n      for (var i = 0; i < itemsToReset.length; i++) {\n        itemsToReset[i].reset();\n      }\n    }\n  }\n\n  function addItemToReset(item, itemsToReset) {\n    if (itemsToReset.indexOf(item) >= 0) {\n      throw new Error('An item can not have filters ' + 'assigned multiple times.');\n    }\n\n    itemsToReset.push(item);\n  }\n\n  function getAllItems(world) {\n    var result = [];\n\n    for (var i = 0; i < world.getItemCount(); i++) {\n      result.push(world.getItemAt(i));\n    }\n\n    return result;\n  }\n\n  function getFiltersProcessors(instance, item) {\n    if (instance.filters.length === 0) {\n      return [];\n    }\n\n    var globalProcessors = null;\n\n    for (var i = 0; i < instance.filters.length; i++) {\n      var filter = instance.filters[i];\n\n      if (!filter.items) {\n        globalProcessors = filter.processors;\n      } else if (filter.items === item || $.isArray(filter.items) && filter.items.indexOf(item) >= 0) {\n        return filter.processors;\n      }\n    }\n\n    return globalProcessors ? globalProcessors : [];\n  }\n\n  $.Filters = {\n    THRESHOLDING: function (threshold) {\n      if (threshold < 0 || threshold > 255) {\n        throw new Error('Threshold must be between 0 and 255.');\n      }\n\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          var r = pixels[i];\n          var g = pixels[i + 1];\n          var b = pixels[i + 2];\n          var v = (r + g + b) / 3;\n          pixels[i] = pixels[i + 1] = pixels[i + 2] = v < threshold ? 0 : 255;\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    BRIGHTNESS: function (adjustment) {\n      if (adjustment < -255 || adjustment > 255) {\n        throw new Error('Brightness adjustment must be between -255 and 255.');\n      }\n\n      var precomputedBrightness = [];\n\n      for (var i = 0; i < 256; i++) {\n        precomputedBrightness[i] = i + adjustment;\n      }\n\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          pixels[i] = precomputedBrightness[pixels[i]];\n          pixels[i + 1] = precomputedBrightness[pixels[i + 1]];\n          pixels[i + 2] = precomputedBrightness[pixels[i + 2]];\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    CONTRAST: function (adjustment) {\n      if (adjustment < 0) {\n        throw new Error('Contrast adjustment must be positive.');\n      }\n\n      var precomputedContrast = [];\n\n      for (var i = 0; i < 256; i++) {\n        precomputedContrast[i] = i * adjustment;\n      }\n\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          pixels[i] = precomputedContrast[pixels[i]];\n          pixels[i + 1] = precomputedContrast[pixels[i + 1]];\n          pixels[i + 2] = precomputedContrast[pixels[i + 2]];\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    GAMMA: function (adjustment) {\n      if (adjustment < 0) {\n        throw new Error('Gamma adjustment must be positive.');\n      }\n\n      var precomputedGamma = [];\n\n      for (var i = 0; i < 256; i++) {\n        precomputedGamma[i] = Math.pow(i / 255, adjustment) * 255;\n      }\n\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          pixels[i] = precomputedGamma[pixels[i]];\n          pixels[i + 1] = precomputedGamma[pixels[i + 1]];\n          pixels[i + 2] = precomputedGamma[pixels[i + 2]];\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    GREYSCALE: function () {\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          var val = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\n          pixels[i] = val;\n          pixels[i + 1] = val;\n          pixels[i + 2] = val;\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    INVERT: function () {\n      var precomputedInvert = [];\n\n      for (var i = 0; i < 256; i++) {\n        precomputedInvert[i] = 255 - i;\n      }\n\n      return function (context, callback) {\n        var imgData = context.getImageData(0, 0, context.canvas.width, context.canvas.height);\n        var pixels = imgData.data;\n\n        for (var i = 0; i < pixels.length; i += 4) {\n          pixels[i] = precomputedInvert[pixels[i]];\n          pixels[i + 1] = precomputedInvert[pixels[i + 1]];\n          pixels[i + 2] = precomputedInvert[pixels[i + 2]];\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    MORPHOLOGICAL_OPERATION: function (kernelSize, comparator) {\n      if (kernelSize % 2 === 0) {\n        throw new Error('The kernel size must be an odd number.');\n      }\n\n      var kernelHalfSize = Math.floor(kernelSize / 2);\n\n      if (!comparator) {\n        throw new Error('A comparator must be defined.');\n      }\n\n      return function (context, callback) {\n        var width = context.canvas.width;\n        var height = context.canvas.height;\n        var imgData = context.getImageData(0, 0, width, height);\n        var originalPixels = context.getImageData(0, 0, width, height).data;\n        var offset;\n\n        for (var y = 0; y < height; y++) {\n          for (var x = 0; x < width; x++) {\n            offset = (y * width + x) * 4;\n            var r = originalPixels[offset];\n            var g = originalPixels[offset + 1];\n            var b = originalPixels[offset + 2];\n\n            for (var j = 0; j < kernelSize; j++) {\n              for (var i = 0; i < kernelSize; i++) {\n                var pixelX = x + i - kernelHalfSize;\n                var pixelY = y + j - kernelHalfSize;\n\n                if (pixelX >= 0 && pixelX < width && pixelY >= 0 && pixelY < height) {\n                  offset = (pixelY * width + pixelX) * 4;\n                  r = comparator(originalPixels[offset], r);\n                  g = comparator(originalPixels[offset + 1], g);\n                  b = comparator(originalPixels[offset + 2], b);\n                }\n              }\n            }\n\n            imgData.data[offset] = r;\n            imgData.data[offset + 1] = g;\n            imgData.data[offset + 2] = b;\n          }\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    },\n    CONVOLUTION: function (kernel) {\n      if (!$.isArray(kernel)) {\n        throw new Error('The kernel must be an array.');\n      }\n\n      var kernelSize = Math.sqrt(kernel.length);\n\n      if ((kernelSize + 1) % 2 !== 0) {\n        throw new Error('The kernel must be a square matrix with odd' + 'width and height.');\n      }\n\n      var kernelHalfSize = (kernelSize - 1) / 2;\n      return function (context, callback) {\n        var width = context.canvas.width;\n        var height = context.canvas.height;\n        var imgData = context.getImageData(0, 0, width, height);\n        var originalPixels = context.getImageData(0, 0, width, height).data;\n        var offset;\n\n        for (var y = 0; y < height; y++) {\n          for (var x = 0; x < width; x++) {\n            var r = 0;\n            var g = 0;\n            var b = 0;\n\n            for (var j = 0; j < kernelSize; j++) {\n              for (var i = 0; i < kernelSize; i++) {\n                var pixelX = x + i - kernelHalfSize;\n                var pixelY = y + j - kernelHalfSize;\n\n                if (pixelX >= 0 && pixelX < width && pixelY >= 0 && pixelY < height) {\n                  offset = (pixelY * width + pixelX) * 4;\n                  var weight = kernel[j * kernelSize + i];\n                  r += originalPixels[offset] * weight;\n                  g += originalPixels[offset + 1] * weight;\n                  b += originalPixels[offset + 2] * weight;\n                }\n              }\n            }\n\n            offset = (y * width + x) * 4;\n            imgData.data[offset] = r;\n            imgData.data[offset + 1] = g;\n            imgData.data[offset + 2] = b;\n          }\n        }\n\n        context.putImageData(imgData, 0, 0);\n        callback();\n      };\n    }\n  };\n})();","map":{"version":3,"names":["$","window","OpenSeadragon","require","Error","version","major","minor","Viewer","prototype","setFilterOptions","options","filterPluginInstance","viewer","FilterPlugin","setOptions","self","addHandler","tileLoadedHandler","tileDrawingHandler","filterIncrement","event","processors","getFiltersProcessors","tiledImage","length","tile","image","undefined","canvas","document","createElement","width","height","context","getContext","drawImage","_renderedContext","callback","getCompletionCallback","applyFilters","_filterIncrement","filtersProcessors","currentIncrement","callbacks","i","rendered","_originalImageData","putImageData","getImageData","imgData","instance","filters","isArray","filter","loadMode","forceRedraw","itemsToReset","items","getAllItems","world","j","addItemToReset","reset","item","indexOf","push","result","getItemCount","getItemAt","globalProcessors","Filters","THRESHOLDING","threshold","pixels","data","r","g","b","v","BRIGHTNESS","adjustment","precomputedBrightness","CONTRAST","precomputedContrast","GAMMA","precomputedGamma","Math","pow","GREYSCALE","val","INVERT","precomputedInvert","MORPHOLOGICAL_OPERATION","kernelSize","comparator","kernelHalfSize","floor","originalPixels","offset","y","x","pixelX","pixelY","CONVOLUTION","kernel","sqrt","weight"],"sources":["C:/Users/Danil/Desktop/project1/src/libs/openseadragon-filtering.js"],"sourcesContent":["/*\r\n * This software was developed at the National Institute of Standards and\r\n * Technology by employees of the Federal Government in the course of\r\n * their official duties. Pursuant to title 17 Section 105 of the United\r\n * States Code this software is not subject to copyright protection and is\r\n * in the public domain. This software is an experimental system. NIST assumes\r\n * no responsibility whatsoever for its use by other parties, and makes no\r\n * guarantees, expressed or implied, about its quality, reliability, or\r\n * any other characteristic. We would appreciate acknowledgement if the\r\n * software is used.\r\n */\r\n\r\n/**\r\n *\r\n * @author Antoine Vandecreme <antoine.vandecreme@nist.gov>\r\n */\r\n(function() {\r\n\r\n    'use strict';\r\n\r\n    var $ = window.OpenSeadragon;\r\n    if (!$) {\r\n        $ = require('openseadragon');\r\n        if (!$) {\r\n            throw new Error('OpenSeadragon is missing.');\r\n        }\r\n    }\r\n    // Requires OpenSeadragon >=2.1\r\n    if (!$.version || $.version.major < 2 ||\r\n        $.version.major === 2 && $.version.minor < 1) {\r\n        throw new Error(\r\n            'Filtering plugin requires OpenSeadragon version >= 2.1');\r\n    }\r\n\r\n    $.Viewer.prototype.setFilterOptions = function(options) {\r\n        if (!this.filterPluginInstance) {\r\n            options = options || {};\r\n            options.viewer = this;\r\n            this.filterPluginInstance = new $.FilterPlugin(options);\r\n        } else {\r\n            setOptions(this.filterPluginInstance, options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @class FilterPlugin\r\n     * @param {Object} options The options\r\n     * @param {OpenSeadragon.Viewer} options.viewer The viewer to attach this\r\n     * plugin to.\r\n     * @param {String} [options.loadMode='async'] Set to sync to have the filters\r\n     * applied synchronously. It will only work if the filters are all synchronous.\r\n     * Note that depending on how complex the filters are, it may also hang the browser.\r\n     * @param {Object[]} options.filters The filters to apply to the images.\r\n     * @param {OpenSeadragon.TiledImage[]} options.filters[x].items The tiled images\r\n     * on which to apply the filter.\r\n     * @param {function|function[]} options.filters[x].processors The processing\r\n     * function(s) to apply to the images. The parameters of this function are\r\n     * the context to modify and a callback to call upon completion.\r\n     */\r\n    $.FilterPlugin = function(options) {\r\n        options = options || {};\r\n        if (!options.viewer) {\r\n            throw new Error('A viewer must be specified.');\r\n        }\r\n        var self = this;\r\n        this.viewer = options.viewer;\r\n\r\n        this.viewer.addHandler('tile-loaded', tileLoadedHandler);\r\n        this.viewer.addHandler('tile-drawing', tileDrawingHandler);\r\n\r\n        // filterIncrement allows to determine whether a tile contains the\r\n        // latest filters results.\r\n        this.filterIncrement = 0;\r\n\r\n        setOptions(this, options);\r\n\r\n\r\n        function tileLoadedHandler(event) {\r\n            var processors = getFiltersProcessors(self, event.tiledImage);\r\n            if (processors.length === 0) {\r\n                return;\r\n            }\r\n            var tile = event.tile;\r\n            var image = event.image;\r\n            if (image !== null && image !== undefined) {\r\n                var canvas = window.document.createElement('canvas');\r\n                canvas.width = image.width;\r\n                canvas.height = image.height;\r\n                var context = canvas.getContext('2d');\r\n                context.drawImage(image, 0, 0);\r\n                tile._renderedContext = context;\r\n                var callback = event.getCompletionCallback();\r\n                applyFilters(context, processors, callback);\r\n                tile._filterIncrement = self.filterIncrement;\r\n            }\r\n        }\r\n\r\n\r\n        function applyFilters(context, filtersProcessors, callback) {\r\n            if (callback) {\r\n                var currentIncrement = self.filterIncrement;\r\n                var callbacks = [];\r\n                for (var i = 0; i < filtersProcessors.length - 1; i++) {\r\n                    (function(i) {\r\n                        callbacks[i] = function() {\r\n                            // If the increment has changed, stop the computation\r\n                            // chain immediately.\r\n                            if (self.filterIncrement !== currentIncrement) {\r\n                                return;\r\n                            }\r\n                            filtersProcessors[i + 1](context, callbacks[i + 1]);\r\n                        };\r\n                    })(i);\r\n                }\r\n                callbacks[filtersProcessors.length - 1] = function() {\r\n                    // If the increment has changed, do not call the callback.\r\n                    // (We don't want OSD to draw an outdated tile in the canvas).\r\n                    if (self.filterIncrement !== currentIncrement) {\r\n                        return;\r\n                    }\r\n                    callback();\r\n                };\r\n                filtersProcessors[0](context, callbacks[0]);\r\n            } else {\r\n                for (var i = 0; i < filtersProcessors.length; i++) {\r\n                    filtersProcessors[i](context, function() {\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        function tileDrawingHandler(event) {\r\n            var tile = event.tile;\r\n            var rendered = event.rendered;\r\n            if (rendered._filterIncrement === self.filterIncrement) {\r\n                return;\r\n            }\r\n            var processors = getFiltersProcessors(self, event.tiledImage);\r\n            if (processors.length === 0) {\r\n                if (rendered._originalImageData) {\r\n                    // Restore initial data.\r\n                    rendered.putImageData(rendered._originalImageData, 0, 0);\r\n                    delete rendered._originalImageData;\r\n                }\r\n                rendered._filterIncrement = self.filterIncrement;\r\n                return;\r\n            }\r\n\r\n            if (rendered._originalImageData) {\r\n                // The tile has been previously filtered (by another filter),\r\n                // restore it first.\r\n                rendered.putImageData(rendered._originalImageData, 0, 0);\r\n            } else {\r\n                rendered._originalImageData = rendered.getImageData(\r\n                    0, 0, rendered.canvas.width, rendered.canvas.height);\r\n            }\r\n\r\n            if (tile._renderedContext) {\r\n                if (tile._filterIncrement === self.filterIncrement) {\r\n                    var imgData = tile._renderedContext.getImageData(0, 0,\r\n                        tile._renderedContext.canvas.width,\r\n                        tile._renderedContext.canvas.height);\r\n                    rendered.putImageData(imgData, 0, 0);\r\n                    delete tile._renderedContext;\r\n                    delete tile._filterIncrement;\r\n                    rendered._filterIncrement = self.filterIncrement;\r\n                    return;\r\n                }\r\n                delete tile._renderedContext;\r\n                delete tile._filterIncrement;\r\n            }\r\n            applyFilters(rendered, processors);\r\n            rendered._filterIncrement = self.filterIncrement;\r\n        }\r\n    };\r\n\r\n    function setOptions(instance, options) {\r\n        options = options || {};\r\n        var filters = options.filters;\r\n        instance.filters = !filters ? [] :\r\n            $.isArray(filters) ? filters : [filters];\r\n        for (var i = 0; i < instance.filters.length; i++) {\r\n            var filter = instance.filters[i];\r\n            if (!filter.processors) {\r\n                throw new Error('Filter processors must be specified.');\r\n            }\r\n            filter.processors = $.isArray(filter.processors) ?\r\n                filter.processors : [filter.processors];\r\n        }\r\n        instance.filterIncrement++;\r\n\r\n        if (options.loadMode === 'sync') {\r\n            instance.viewer.forceRedraw();\r\n        } else {\r\n            var itemsToReset = [];\r\n            for (var i = 0; i < instance.filters.length; i++) {\r\n                var filter = instance.filters[i];\r\n                if (!filter.items) {\r\n                    itemsToReset = getAllItems(instance.viewer.world);\r\n                    break;\r\n                }\r\n                if ($.isArray(filter.items)) {\r\n                    for (var j = 0; j < filter.items.length; j++) {\r\n                        addItemToReset(filter.items[j], itemsToReset);\r\n                    }\r\n                } else {\r\n                    addItemToReset(filter.items, itemsToReset);\r\n                }\r\n            }\r\n            for (var i = 0; i < itemsToReset.length; i++) {\r\n                itemsToReset[i].reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    function addItemToReset(item, itemsToReset) {\r\n        if (itemsToReset.indexOf(item) >= 0) {\r\n            throw new Error('An item can not have filters ' +\r\n                'assigned multiple times.');\r\n        }\r\n        itemsToReset.push(item);\r\n    }\r\n\r\n    function getAllItems(world) {\r\n        var result = [];\r\n        for (var i = 0; i < world.getItemCount(); i++) {\r\n            result.push(world.getItemAt(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getFiltersProcessors(instance, item) {\r\n        if (instance.filters.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        var globalProcessors = null;\r\n        for (var i = 0; i < instance.filters.length; i++) {\r\n            var filter = instance.filters[i];\r\n            if (!filter.items) {\r\n                globalProcessors = filter.processors;\r\n            } else if (filter.items === item ||\r\n                $.isArray(filter.items) && filter.items.indexOf(item) >= 0) {\r\n                return filter.processors;\r\n            }\r\n        }\r\n        return globalProcessors ? globalProcessors : [];\r\n    }\r\n\r\n    $.Filters = {\r\n        THRESHOLDING: function(threshold) {\r\n            if (threshold < 0 || threshold > 255) {\r\n                throw new Error('Threshold must be between 0 and 255.');\r\n            }\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    var r = pixels[i];\r\n                    var g = pixels[i + 1];\r\n                    var b = pixels[i + 2];\r\n                    var v = (r + g + b) / 3;\r\n                    pixels[i] = pixels[i + 1] = pixels[i + 2] =\r\n                        v < threshold ? 0 : 255;\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        BRIGHTNESS: function(adjustment) {\r\n            if (adjustment < -255 || adjustment > 255) {\r\n                throw new Error(\r\n                    'Brightness adjustment must be between -255 and 255.');\r\n            }\r\n            var precomputedBrightness = [];\r\n            for (var i = 0; i < 256; i++) {\r\n                precomputedBrightness[i] = i + adjustment;\r\n            }\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    pixels[i] = precomputedBrightness[pixels[i]];\r\n                    pixels[i + 1] = precomputedBrightness[pixels[i + 1]];\r\n                    pixels[i + 2] = precomputedBrightness[pixels[i + 2]];\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        CONTRAST: function(adjustment) {\r\n            if (adjustment < 0) {\r\n                throw new Error('Contrast adjustment must be positive.');\r\n            }\r\n            var precomputedContrast = [];\r\n            for (var i = 0; i < 256; i++) {\r\n                precomputedContrast[i] = i * adjustment;\r\n            }\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    pixels[i] = precomputedContrast[pixels[i]];\r\n                    pixels[i + 1] = precomputedContrast[pixels[i + 1]];\r\n                    pixels[i + 2] = precomputedContrast[pixels[i + 2]];\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        GAMMA: function(adjustment) {\r\n            if (adjustment < 0) {\r\n                throw new Error('Gamma adjustment must be positive.');\r\n            }\r\n            var precomputedGamma = [];\r\n            for (var i = 0; i < 256; i++) {\r\n                precomputedGamma[i] = Math.pow(i / 255, adjustment) * 255;\r\n            }\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    pixels[i] = precomputedGamma[pixels[i]];\r\n                    pixels[i + 1] = precomputedGamma[pixels[i + 1]];\r\n                    pixels[i + 2] = precomputedGamma[pixels[i + 2]];\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        GREYSCALE: function() {\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    var val = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\r\n                    pixels[i] = val;\r\n                    pixels[i + 1] = val;\r\n                    pixels[i + 2] = val;\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        INVERT: function() {\r\n            var precomputedInvert = [];\r\n            for (var i = 0; i < 256; i++) {\r\n                precomputedInvert[i] = 255 - i;\r\n            }\r\n            return function(context, callback) {\r\n                var imgData = context.getImageData(\r\n                    0, 0, context.canvas.width, context.canvas.height);\r\n                var pixels = imgData.data;\r\n                for (var i = 0; i < pixels.length; i += 4) {\r\n                    pixels[i] = precomputedInvert[pixels[i]];\r\n                    pixels[i + 1] = precomputedInvert[pixels[i + 1]];\r\n                    pixels[i + 2] = precomputedInvert[pixels[i + 2]];\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        MORPHOLOGICAL_OPERATION: function(kernelSize, comparator) {\r\n            if (kernelSize % 2 === 0) {\r\n                throw new Error('The kernel size must be an odd number.');\r\n            }\r\n            var kernelHalfSize = Math.floor(kernelSize / 2);\r\n\r\n            if (!comparator) {\r\n                throw new Error('A comparator must be defined.');\r\n            }\r\n\r\n            return function(context, callback) {\r\n                var width = context.canvas.width;\r\n                var height = context.canvas.height;\r\n                var imgData = context.getImageData(0, 0, width, height);\r\n                var originalPixels = context.getImageData(0, 0, width, height)\r\n                    .data;\r\n                var offset;\r\n\r\n                for (var y = 0; y < height; y++) {\r\n                    for (var x = 0; x < width; x++) {\r\n                        offset = (y * width + x) * 4;\r\n                        var r = originalPixels[offset];\r\n                        var g = originalPixels[offset + 1];\r\n                        var b = originalPixels[offset + 2];\r\n                        for (var j = 0; j < kernelSize; j++) {\r\n                            for (var i = 0; i < kernelSize; i++) {\r\n                                var pixelX = x + i - kernelHalfSize;\r\n                                var pixelY = y + j - kernelHalfSize;\r\n                                if (pixelX >= 0 && pixelX < width &&\r\n                                    pixelY >= 0 && pixelY < height) {\r\n                                    offset = (pixelY * width + pixelX) * 4;\r\n                                    r = comparator(originalPixels[offset], r);\r\n                                    g = comparator(\r\n                                        originalPixels[offset + 1], g);\r\n                                    b = comparator(\r\n                                        originalPixels[offset + 2], b);\r\n                                }\r\n                            }\r\n                        }\r\n                        imgData.data[offset] = r;\r\n                        imgData.data[offset + 1] = g;\r\n                        imgData.data[offset + 2] = b;\r\n                    }\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        },\r\n        CONVOLUTION: function(kernel) {\r\n            if (!$.isArray(kernel)) {\r\n                throw new Error('The kernel must be an array.');\r\n            }\r\n            var kernelSize = Math.sqrt(kernel.length);\r\n            if ((kernelSize + 1) % 2 !== 0) {\r\n                throw new Error('The kernel must be a square matrix with odd' +\r\n                    'width and height.');\r\n            }\r\n            var kernelHalfSize = (kernelSize - 1) / 2;\r\n\r\n            return function(context, callback) {\r\n                var width = context.canvas.width;\r\n                var height = context.canvas.height;\r\n                var imgData = context.getImageData(0, 0, width, height);\r\n                var originalPixels = context.getImageData(0, 0, width, height)\r\n                    .data;\r\n                var offset;\r\n\r\n                for (var y = 0; y < height; y++) {\r\n                    for (var x = 0; x < width; x++) {\r\n                        var r = 0;\r\n                        var g = 0;\r\n                        var b = 0;\r\n                        for (var j = 0; j < kernelSize; j++) {\r\n                            for (var i = 0; i < kernelSize; i++) {\r\n                                var pixelX = x + i - kernelHalfSize;\r\n                                var pixelY = y + j - kernelHalfSize;\r\n                                if (pixelX >= 0 && pixelX < width &&\r\n                                    pixelY >= 0 && pixelY < height) {\r\n                                    offset = (pixelY * width + pixelX) * 4;\r\n                                    var weight = kernel[j * kernelSize + i];\r\n                                    r += originalPixels[offset] * weight;\r\n                                    g += originalPixels[offset + 1] * weight;\r\n                                    b += originalPixels[offset + 2] * weight;\r\n                                }\r\n                            }\r\n                        }\r\n                        offset = (y * width + x) * 4;\r\n                        imgData.data[offset] = r;\r\n                        imgData.data[offset + 1] = g;\r\n                        imgData.data[offset + 2] = b;\r\n                    }\r\n                }\r\n                context.putImageData(imgData, 0, 0);\r\n                callback();\r\n            };\r\n        }\r\n    };\r\n\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}