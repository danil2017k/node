{"ast":null,"code":"import axios from 'axios';\nimport mqtt from '@/utils/mqtt';\nexport const processNeuralSearch = async ({\n  commit\n}, {\n  specializationID,\n  sessionID,\n  image\n}) => {\n  const [, trimmedImage] = image.split('data:image/png;base64,');\n\n  try {\n    const {\n      data: response\n    } = await axios.post('/ds-api/similar', {\n      image: trimmedImage,\n      specializationID\n    });\n    const topic = `ds-jobs/${response.data.ID}`;\n    const searchResult = await new Promise((resolve, reject) => {\n      mqtt.subscribe(topic, async (topic, result) => {\n        mqtt.unsubscribe(topic);\n        console.log(result);\n        resolve(result);\n      });\n    });\n\n    if (!searchResult.CROPS) {\n      return 404;\n    } else {\n      const casesIDs = [...new Set(searchResult.CROPS.map(crop => crop.CASEID))];\n      const caseMap = {};\n      const {\n        data: {\n          cases\n        }\n      } = await axios.post('/api/neural_search/cases', {\n        ids: casesIDs\n      });\n      cases.forEach(caseObj => {\n        caseMap[caseObj.id] = caseObj;\n      });\n      console.log(caseMap);\n      const results = searchResult.CROPS.map(crop => {\n        const data = caseMap[crop.CASEID];\n        return {\n          ID: data.id,\n          title: data.title,\n          date: new Date(data.creation_date * 1000),\n          patient_gender: data.patient_gender,\n          patient_birth_date: new Date(data.patient_birth_date),\n          patient_location: data.specialization_name,\n          incoming_diagnosis: data.diagnosis,\n          report_diagnosis: data.diagnosis,\n          case_image: '/tiles/' + crop.PATH,\n          href: `${location.origin}/cases/${crop.CASEID}?file=${crop.FILEID}`\n        };\n      });\n      commit('NEURAL_SEARCH_DONE', {\n        sessionID,\n        image,\n        results\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const closeNeuralSearchPopup = ({\n  commit\n}) => {\n  commit('NEURAL_SEARCH_CLOSE_POPUP');\n}; // WEBPACK FOOTER //\n// ./src/store/actions/snapshot.js","map":{"version":3,"names":["axios","mqtt","processNeuralSearch","commit","specializationID","sessionID","image","trimmedImage","split","data","response","post","topic","ID","searchResult","Promise","resolve","reject","subscribe","result","unsubscribe","console","log","CROPS","casesIDs","Set","map","crop","CASEID","caseMap","cases","ids","forEach","caseObj","id","results","title","date","Date","creation_date","patient_gender","patient_birth_date","patient_location","specialization_name","incoming_diagnosis","diagnosis","report_diagnosis","case_image","PATH","href","location","origin","FILEID","error","closeNeuralSearchPopup"],"sources":["C:/Users/Danil/Desktop/122/src/store/action/snapshot.js"],"sourcesContent":["import axios from 'axios'\r\nimport mqtt from '@/utils/mqtt'\r\n\r\nexport const processNeuralSearch = async (\r\n  { commit }, { specializationID, sessionID, image }\r\n) => {\r\n  const [, trimmedImage] = image.split('data:image/png;base64,')\r\n\r\n  try {\r\n    const {data: response} = await axios.post('/ds-api/similar', {\r\n      image: trimmedImage,\r\n      specializationID\r\n    })\r\n\r\n    const topic = `ds-jobs/${response.data.ID}`\r\n\r\n    const searchResult = await new Promise((resolve, reject) => {\r\n      mqtt.subscribe(topic, async (topic, result) => {\r\n        mqtt.unsubscribe(topic)\r\n        console.log(result)\r\n        resolve(result)\r\n      })\r\n    })\r\n\r\n    if (!searchResult.CROPS) {\r\n      return 404\r\n    } else {\r\n      const casesIDs = [...new Set(searchResult.CROPS.map(crop => crop.CASEID))]\r\n\r\n      const caseMap = {}\r\n      const { data: { cases } } = await axios.post(\r\n        '/api/neural_search/cases', { ids: casesIDs }\r\n      )\r\n\r\n      cases.forEach(caseObj => { caseMap[caseObj.id] = caseObj })\r\n\r\n      console.log(caseMap)\r\n\r\n      const results = searchResult.CROPS.map(crop => {\r\n        const data = caseMap[crop.CASEID]\r\n\r\n        return {\r\n          ID: data.id,\r\n          title: data.title,\r\n          date: new Date(data.creation_date * 1000),\r\n          patient_gender: data.patient_gender,\r\n          patient_birth_date: new Date(data.patient_birth_date),\r\n          patient_location: data.specialization_name,\r\n          incoming_diagnosis: data.diagnosis,\r\n          report_diagnosis: data.diagnosis,\r\n          case_image: '/tiles/' + crop.PATH,\r\n          href: `${location.origin}/cases/${crop.CASEID}?file=${crop.FILEID}`\r\n        }\r\n      })\r\n\r\n      commit('NEURAL_SEARCH_DONE', { sessionID, image, results })\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport const closeNeuralSearchPopup = ({ commit }) => {\r\n  commit('NEURAL_SEARCH_CLOSE_POPUP')\r\n}\r\n\r\n\r\n\r\n// WEBPACK FOOTER //\r\n// ./src/store/actions/snapshot.js"],"mappings":"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"},"metadata":{},"sourceType":"module"}