{"ast":null,"code":"\"use strict\";\n\nconst nodeTypes = require(\"../node-type\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\"); // Serialization only requires a subset of the tree adapter interface.\n// Tree traversing\n\n\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n\n  return attributeList;\n}; // Node data\n\n\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode; // Node types\n\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE; // Source code location\n\n\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\n\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\n  Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["nodeTypes","require","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childrenToArray","getParentNode","parentNode","getAttrList","element","attributeList","_attributeList","_isValue","every","attr","name","unshift","namespace","prefix","value","getTagName","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","Object","assign"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/domparsing/parse5-adapter-serialization.js"],"sourcesContent":["\"use strict\";\nconst nodeTypes = require(\"../node-type\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n\n  return attributeList;\n};\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode;\n\n// Node types\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n\n// Source code location\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\n\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\n  Object.assign(node.sourceCodeLocation, endLocation);\n};\n"],"mappings":"AAAA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAM;EAAEC;AAAF,IAAoBD,OAAO,CAAC,+BAAD,CAAjC,C,CACA;AAEA;;;AACAE,OAAO,CAACC,aAAR,GAAwBC,IAAI,IAAIA,IAAI,CAACC,UAArC;;AAEAH,OAAO,CAACI,aAAR,GAAwBF,IAAI,IAAIH,aAAa,CAACM,eAAd,CAA8BH,IAA9B,CAAhC;;AAEAF,OAAO,CAACM,aAAR,GAAwBJ,IAAI,IAAIA,IAAI,CAACK,UAArC;;AAEAP,OAAO,CAACQ,WAAR,GAAsBC,OAAO,IAAI;EAC/B,MAAMC,aAAa,GAAG,CAAC,GAAGD,OAAO,CAACE,cAAZ,CAAtB;;EAEA,IAAIF,OAAO,CAACG,QAAR,IAAoBF,aAAa,CAACG,KAAd,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,IAA1C,CAAxB,EAAyE;IACvEL,aAAa,CAACM,OAAd,CAAsB;MACpBD,IAAI,EAAE,IADc;MAEpBE,SAAS,EAAE,IAFS;MAGpBC,MAAM,EAAE,IAHY;MAIpBC,KAAK,EAAEV,OAAO,CAACG;IAJK,CAAtB;EAMD;;EAED,OAAOF,aAAP;AACD,CAbD,C,CAeA;;;AACAV,OAAO,CAACoB,UAAR,GAAqBX,OAAO,IAAIA,OAAO,CAACY,cAAxC,C,CAAwD;;;AAExDrB,OAAO,CAACsB,eAAR,GAA0Bb,OAAO,IAAIA,OAAO,CAACc,YAA7C;;AAEAvB,OAAO,CAACwB,kBAAR,GAA6BxB,OAAO,CAACyB,qBAAR,GAAgCvB,IAAI,IAAIA,IAAI,CAACwB,IAA1E;;AAEA1B,OAAO,CAAC2B,uBAAR,GAAkCzB,IAAI,IAAIA,IAAI,CAACa,IAA/C;;AAEAf,OAAO,CAAC4B,2BAAR,GAAsC1B,IAAI,IAAIA,IAAI,CAAC2B,QAAnD;;AAEA7B,OAAO,CAAC8B,2BAAR,GAAsC5B,IAAI,IAAIA,IAAI,CAAC6B,QAAnD;;AAEA/B,OAAO,CAACgC,kBAAR,GAA6BC,eAAe,IAAIA,eAAe,CAACC,iBAAhE;;AAEAlC,OAAO,CAACmC,eAAR,GAA0BC,QAAQ,IAAIA,QAAQ,CAACC,KAA/C,C,CAEA;;;AACArC,OAAO,CAACsC,UAAR,GAAqBpC,IAAI,IAAIA,IAAI,CAACqC,QAAL,KAAkB1C,SAAS,CAAC2C,SAAzD;;AAEAxC,OAAO,CAACyC,aAAR,GAAwBvC,IAAI,IAAIA,IAAI,CAACqC,QAAL,KAAkB1C,SAAS,CAAC6C,YAA5D;;AAEA1C,OAAO,CAAC2C,kBAAR,GAA6BzC,IAAI,IAAIA,IAAI,CAACqC,QAAL,KAAkB1C,SAAS,CAAC+C,kBAAjE;;AAEA5C,OAAO,CAAC6C,aAAR,GAAwB3C,IAAI,IAAIA,IAAI,CAACqC,QAAL,KAAkB1C,SAAS,CAACiD,YAA5D,C,CAEA;;;AACA9C,OAAO,CAAC+C,yBAAR,GAAoC,CAAC7C,IAAD,EAAO8C,QAAP,KAAoB;EACtD9C,IAAI,CAAC+C,kBAAL,GAA0BD,QAA1B;AACD,CAFD;;AAIAhD,OAAO,CAACkD,yBAAR,GAAoChD,IAAI,IAAIA,IAAI,CAAC+C,kBAAjD;;AAEAjD,OAAO,CAACmD,4BAAR,GAAuC,CAACjD,IAAD,EAAOkD,WAAP,KAAuB;EAC5DC,MAAM,CAACC,MAAP,CAAcpD,IAAI,CAAC+C,kBAAnB,EAAuCG,WAAvC;AACD,CAFD"},"metadata":{},"sourceType":"script"}