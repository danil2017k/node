{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"TreeWalker\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(`${context} is not of type 'TreeWalker'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"TreeWalker\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  class TreeWalker {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n\n    parentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'parentNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].parentNode());\n    }\n\n    firstChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'firstChild' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].firstChild());\n    }\n\n    lastChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'lastChild' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].lastChild());\n    }\n\n    previousSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'previousSibling' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousSibling());\n    }\n\n    nextSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'nextSibling' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextSibling());\n    }\n\n    previousNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'previousNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousNode());\n    }\n\n    nextNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'nextNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextNode());\n    }\n\n    get root() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get root' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.getSameObject(this, \"root\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"root\"]);\n      });\n    }\n\n    get whatToShow() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get whatToShow' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return esValue[implSymbol][\"whatToShow\"];\n    }\n\n    get filter() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get filter' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"filter\"]);\n    }\n\n    get currentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get currentNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"currentNode\"]);\n    }\n\n    set currentNode(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set currentNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      V = Node.convert(globalObject, V, {\n        context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\"\n      });\n      esValue[implSymbol][\"currentNode\"] = V;\n    }\n\n  }\n\n  Object.defineProperties(TreeWalker.prototype, {\n    parentNode: {\n      enumerable: true\n    },\n    firstChild: {\n      enumerable: true\n    },\n    lastChild: {\n      enumerable: true\n    },\n    previousSibling: {\n      enumerable: true\n    },\n    nextSibling: {\n      enumerable: true\n    },\n    previousNode: {\n      enumerable: true\n    },\n    nextNode: {\n      enumerable: true\n    },\n    root: {\n      enumerable: true\n    },\n    whatToShow: {\n      enumerable: true\n    },\n    filter: {\n      enumerable: true\n    },\n    currentNode: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"TreeWalker\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = TreeWalker;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: TreeWalker\n  });\n};\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");","map":{"version":3,"names":["conversions","require","utils","Node","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","implForWrapper","TypeError","makeWrapper","newTarget","proto","undefined","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","TreeWalker","constructor","parentNode","esValue","tryWrapperForImpl","firstChild","lastChild","previousSibling","nextSibling","previousNode","nextNode","root","getSameObject","whatToShow","filter","currentNode","V","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"TreeWalker\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'TreeWalker'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"TreeWalker\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class TreeWalker {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n\n    parentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'parentNode' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].parentNode());\n    }\n\n    firstChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'firstChild' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].firstChild());\n    }\n\n    lastChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'lastChild' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].lastChild());\n    }\n\n    previousSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'previousSibling' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousSibling());\n    }\n\n    nextSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'nextSibling' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextSibling());\n    }\n\n    previousNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'previousNode' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousNode());\n    }\n\n    nextNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'nextNode' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextNode());\n    }\n\n    get root() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get root' called on an object that is not a valid instance of TreeWalker.\");\n      }\n\n      return utils.getSameObject(this, \"root\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"root\"]);\n      });\n    }\n\n    get whatToShow() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get whatToShow' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return esValue[implSymbol][\"whatToShow\"];\n    }\n\n    get filter() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get filter' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"filter\"]);\n    }\n\n    get currentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get currentNode' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"currentNode\"]);\n    }\n\n    set currentNode(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set currentNode' called on an object that is not a valid instance of TreeWalker.\"\n        );\n      }\n\n      V = Node.convert(globalObject, V, {\n        context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\"\n      });\n\n      esValue[implSymbol][\"currentNode\"] = V;\n    }\n  }\n  Object.defineProperties(TreeWalker.prototype, {\n    parentNode: { enumerable: true },\n    firstChild: { enumerable: true },\n    lastChild: { enumerable: true },\n    previousSibling: { enumerable: true },\n    nextSibling: { enumerable: true },\n    previousNode: { enumerable: true },\n    nextNode: { enumerable: true },\n    root: { enumerable: true },\n    whatToShow: { enumerable: true },\n    filter: { enumerable: true },\n    currentNode: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"TreeWalker\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = TreeWalker;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: TreeWalker\n  });\n};\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}