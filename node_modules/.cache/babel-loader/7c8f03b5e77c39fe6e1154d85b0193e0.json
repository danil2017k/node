{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nimport _ from 'lodash';\nimport api from '../../api';\nimport mqtt from '@/utils/mqtt';\nimport { COMMON_CHANGE_CASE_STATS_BY_USER, COMMON_CHANGE_CASE_STATS_BY_USER_LOADING } from '../mutations/available';\nimport { Archived } from '../../dictionaries/availableCaseStatuses';\nlet caseCancelToken = null;\nexport const setCasesType = ({\n  commit\n}, type) => {\n  commit('CHANGE_CASES_TYPE', type);\n};\nexport const setPuzzleId = ({\n  commit\n}, id) => {\n  commit('SET_PUZZLE_ID', id);\n};\nexport const toggleCasesListStyle = ({\n  commit\n}) => {\n  commit('TOGGLE_CASES_LIST_STYLE');\n};\nexport const loadStatistic = ({\n  commit,\n  dispatch\n}) => {\n  axios.get('/api/cases/statistic').then(({\n    data\n  }) => {\n    commit('CASES_STATISTIC', data);\n  });\n};\nexport const changeCasesPage = ({\n  commit,\n  state\n}, page) => {\n  commit('CHANGE_CASES_PAGE', {\n    type: state.cases.type,\n    page: page\n  });\n}; // tut\n\nexport const loadFirstCase = ({\n  commit,\n  state\n}, payload) => {\n  const list = [];\n  console.log(payload.data, '!', Object.assign(payload.data[0]));\n  commit('CASE_LOADED', Object.assign(payload.data[0]));\n  commit('OPEN_VIEWER', '78684e29-2176-49e5-bb69-abdc1e2cba1f');\n  commit('SELECT_VIEWER_FILE', {\n    'id': '78684e29-2176-49e5-bb69-abdc1e2cba1f',\n    'primary': true\n  }); // var files = payload.map(function(data) {\n  //   console.log(data, '!!')\n  //  \n  //   return data.files;\n  // });\n  // const order = Object.assign(payload.data[0].files).forEach((item, i, arr) => {\n  //   list.push(item[i].id)\n  // });\n  // commit('FILES_AND_ORDERS', { payload: Object.assign(payload.data[0].files)})\n};\nexport const loadCaseStatsByUser = async ({\n  commit,\n  state\n}) => {\n  commit(COMMON_CHANGE_CASE_STATS_BY_USER_LOADING, true);\n\n  try {\n    const caseStatsByUser = await api.getCaseStatsByUser();\n    commit(COMMON_CHANGE_CASE_STATS_BY_USER, caseStatsByUser);\n  } catch (e) {\n    console.log(e);\n  }\n\n  commit(COMMON_CHANGE_CASE_STATS_BY_USER_LOADING, false);\n};\nexport const loadCasesByParams = ({\n  commit,\n  state\n}, params) => {\n  const query = _.get(params, 'query', null);\n\n  const currentPage = _.get(state.cases.pagination, [state.cases.type, 'currentPage'], state.cases.paginationDefaults.currentPage);\n\n  const perPage = state.cases.paginationDefaults.perPage;\n  const offset = (currentPage - 1) * perPage;\n  commit('CASES_BY_TYPE_LOADING');\n  commit('SAVE_QUERY_TO_STATE', query);\n\n  if (!state.cases.list.length) {\n    commit('LOADING');\n  }\n\n  let puzzleParams = JSON.parse(localStorage.getItem('puzzleParams'));\n\n  if (state.cases.puzzle) {\n    localStorage.setItem('puzzleParams', JSON.stringify(state.cases.puzzle));\n  } // let url = state.cases.puzzle ? `/api/puzzles/${state.cases.puzzle}` : '/api/cases'\n\n\n  let url = `/files.json`;\n\n  if (puzzleParams && window.location.href.indexOf('/webinars/') > 0) {\n    url = '/api/puzzles/' + puzzleParams;\n  }\n\n  const currentType = _.clone(state.cases.type);\n\n  let queryParams = {\n    type: state.cases.type,\n    offset: offset,\n    limit: perPage,\n    query: query\n  };\n  localStorage.setItem('routeParams', JSON.stringify(queryParams));\n  return new Promise((resolve, reject) => axios.get(url, {\n    params: queryParams\n  }).then(({\n    data\n  }) => {\n    if (state.cases.type !== currentType) {\n      resolve();\n      commit('CASES_BY_TYPE_LOADED');\n      return;\n    }\n\n    if (params && params.query) {\n      commit('CASES_SEARCH', data);\n    } else {\n      commit('CASES_LOADED_BY_PARAMS', data);\n    }\n\n    commit('CASES_BY_TYPE_LOADED');\n    resolve();\n  }).catch(err => {\n    if (err.response.status === 412) {\n      queryParams = {\n        type: 'my',\n        offset: 0,\n        limit: perPage,\n        query: query\n      };\n      localStorage.setItem('routeParams', JSON.stringify(queryParams));\n      return window.location.reload();\n    }\n\n    if (err.response.status === 403) {\n      router.push('/account');\n    }\n\n    reject(err);\n  }));\n};\nexport const unLoadCase = ({\n  commit,\n  state\n}) => {\n  if (state.case && state.case.id) {\n    axios.get(`/api/cases/${state.case.id}/viewed`);\n  }\n\n  commit('CASE_UNLOAD');\n};\nexport const loadCase = async ({\n  commit\n}, {\n  type,\n  id\n}) => {\n  commit('LOADING');\n\n  if (id === 'new') {\n    commit('CASE_LOADED', {\n      title: '',\n      specialization: {},\n      last_change_date: new Date().getTime() / 1000\n    });\n  } else {\n    let url = `/files.json`;\n\n    if (caseCancelToken) {\n      caseCancelToken();\n    }\n\n    await axios.get(url, {\n      mode: 'no-cors'\n    }).then(({\n      data\n    }) => {\n      if (!data.files.screenshots) data.files.screenshots = [];\n      if (!data.files.screenshots_macro) data.files.screenshots_macro = [];\n      if (!data.files.request) data.request = null;\n      commit('CASE_LOADED', data);\n    }).catch(err => {\n      if (axios.isCancel(err)) {\n        console.log('Get case request canceled');\n        return;\n      }\n\n      if (err.response.status === 404) {\n        router.push('/');\n      }\n    });\n  }\n};\nexport const saveMetaData = ({\n  commit,\n  state\n}, {\n  meta,\n  file_id,\n  stains\n}) => {\n  axios.put(`/api/cases/files/${file_id}/meta`, {\n    meta: meta.meta_data,\n    stains: stains\n  }).then(({\n    data\n  }) => {\n    commit('UPDATE_FILE_META', {\n      id: file_id,\n      meta: meta.meta_data\n    });\n  }).catch(console.error);\n};\nexport const saveMaterial = ({\n  commit,\n  state\n}, {\n  case_id,\n  type_id,\n  material\n}) => {\n  axios.put(`/api/cases/${case_id}/material`, {\n    type: type_id,\n    material: material\n  }).then(({\n    data\n  }) => {}).catch(console.error);\n};\nexport const loadJsonFileData = ({\n  commit,\n  dispatch\n}) => {\n  return new Promise((resolve, reject) => {\n    axios.get('/data').then(({\n      data\n    }) => {\n      // if (!data.screenshots) data.screenshots = []\n      // if (!data.screenshots_macro) data.screenshots_macro = []\n      // if (!data.request) data.request = null\n      // resolve(data)\n      commit('CASE_LOADED', data);\n    }).catch(response => {\n      reject(response);\n    });\n  });\n};\nexport const newCase = ({\n  commit,\n  dispatch\n}) => {\n  return new Promise((resolve, reject) => {\n    axios.get('/api/cases/new').then(({\n      data\n    }) => {\n      resolve(data.id);\n    }).catch(response => {\n      reject(response);\n    });\n  });\n};\nexport const getNotificationByPage = ({\n  commit,\n  dispatch\n}, page) => {\n  axios.get('/api/cases/notification/' + page).then(data => {\n    commit('SET_HOTIFICATION_HISTORY', data.data);\n  });\n}; // TODO: make optimistical update\n\nexport const saveCase = ({\n  commit\n}, caseData) => {\n  if (!caseData.id || caseData.id === 'new') {\n    commit('LOADING');\n    axios.post('/api/cases', caseData).then(({\n      data\n    }) => {\n      commit('SAVED');\n      router.push(`/cases/${data.id}`);\n    }).catch(console.error);\n  } else {\n    axios.put(`/api/cases/${caseData.id}`, caseData).then(() => commit('CASE_UPDATED', caseData)).catch(console.error);\n  }\n};\nexport const changeShareState = async ({\n  commit,\n  dispatch\n}, {\n  caseId,\n  value\n}) => {\n  let result = false;\n\n  try {\n    await api.changeShareState(caseId, value);\n    result = true;\n  } catch (e) {\n    dispatch('sendGenericErrorNotification', {\n      messageLocalizationKey: 'notifications.share.changeShareState.error'\n    });\n  }\n\n  return result;\n};\nexport const getIcdMorphology = ({\n  commit,\n  state\n}, text) => {\n  return axios.get(`/api/cases/icd/morphology`, {\n    params: {\n      text: text\n    }\n  });\n};\nexport const getIcdTopography = ({\n  commit,\n  state\n}, text) => {\n  return axios.get(`/api/cases/icd/topography`, {\n    params: {\n      text: text\n    }\n  });\n};\nexport const saveScreenshotWsiInStorage = ({\n  commit,\n  state\n}, data) => {\n  data.userId = state.account.id;\n  return new Promise((resolve, reject) => axios.post(`/api/cases/screenshot-wsi`, data).then(data => resolve(data.data)).catch(reject));\n};\nexport const saveScreenshotInStorage = ({\n  commit,\n  state\n}, data) => {\n  data.userId = state.account.id;\n  return new Promise((resolve, reject) => axios.post(`/api/cases/screenshot`, data).then(data => resolve(data.data.file_name)).catch(reject));\n};\nexport const sendImageMembraneToDs = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/ds/single/membrane/add`, data).then(resolve).catch(reject));\n};\nexport const getImageMembraneFromDs = ({\n  commit,\n  state\n}, file_id) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/single/membrane/result/` + file_id).then(data => {\n    if (!data.data || !data.data.base64) {\n      window.dsLoop = setTimeout(() => {\n        getImageMembraneFromDs({\n          commit,\n          state\n        }, file_id).then(rep => {\n          if (!rep.data || !rep.data.base64) {\n            return;\n          }\n\n          resolve(rep);\n        });\n      }, 2000);\n      return;\n    }\n\n    resolve(data);\n  }).catch(reject));\n};\nexport const sendImageToDs = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/ds/single/add`, data).then(resolve).catch(reject));\n};\nexport const getImageFromDs = ({\n  commit,\n  state\n}, file_id) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/single/result/` + file_id).then(data => {\n    if (!data.data || !data.data.base64) {\n      window.dsLoop = setTimeout(() => {\n        getImageFromDs({\n          commit,\n          state\n        }, file_id).then(rep => {\n          if (!rep.data || !rep.data.base64) {\n            return;\n          }\n\n          resolve(rep);\n        });\n      }, 2000);\n      return;\n    }\n\n    resolve(data);\n  }).catch(reject));\n};\nexport const sendImageSimilarToDs = ({\n  commit,\n  state\n}, data) => {\n  commit('SIMILAR_IMAGE', data.content);\n  return new Promise((resolve, reject) => axios.post(`/similar/post-predict-tile`, data).then(resolve).catch(reject));\n};\nexport const getImageSimilarFromDs = ({\n  commit,\n  state\n}, id) => {\n  return new Promise((resolve, reject) => axios.get(`/similar/get-predict-result?id=` + id).then(data => {\n    if (!data.data || !(data.data instanceof Array)) {\n      window.dsLoop = setTimeout(() => {\n        getImageSimilarFromDs({\n          commit,\n          state\n        }, id).then(rep => {\n          if (!rep.data || !(rep.data instanceof Array)) {\n            return;\n          }\n\n          commit('SIMILAR_SLIDES', rep.data);\n          resolve(rep);\n        });\n      }, 2000);\n      return;\n    }\n\n    commit('SIMILAR_SLIDES', data.data);\n    resolve(data);\n  }).catch(reject));\n};\nexport const sendGlassToDp = ({\n  commit,\n  state\n}, {\n  fileId,\n  type\n}) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/add/${fileId}/${type}`).then(data => {\n    if (data.status === 202) {\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  }).catch(reject));\n};\nexport const getDsLayer = ({\n  commit,\n  state\n}, {\n  fileId,\n  type\n}) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/result/${fileId}/${type}`).then(data => {\n    if (data.status === 202 || data.status === 200) {\n      resolve(data.data);\n    } else {\n      resolve(null);\n    }\n  }).catch(reject));\n};\nexport const getMetsColor = ({\n  commit,\n  state\n}) => {\n  return new Promise((resolve, reject) => axios.get(`/api/cases/get-mets-color`).then(data => {\n    resolve(data.data);\n  }).catch(reject));\n};\nexport const deleteTrainingData = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/training/delete`, data).then(resolve).catch(reject));\n};\nexport const sendMorfoTrainingData = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/morfo-training`, data).then(result => {\n    if (result.status === 200) {\n      resolve({\n        success: true,\n        id: result.data\n      });\n    } else {\n      console.log(result);\n      resolve({\n        success: false\n      });\n    }\n  }).catch(reject));\n};\nexport const getMorfoTrainingData = ({\n  commit,\n  state\n}, file_id) => {\n  return new Promise((resolve, reject) => axios.get(`/api/cases/file/morfo-training/${file_id}`).then(result => {\n    if (result.status === 200) {\n      resolve({\n        success: true,\n        data: result.data.data\n      });\n    } else {\n      resolve({\n        success: false\n      });\n    }\n  }).catch(reject));\n};\nexport const sendTrainingData = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/training`, data).then(result => {\n    if (result.status === 200) {\n      resolve({\n        success: true,\n        id: result.data\n      });\n    } else {\n      console.log(result);\n      resolve({\n        success: false\n      });\n    }\n  }).catch(reject));\n};\nexport const getInfoByCells = ({\n  commit,\n  state\n}, {\n  fileId,\n  startX,\n  endX,\n  startY,\n  endY\n}) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/count-cells/${fileId}/${startX}/${endX}/${startY}/${endY}`).then(resolve).catch(reject));\n};\nexport const sendDicomVolume = ({\n  commit,\n  state\n}, data) => {\n  return new Promise((resolve, reject) => axios.post(`/ds/dicom-volume`, data).then(resolve).catch(reject));\n};\nexport const getDicomVolume = ({\n  commit,\n  state\n}, id) => {\n  return new Promise((resolve, reject) => axios.get(`/ds/dicom-volume/${id}`).then(data => {\n    if (!data.data || !data.data.volume) {\n      window.dsLoop = setTimeout(() => {\n        getDicomVolume({\n          commit,\n          state\n        }, id).then(rep => {\n          if (!rep.data || !rep.data.volume) {\n            return;\n          }\n\n          resolve(rep);\n        });\n      }, 2000);\n      return;\n    }\n\n    resolve(data);\n  }).catch(reject));\n};\nexport const toggleArchive = ({\n  commit,\n  state\n}, {\n  caseId\n}) => {\n  if (state.case.status === Archived) {\n    axios.post(`/api/cases/${caseId}/unarchive`).then(response => {\n      if (caseId !== state.case.id) {\n        return;\n      }\n\n      const status = _.get(response, ['data', 'status'], null);\n\n      commit('CASE_UNARCHIVED', status);\n    }).catch(console.error);\n  } else {\n    axios.post(`/api/cases/${caseId}/archive`).then(response => {\n      if (caseId !== state.case.id) {\n        return;\n      }\n\n      const status = _.get(response, ['data', 'status'], null);\n\n      commit('CASE_ARCHIVED', status);\n    }).catch(console.error);\n  }\n};\nexport const toggleInProgress = ({\n  commit,\n  state\n}, {\n  caseId\n}) => {\n  axios.put(`/api/cases/${caseId}/status/in_progress`).then(() => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('CASE_INPROGRESS');\n  }).catch(console.error);\n};\nexport const togglePublished = ({\n  commit,\n  state\n}, {\n  caseId\n}) => {\n  commit('TOGGLE_PUBLISHED');\n  axios.put(`/api/cases/${caseId}`, state.case);\n};\nexport const addComment = ({\n  commit,\n  state\n}, {\n  text,\n  caseId\n}) => {\n  axios.post(`/api/cases/${caseId}/comments`, {\n    text: text\n  }).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('ADD_COMMENT', { ...response.data,\n      author: {\n        id: state.account.id,\n        name: state.account.name,\n        photo: state.account.photo,\n        email: state.account.email\n      }\n    });\n  }).catch(console.error);\n};\nexport const deleteComment = ({\n  commit,\n  state\n}, {\n  id,\n  caseId\n}) => {\n  axios.delete(`/api/cases/${caseId}/comments/${id}`).then(response => {\n    commit('DELETE_COMMENT', id);\n  }).catch(console.error);\n};\nexport const editComment = ({\n  commit,\n  state\n}, comment) => {\n  axios.put(`/api/cases/${comment.caseId}/comments/${comment.id}`, {\n    text: comment.text\n  }).catch(console.error);\n};\nexport const likeComment = ({\n  commit,\n  state\n}, comment) => {\n  axios.put(`/api/cases/like/comment/${comment.id}`).then(data => {\n    commit('LIKE_COMMENT', {\n      id: comment.id,\n      likes: data.data\n    });\n  }).catch(console.error);\n};\nexport const searchUser = ({\n  commit,\n  state\n}, {\n  query,\n  caseId\n}) => {\n  axios.get(`/api/autocompletes?query=${query}&case_id=${caseId}`).then(response => {\n    commit('SET_SUGGESTIONS', response.data.autocompletes);\n  }).catch(console.error);\n};\nexport const approveReport = ({\n  commit,\n  state\n}, {\n  id,\n  caseId\n}) => {\n  axios.put(`/api/cases/doctor/${caseId}/approve`).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('DOCTOR_APPROVE_REPORT', id);\n  }).catch(console.error);\n};\nexport const setOwnerDoctor = ({\n  commit,\n  state\n}, {\n  id,\n  caseId\n}) => {\n  axios.put(`/api/cases/owner/doctor/${caseId}/${id}`).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('CASE_INPROGRESS');\n    commit('CHANGE_DOCTOR_OWNER', id);\n  }).catch(console.error);\n};\nexport const setReportDoctor = ({\n  commit,\n  state\n}, {\n  id,\n  caseId\n}) => {\n  axios.put(`/api/cases/report/doctor/${caseId}/${id}`).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('CHANGE_DOCTOR_REPORT', id);\n  }).catch(e => {\n    if (e.response.data.error === 'doctor_cannot_validate_omi') {\n      commit('ADD_NOTIFICATION', {\n        id: _.uniqueId('doctorCannotValidate'),\n        type: 'generic-error',\n        localizationKey: 'notifications.canNotValidate'\n      });\n    }\n  });\n};\nexport const addCollaborators = ({\n  commit,\n  state\n}, {\n  emails,\n  message,\n  caseId\n}) => {\n  axios.post(`/api/cases/${caseId}/collaborators`, {\n    emails: emails,\n    message: message\n  }).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('COLLABORATORS_ADDED', response.data);\n  }).catch(console.error);\n};\nexport const sendRequest = ({\n  commit,\n  state\n}, {\n  message,\n  caseId\n}) => {\n  axios.post(`/api/request`, {\n    case_id: caseId,\n    text: message\n  }).then(response => {\n    commit('REQUEST_SENT', response.data.request);\n  }).catch(console.error);\n};\nexport const deleteCollaborator = ({\n  commit,\n  state\n}, {\n  id,\n  caseId\n}) => {\n  axios.delete(`/api/cases/${caseId}/collaborators/${id}`).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('COLLABORATOR_DELETED', id);\n  }).catch(console.error);\n};\n\nconst signHashAsync = (dataToSign, thumbprint) => {\n  return new Promise(function (resolve, reject) {\n    cadesplugin.async_spawn(function* (arg) {\n      let oStore;\n\n      try {\n        oStore = yield cadesplugin.CreateObjectAsync('CAdESCOM.Store');\n        yield oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED);\n        let allCertificates = yield oStore.Certificates;\n        let oCertificates = yield allCertificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, thumbprint);\n        let certificatesCount = yield oCertificates.Count;\n\n        if (certificatesCount === 0) {\n          return reject('Сертификат не найден в хранилище.');\n        }\n\n        let oCertificate = yield oCertificates.Item(1);\n        let oSigner = yield cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner');\n        oSigner.propset_Certificate(oCertificate);\n        let oCadesSignedData = yield cadesplugin.CreateObjectAsync('CAdESCOM.CadesSignedData');\n        yield oCadesSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY);\n        yield oCadesSignedData.propset_Content(dataToSign);\n        let sSignedMessage = oCadesSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true);\n        return resolve(sSignedMessage);\n      } catch (err) {\n        return reject('Не удалось создать подпись. ' + err.message);\n      } finally {\n        if (oStore) {\n          yield oStore.Close();\n        }\n      }\n    });\n  });\n};\n\nexport const reportSign = ({\n  commit,\n  state\n}, {\n  name_digital_signature,\n  caseObj\n}) => {\n  reportStorageCreate(caseObj.id, caseObj.report.id).then(data => {\n    if (data.success) {\n      reportStorageInit(caseObj.report.id).then(data => {\n        if (data.success) {\n          signHashAsync(data.data, name_digital_signature).then(data => {\n            reportStorageSign(data.replace(/\\n/g, '').replace(/\\r/g, ''), caseObj.report.id).then(data => {\n              if (data.success) {\n                alert('Заключение успешно подписано');\n                caseObj.report.status = 'validated';\n              } else {\n                alert('Невозможно подписать заключение');\n              }\n            }).catch(err => {\n              console.log(err);\n              alert('Невозможно отправить подпись в хранилище');\n            });\n          }).catch(err => {\n            reportStorageDelete(caseObj.report.id).then(() => {});\n            alert(err.message ? err.message : err);\n          });\n        } else {\n          alert('Невозможно получить заключение из хранилища');\n        }\n      }).catch(err => {\n        console.log(err);\n        alert('Невозможно получить файл на подпись из хранилища');\n      });\n    } else {\n      alert('Невозможно отправить заключение в хранилище');\n    }\n  }).catch(err => {\n    console.log(err);\n    alert('Невозможно установить связь с хранилищем');\n  });\n};\n\nconst reportStorageCreate = (caseId, reportId) => {\n  return new Promise((resolve, reject) => axios.post(`/api/cases/report/storage/create`, {\n    'case_id': caseId,\n    'report_id': reportId\n  }).then(({\n    data\n  }) => {\n    resolve(data);\n  }).catch(reject));\n};\n\nconst reportStorageInit = reportId => {\n  return new Promise((resolve, reject) => axios.get(`/api/cases/report/storage/init/${reportId}`).then(({\n    data\n  }) => {\n    resolve(data);\n  }).catch(reject));\n};\n\nexport const reportStorageEntity = ({\n  commit,\n  state\n}, reportId) => {\n  return new Promise((resolve, reject) => axios.get(`/api/cases/report/storage/entity/${reportId}`).then(({\n    data\n  }) => {\n    resolve(data);\n  }).catch(reject));\n};\n\nconst reportStorageSign = (content, reportId) => {\n  return new Promise((resolve, reject) => axios.post('/api/cases/report/storage/sign', {\n    'content': content,\n    'report_id': reportId\n  }).then(({\n    data\n  }) => {\n    resolve(data);\n  }).catch(reject));\n};\n\nconst reportStorageDelete = reportId => {\n  return new Promise((resolve, reject) => axios.post(`/api/cases/report/storage/delete`, {\n    'report_id': reportId\n  }).then(({\n    data\n  }) => {\n    resolve(data);\n  }).catch(reject));\n};\n\nexport const saveReport = ({\n  commit,\n  state\n}, {\n  text,\n  stains,\n  screenshots,\n  textDiscuss,\n  textMicro,\n  macro_description_protocol,\n  screenshots_macro,\n  mkb,\n  icd,\n  ihc_recommended,\n  genetic_recommended,\n  jsonSelect,\n  report_case_id,\n  executionInfo\n}) => {\n  const report = {\n    text,\n    stains,\n    screenshots,\n    macro_description_protocol,\n    text_micro: textMicro,\n    text_discuss: textDiscuss,\n    screenshots_macro,\n    mkb,\n    icd,\n    ihc_recommended,\n    genetic_recommended,\n    json_select: jsonSelect,\n    execution_info: executionInfo\n  };\n  return axios.post(`/api/cases/${report_case_id}/reports/published`, report).then(response => {\n    if (report_case_id !== state.case.id) {\n      return;\n    }\n\n    commit('REPORT_SAVED_DATA', response.data);\n  });\n};\nexport const draftReport = ({\n  commit,\n  state\n}, {\n  text,\n  stains,\n  screenshots,\n  textDiscuss,\n  textMicro,\n  macro_description_protocol,\n  screenshots_macro,\n  mkb,\n  icd,\n  her2,\n  ihc_recommended,\n  genetic_recommended,\n  jsonSelect,\n  report_case_id\n}) => {\n  const report = {\n    text: text,\n    stains,\n    screenshots,\n    macro_description_protocol,\n    text_micro: textMicro,\n    text_discuss: textDiscuss,\n    screenshots_macro,\n    mkb,\n    icd,\n    her2,\n    ihc_recommended,\n    genetic_recommended,\n    json_select: jsonSelect\n  };\n  return axios.post(`/api/cases/${report_case_id}/reports/draft`, report).then(response => {\n    if (report_case_id !== state.case.id) {\n      return;\n    }\n\n    commit('REPORT_SAVED_DATA', response.data);\n  });\n};\nexport const getLatestReportVersion = ({\n  commit,\n  state\n}, {\n  caseId\n}) => {\n  return axios.get(`/api/cases/get-single-report`, {\n    params: {\n      case_id: caseId\n    }\n  }).then(response => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('REPORT_SAVED_DATA', response.data);\n  });\n};\nexport const reportToDraft = ({\n  commit,\n  state\n}, {\n  caseId\n}) => {\n  return axios.post(`/api/cases/send-report-to-draft`, {\n    case_id: caseId\n  }).then(({\n    response\n  }) => {\n    if (caseId !== state.case.id) {\n      return;\n    }\n\n    commit('REPORT_SET_STATE', 'draft');\n  });\n};\nexport const reportToPublished = ({\n  commit\n}) => {\n  commit('REPORT_SET_STATE', 'published');\n};\nexport const savePuzzleReport = ({\n  commit,\n  state\n}, {\n  text,\n  stains,\n  screenshots,\n  text_macro,\n  text_micro,\n  text_discuss,\n  screenshots_macro,\n  mkb,\n  icd\n}) => {\n  const report = {\n    text,\n    stains,\n    screenshots,\n    text_macro,\n    text_micro,\n    text_discuss,\n    screenshots_macro,\n    mkb,\n    icd\n  };\n  axios.post(`/api/puzzles/${state.case.puzzle}/${state.case.id}/reports`, report).then(response => {\n    commit('REPORT_SAVED', response.data);\n  }).catch(console.error);\n};\nexport const updateFile = ({\n  commit,\n  state\n}, {\n  id,\n  title,\n  stains,\n  reactions\n}) => {\n  axios.put(`/api/cases/${state.case.id}/files/${id}`, {\n    title,\n    stains,\n    reactions\n  }).then(() => {\n    commit('UPDATE_FILE', {\n      id,\n      title,\n      stains\n    });\n  }).catch(console.error);\n};\nexport const startDeleting = ({\n  commit,\n  dispatch,\n  state\n}, {\n  caseId,\n  fileId,\n  title\n}) => {\n  const timer = setTimeout(() => {\n    dispatch('deleteFile', {\n      caseId,\n      fileId\n    });\n  }, state.deleteTimer);\n  commit('PUT_TO_DELETE_QUEUE', {\n    caseId,\n    fileId,\n    title,\n    timer\n  });\n};\nexport const startDeletingOrder = ({\n  commit,\n  dispatch,\n  state\n}, {\n  caseId,\n  fileId,\n  title\n}) => {\n  const timer = setTimeout(() => {\n    dispatch('deleteFileOrder', {\n      caseId,\n      fileId\n    });\n  }, state.deleteTimer);\n  commit('PUT_TO_DELETE_QUEUE', {\n    caseId,\n    fileId,\n    title,\n    timer\n  });\n};\nexport const cancelDeleting = ({\n  commit\n}, fileId) => {\n  commit('REMOVE_FROM_DELETE_QUEUE', fileId);\n};\nexport const deleteFile = ({\n  commit,\n  state\n}, {\n  caseId,\n  fileId\n}) => {\n  axios.delete(`/api/cases/${caseId}/files/${fileId}`).then(() => {\n    commit('DELETE_FILE', fileId);\n    commit('REMOVE_FROM_DELETE_QUEUE', fileId);\n  }).catch(console.error);\n};\nexport const deleteFileOrder = ({\n  commit,\n  state\n}, {\n  caseId,\n  fileId\n}) => {\n  axios.delete(`/api/cases/${caseId}/files/${fileId}/order`).then(() => {\n    commit('DELETE_FILE', fileId);\n    commit('REMOVE_FROM_DELETE_QUEUE', fileId);\n  }).catch(console.error);\n};\nexport const createSlideRescanOrder = async ({\n  dispatch\n}, {\n  fileId,\n  magnification,\n  comment\n}) => {\n  try {\n    await api.casesCreateSlideRescanOrder(fileId, magnification, comment);\n    dispatch('sendGenericInfoNotification', {\n      messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.success'\n    });\n    return true;\n  } catch (e) {\n    const error = _.get(e, ['response', 'data', 'error'], null);\n\n    if (error === 'not_lis_file') {\n      dispatch('sendGenericInfoNotification', {\n        messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.notLisFile'\n      });\n      return true;\n    }\n\n    dispatch('sendGenericErrorNotification', {\n      messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.error'\n    });\n    console.error(`Unable to create slide rescan order: ${e.message}`);\n  }\n\n  return false;\n};\nexport const findCasesByTitle = _.debounce(async ({\n  state,\n  commit\n}, titleQueryString) => {\n  commit('CASE_GROUP_OPERATIONS_CHANGE_LOADER', true);\n\n  try {\n    const result = await api.findCasesByTitle(titleQueryString);\n\n    const cases = _.get(result, 'cases', []);\n\n    commit('CASE_GROUP_OPERATIONS_LOAD_CASES', cases);\n  } catch (e) {\n    console.error(`Unable to find cases by title: ${e.message}`);\n  }\n\n  commit('CASE_GROUP_OPERATIONS_CHANGE_LOADER', false);\n}, 500);\nexport const startUploadingFile = ({\n  commit\n}, file) => {\n  commit('START_UPLOADING_FILE', file);\n};\nexport const progressUploadingFile = ({\n  commit\n}, {\n  file,\n  percentComplete\n}) => {\n  const uniqueIdentifier = file.options.fingerprint(file.file, file.options);\n  commit('PROGRESS_UPLOADING_FILE', {\n    percentComplete,\n    uniqueIdentifier\n  });\n};\nexport const cancelUploadingFile = ({\n  commit\n}, file) => {\n  commit('CANCEL_UPLOADING_FILE', file);\n};\nexport const successUploadingFile = ({\n  commit\n}, payload) => {\n  commit('SUCCESS_UPLOADING_FILE', payload);\n};\nexport const sortFiles = ({\n  commit\n}, {\n  id,\n  files\n}) => {\n  axios.put(`/api/cases/${id}/files/order`, {\n    files\n  }).catch(console.error);\n  commit('SORT_FILES', files);\n};\nexport const resortFiles = ({\n  commit\n}, {\n  files,\n  orders\n}) => {\n  commit('FILES_AND_ORDERS', {\n    files,\n    orders\n  });\n};\nexport const setContentType = ({\n  commit\n}, type) => {\n  commit('CHANGE_CONTENT_TYPE', type);\n};\nexport const openViewer = ({\n  commit\n}, id) => {\n  window.history.replaceState(null, null, `${window.location.pathname}?file=${id}`);\n  commit('OPEN_VIEWER', id);\n};\nexport const closeViewer = ({\n  commit\n}, isLeftViewer) => {\n  window.history.replaceState(null, null, window.location.pathname);\n  commit('DISABLE_TOOLS');\n  commit('CLOSE_VIEWER', isLeftViewer);\n};\nexport const toggleSynchronize = ({\n  commit\n}) => {\n  commit('TOGGLE_SYNCRONIZE');\n};\nexport const setViewerCompareMode = ({\n  commit\n}) => {\n  commit('VIEWER_COMPARE');\n};\nexport const selectViewerFile = ({\n  commit\n}, info) => {\n  commit('SELECT_VIEWER_FILE', info);\n};\nexport const createMark = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  mark,\n  webinarId\n}) => {\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.post(`/api/webinars/${webinarId}/files/${fileId}/marks`, mark).then(({\n      data\n    }) => {\n      mark.id = data.id;\n      commit('CREATE_MARK', {\n        fileId,\n        mark\n      });\n      resolve(mark);\n    }).catch(reject));\n  } else {\n    // localStorage.setItem('mark', mark);\n    // commit('CREATE_MARK', { fileId, mark })\n    // return mark\n    return new Promise((resolve, reject) => axios.post(`http://localhost:3000/marks`, mark).then(({\n      data\n    }) => {\n      mark.id = data.id;\n      commit('CREATE_MARK', {\n        fileId,\n        mark\n      });\n      resolve(mark);\n    }).catch(reject));\n  }\n};\nexport const editMark = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  itemId,\n  item,\n  webinarId\n}) => {\n  console.log(itemId, 'itemId edit mark');\n\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.put(`/api/webinars/${webinarId}/files/${fileId}/marks/${itemId}`, item).then(() => {\n      commit('EDIT_MARK', {\n        fileId,\n        item\n      });\n      resolve();\n    }).catch(reject));\n  } else {\n    // localStorage.setItem('mark', item);\n    // commit('EDIT_MARK', { fileId, item })\n    // return item\n    return new Promise((resolve, reject) => axios.put(`http://localhost:3000/marks/${itemId}`, item).then(() => {\n      commit('EDIT_MARK', {\n        fileId,\n        item\n      });\n      resolve();\n    }).catch(reject));\n  }\n};\nexport const deleteMark = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  itemId,\n  webinarId\n}) => {\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.delete(`/api/webinars/${webinarId}/files/${fileId}/marks/${itemId}`).then(() => {\n      commit('DELETE_MARK', {\n        fileId,\n        itemId\n      });\n      resolve();\n    }).catch(reject));\n  } else {\n    return new Promise((resolve, reject) => axios.delete(`/api/cases/${caseId}/files/${fileId}/marks/${itemId}`).then(() => {\n      commit('DELETE_MARK', {\n        fileId,\n        itemId\n      });\n      resolve();\n    }).catch(reject));\n  }\n};\n\nconst getCircularReplacer = () => {\n  const seen = new WeakSet();\n  return (key, value) => {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return;\n      }\n\n      seen.add(value);\n    }\n\n    return value;\n  };\n};\n\nexport const createRuler = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  ruler,\n  webinarId\n}) => {\n  console.log(ruler, 'createRuler');\n\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.post(`/api/webinars/${webinarId}/files/${fileId}/rulers`, ruler).then(({\n      data\n    }) => {\n      ruler.id = data.id;\n      commit('CREATE_RULER', {\n        fileId,\n        ruler\n      });\n      resolve(ruler);\n    }).catch(reject));\n  } else {\n    // localStorage.setItem('caseId', caseId);\n    // localStorage.setItem('fileId', fileId);\n    // localStorage.setItem('ruler', ruler);\n    // ruler.id = new Date().getTime()\n    //   return ruler\n    console.log(ruler, \"post promise ruler\");\n    return new Promise((resolve, reject) => axios.post(`http://localhost:3000/rulers`, ruler).then(({\n      data\n    }) => {\n      console.log(data, \"post promise\");\n      ruler.id = data.id;\n      commit('CREATE_RULER', {\n        fileId,\n        ruler\n      });\n      resolve(ruler);\n    }).catch(reject));\n  } // return new Promise((resolve, reject) => axios.post(`/api/cases/${caseId}/files/${fileId}/rulers`, ruler)\n\n};\nexport const editRuler = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  itemId,\n  item,\n  webinarId\n}) => {\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.put(`/api/webinars/${webinarId}/files/${fileId}/rulers/${itemId}`, item).then(() => {\n      commit('EDIT_RULER', {\n        fileId,\n        item\n      });\n      resolve();\n    }).catch(reject));\n  } else {\n    return new Promise((resolve, reject) => axios.put(`http://localhost:3000/rulers/${itemId}`, item).then(() => {\n      commit('EDIT_RULER', {\n        fileId,\n        item\n      });\n      resolve();\n    }).catch(reject));\n  }\n};\nexport const deleteRuler = ({\n  commit\n}, {\n  caseId,\n  fileId,\n  itemId,\n  webinarId\n}) => {\n  if (webinarId) {\n    return new Promise((resolve, reject) => axios.delete(`/api/webinars/${webinarId}/files/${fileId}/rulers/${itemId}`).then(() => {\n      commit('DELETE_RULER', {\n        fileId,\n        itemId\n      });\n      resolve();\n    }).catch(reject));\n  } else {\n    return new Promise((resolve, reject) => axios.delete(`/api/cases/${caseId}/files/${fileId}/rulers/${itemId}`).then(() => {\n      commit('DELETE_RULER', {\n        fileId,\n        itemId\n      });\n      resolve();\n    }).catch(reject));\n  }\n};\nexport const toggleFullscreenPanel = ({\n  commit\n}) => {\n  commit('TOGGLE_FULLSCREEN_PANEL');\n};\nexport const saveScreenshot = ({\n  commit\n}, screenshot) => {\n  commit('SAVE_SCREENSHOT', screenshot);\n};\nexport const placeLisOrder = ({\n  commit\n}, data) => {\n  return new Promise((resolve, reject) => axios.post('/api/lisorders', data).then(() => {\n    let files = {};\n    data.stains.forEach(stain => {\n      let id = Date.now();\n      files[id] = {\n        id: id,\n        creation_date: Date.now() / 1000,\n        histoblock: data.histoblock.title,\n        type: 'order',\n        stains: [stain]\n      };\n    });\n    commit('ADD_FILES', files);\n    resolve();\n  }).catch(console.error));\n}; // WEBPACK FOOTER //\n// ./src/store/actions/cases.js","map":{"version":3,"names":["axios","router","_","api","mqtt","COMMON_CHANGE_CASE_STATS_BY_USER","COMMON_CHANGE_CASE_STATS_BY_USER_LOADING","Archived","caseCancelToken","setCasesType","commit","type","setPuzzleId","id","toggleCasesListStyle","loadStatistic","dispatch","get","then","data","changeCasesPage","state","page","cases","loadFirstCase","payload","list","console","log","Object","assign","loadCaseStatsByUser","caseStatsByUser","getCaseStatsByUser","e","loadCasesByParams","params","query","currentPage","pagination","paginationDefaults","perPage","offset","length","puzzleParams","JSON","parse","localStorage","getItem","puzzle","setItem","stringify","url","window","location","href","indexOf","currentType","clone","queryParams","limit","Promise","resolve","reject","catch","err","response","status","reload","push","unLoadCase","case","loadCase","title","specialization","last_change_date","Date","getTime","mode","files","screenshots","screenshots_macro","request","isCancel","saveMetaData","meta","file_id","stains","put","meta_data","error","saveMaterial","case_id","type_id","material","loadJsonFileData","newCase","getNotificationByPage","saveCase","caseData","post","changeShareState","caseId","value","result","messageLocalizationKey","getIcdMorphology","text","getIcdTopography","saveScreenshotWsiInStorage","userId","account","saveScreenshotInStorage","file_name","sendImageMembraneToDs","getImageMembraneFromDs","base64","dsLoop","setTimeout","rep","sendImageToDs","getImageFromDs","sendImageSimilarToDs","content","getImageSimilarFromDs","Array","sendGlassToDp","fileId","getDsLayer","getMetsColor","deleteTrainingData","sendMorfoTrainingData","success","getMorfoTrainingData","sendTrainingData","getInfoByCells","startX","endX","startY","endY","sendDicomVolume","getDicomVolume","volume","toggleArchive","toggleInProgress","togglePublished","addComment","author","name","photo","email","deleteComment","delete","editComment","comment","likeComment","likes","searchUser","autocompletes","approveReport","setOwnerDoctor","setReportDoctor","uniqueId","localizationKey","addCollaborators","emails","message","sendRequest","deleteCollaborator","signHashAsync","dataToSign","thumbprint","cadesplugin","async_spawn","arg","oStore","CreateObjectAsync","Open","CAPICOM_CURRENT_USER_STORE","CAPICOM_MY_STORE","CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED","allCertificates","Certificates","oCertificates","Find","CAPICOM_CERTIFICATE_FIND_SHA1_HASH","certificatesCount","Count","oCertificate","Item","oSigner","propset_Certificate","oCadesSignedData","propset_ContentEncoding","CADESCOM_BASE64_TO_BINARY","propset_Content","sSignedMessage","SignCades","CADESCOM_CADES_BES","Close","reportSign","name_digital_signature","caseObj","reportStorageCreate","report","reportStorageInit","reportStorageSign","replace","alert","reportStorageDelete","reportId","reportStorageEntity","saveReport","textDiscuss","textMicro","macro_description_protocol","mkb","icd","ihc_recommended","genetic_recommended","jsonSelect","report_case_id","executionInfo","text_micro","text_discuss","json_select","execution_info","draftReport","her2","getLatestReportVersion","reportToDraft","reportToPublished","savePuzzleReport","text_macro","updateFile","reactions","startDeleting","timer","deleteTimer","startDeletingOrder","cancelDeleting","deleteFile","deleteFileOrder","createSlideRescanOrder","magnification","casesCreateSlideRescanOrder","findCasesByTitle","debounce","titleQueryString","startUploadingFile","file","progressUploadingFile","percentComplete","uniqueIdentifier","options","fingerprint","cancelUploadingFile","successUploadingFile","sortFiles","resortFiles","orders","setContentType","openViewer","history","replaceState","pathname","closeViewer","isLeftViewer","toggleSynchronize","setViewerCompareMode","selectViewerFile","info","createMark","mark","webinarId","editMark","itemId","item","deleteMark","getCircularReplacer","seen","WeakSet","key","has","add","createRuler","ruler","editRuler","deleteRuler","toggleFullscreenPanel","saveScreenshot","screenshot","placeLisOrder","forEach","stain","now","creation_date","histoblock"],"sources":["C:/Users/Danil/Desktop/122/src/store/action/cases.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from '@/router'\r\nimport _ from 'lodash'\r\nimport api from '../../api'\r\nimport mqtt from '@/utils/mqtt'\r\nimport {\r\n  COMMON_CHANGE_CASE_STATS_BY_USER,\r\n  COMMON_CHANGE_CASE_STATS_BY_USER_LOADING\r\n} from '../mutations/available'\r\n\r\nimport { Archived } from '../../dictionaries/availableCaseStatuses'\r\n\r\nlet caseCancelToken = null\r\n\r\nexport const setCasesType = ({ commit }, type) => {\r\n  commit('CHANGE_CASES_TYPE', type)\r\n}\r\n\r\nexport const setPuzzleId = ({ commit }, id) => {\r\n  commit('SET_PUZZLE_ID', id)\r\n}\r\n\r\nexport const toggleCasesListStyle = ({ commit }) => {\r\n  commit('TOGGLE_CASES_LIST_STYLE')\r\n}\r\n\r\nexport const loadStatistic = ({ commit, dispatch }) => {\r\n  axios.get('/api/cases/statistic')\r\n    .then(({ data }) => {\r\n      commit('CASES_STATISTIC', data)\r\n    })\r\n}\r\n\r\nexport const changeCasesPage = ({commit, state}, page) => {\r\n  commit('CHANGE_CASES_PAGE', {\r\n    type: state.cases.type,\r\n    page: page\r\n  })\r\n}\r\n// tut\r\nexport const loadFirstCase = ({commit, state}, payload) => {\r\n  const list = []\r\n  console.log(payload.data, '!', Object.assign(payload.data[0]))\r\n  commit('CASE_LOADED', Object.assign(payload.data[0]))\r\n  commit('OPEN_VIEWER', '78684e29-2176-49e5-bb69-abdc1e2cba1f')\r\n  commit('SELECT_VIEWER_FILE', { 'id': '78684e29-2176-49e5-bb69-abdc1e2cba1f', 'primary': true })\r\n\r\n  // var files = payload.map(function(data) {\r\n  //   console.log(data, '!!')\r\n//  \r\n  //   return data.files;\r\n  // });\r\n  // const order = Object.assign(payload.data[0].files).forEach((item, i, arr) => {\r\n    \r\n  //   list.push(item[i].id)\r\n  // });\r\n  // commit('FILES_AND_ORDERS', { payload: Object.assign(payload.data[0].files)})\r\n \r\n}\r\n\r\nexport const loadCaseStatsByUser = async ({commit, state}) => {\r\n  commit(COMMON_CHANGE_CASE_STATS_BY_USER_LOADING, true)\r\n\r\n  try {\r\n    const caseStatsByUser = await api.getCaseStatsByUser()\r\n    commit(COMMON_CHANGE_CASE_STATS_BY_USER, caseStatsByUser)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  commit(COMMON_CHANGE_CASE_STATS_BY_USER_LOADING, false)\r\n}\r\n\r\nexport const loadCasesByParams = ({commit, state}, params) => {\r\n  const query = _.get(params, 'query', null)\r\n  const currentPage = _.get(state.cases.pagination, [state.cases.type, 'currentPage'], state.cases.paginationDefaults.currentPage)\r\n  const perPage = state.cases.paginationDefaults.perPage\r\n  const offset = (currentPage - 1) * perPage\r\n\r\n  commit('CASES_BY_TYPE_LOADING')\r\n  commit('SAVE_QUERY_TO_STATE', query)\r\n  if (!state.cases.list.length) {\r\n    commit('LOADING')\r\n  }\r\n\r\n  let puzzleParams = JSON.parse(localStorage.getItem('puzzleParams'))\r\n\r\n  if (state.cases.puzzle) {\r\n    localStorage.setItem('puzzleParams', JSON.stringify(state.cases.puzzle))\r\n  }\r\n\r\n  // let url = state.cases.puzzle ? `/api/puzzles/${state.cases.puzzle}` : '/api/cases'\r\n  let url = `/files.json`\r\n\r\n  if (puzzleParams && window.location.href.indexOf('/webinars/') > 0) {\r\n    url = '/api/puzzles/' + puzzleParams\r\n  }\r\n\r\n  const currentType = _.clone(state.cases.type)\r\n  let queryParams = {\r\n    type: state.cases.type,\r\n    offset: offset,\r\n    limit: perPage,\r\n    query: query\r\n  }\r\n\r\n  localStorage.setItem('routeParams', JSON.stringify(queryParams))\r\n\r\n  return new Promise((resolve, reject) => axios.get(url, { params: queryParams })\r\n    .then(({data}) => {\r\n      if (state.cases.type !== currentType) {\r\n        resolve()\r\n        commit('CASES_BY_TYPE_LOADED')\r\n        return\r\n      }\r\n\r\n      if (params && params.query) {\r\n        commit('CASES_SEARCH', data)\r\n      } else {\r\n        commit('CASES_LOADED_BY_PARAMS', data)\r\n      }\r\n      commit('CASES_BY_TYPE_LOADED')\r\n      resolve()\r\n    })\r\n    .catch(err => {\r\n      if (err.response.status === 412) {\r\n        queryParams = {\r\n          type: 'my',\r\n          offset: 0,\r\n          limit: perPage,\r\n          query: query\r\n        }\r\n        localStorage.setItem('routeParams', JSON.stringify(queryParams))\r\n        return window.location.reload()\r\n      }\r\n      if (err.response.status === 403) {\r\n        router.push('/account')\r\n      }\r\n      reject(err)\r\n    })\r\n  )\r\n}\r\n\r\nexport const unLoadCase = ({ commit, state }) => {\r\n  if (state.case && state.case.id) {\r\n    axios.get(`/api/cases/${state.case.id}/viewed`)\r\n  }\r\n\r\n  commit('CASE_UNLOAD')\r\n}\r\n\r\nexport const loadCase = async ({ commit }, { type, id }) => {\r\n  commit('LOADING')\r\n  if (id === 'new') {\r\n    commit('CASE_LOADED', { title: '', specialization: {}, last_change_date: new Date().getTime() / 1000 })\r\n  } else {\r\n    let url = `/files.json`\r\n\r\n    if (caseCancelToken) {\r\n      caseCancelToken()\r\n    }\r\n    await axios.get(url, { \r\n      mode: 'no-cors'\r\n    })\r\n    .then(({ data }) => {\r\n      if (!data.files.screenshots) data.files.screenshots = []\r\n      if (!data.files.screenshots_macro) data.files.screenshots_macro = []\r\n      if (!data.files.request) data.request = null\r\n\r\n      commit('CASE_LOADED', data)\r\n    })\r\n    .catch(err => {\r\n      if (axios.isCancel(err)) {\r\n        console.log('Get case request canceled')\r\n        return\r\n      }\r\n      if (err.response.status === 404) {\r\n        router.push('/')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const saveMetaData = ({commit, state}, {meta, file_id, stains}) => {\r\n  axios.put(`/api/cases/files/${file_id}/meta`, {meta: meta.meta_data, stains: stains})\r\n      .then(({data}) => {\r\n        commit('UPDATE_FILE_META', {id: file_id, meta: meta.meta_data})\r\n      })\r\n      .catch(console.error)\r\n}\r\n\r\nexport const saveMaterial = ({commit, state}, {case_id, type_id, material}) => {\r\n  axios.put(`/api/cases/${case_id}/material`, {type: type_id, material: material})\r\n      .then(({data}) => {\r\n      })\r\n      .catch(console.error)\r\n}\r\nexport const loadJsonFileData = ({commit, dispatch}) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/data')\r\n    .then(({ data }) => {\r\n      // if (!data.screenshots) data.screenshots = []\r\n      // if (!data.screenshots_macro) data.screenshots_macro = []\r\n      // if (!data.request) data.request = null\r\n      // resolve(data)\r\n      \r\n      commit('CASE_LOADED', data)\r\n    })\r\n    .catch(response => {\r\n      reject(response)\r\n    })\r\n  })\r\n}\r\nexport const newCase = ({ commit, dispatch }) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get('/api/cases/new')\r\n    .then(({ data }) => {\r\n      resolve(data.id)\r\n    })\r\n    .catch(response => {\r\n      reject(response)\r\n    })\r\n  })\r\n}\r\n\r\nexport const getNotificationByPage = ({ commit, dispatch }, page) => {\r\n  axios.get('/api/cases/notification/' + page).then((data) => {\r\n    commit('SET_HOTIFICATION_HISTORY', data.data)\r\n  })\r\n}\r\n\r\n// TODO: make optimistical update\r\nexport const saveCase = ({ commit }, caseData) => {\r\n  if (!caseData.id || caseData.id === 'new') {\r\n    commit('LOADING')\r\n    axios.post('/api/cases', caseData)\r\n      .then(({data}) => {\r\n        commit('SAVED')\r\n        router.push(`/cases/${data.id}`)\r\n      })\r\n      .catch(console.error)\r\n  } else {\r\n    axios.put(`/api/cases/${caseData.id}`, caseData)\r\n      .then(() => commit('CASE_UPDATED', caseData))\r\n      .catch(console.error)\r\n  }\r\n}\r\n\r\nexport const changeShareState = async ({commit, dispatch}, {caseId, value}) => {\r\n  let result = false\r\n\r\n  try {\r\n    await api.changeShareState(caseId, value)\r\n    result = true\r\n  } catch (e) {\r\n    dispatch('sendGenericErrorNotification', {\r\n      messageLocalizationKey: 'notifications.share.changeShareState.error'\r\n    })\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const getIcdMorphology = ({ commit, state }, text) => {\r\n  return axios.get(`/api/cases/icd/morphology`, {params: {text: text}})\r\n}\r\n\r\nexport const getIcdTopography = ({ commit, state }, text) => {\r\n  return axios.get(`/api/cases/icd/topography`, {params: {text: text}})\r\n}\r\n\r\nexport const saveScreenshotWsiInStorage = ({ commit, state }, data) => {\r\n  data.userId = state.account.id\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/screenshot-wsi`, data)\r\n    .then(data => resolve(data.data))\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const saveScreenshotInStorage = ({ commit, state }, data) => {\r\n  data.userId = state.account.id\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/screenshot`, data)\r\n    .then(data => resolve(data.data.file_name))\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const sendImageMembraneToDs = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/ds/single/membrane/add`, data)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const getImageMembraneFromDs = ({ commit, state }, file_id) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/single/membrane/result/` + file_id, )\r\n      .then((data) => {\r\n        if (!data.data || !data.data.base64) {\r\n          window.dsLoop = setTimeout(() => {\r\n            getImageMembraneFromDs({ commit, state }, file_id).then((rep) => {\r\n              if (!rep.data || !rep.data.base64) {\r\n                return\r\n              }\r\n              resolve(rep)\r\n            })\r\n          }, 2000)\r\n          return\r\n        }\r\n        resolve(data)\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const sendImageToDs = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/ds/single/add`, data)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const getImageFromDs = ({ commit, state }, file_id) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/single/result/` + file_id, )\r\n      .then((data) => {\r\n        if (!data.data || !data.data.base64) {\r\n          window.dsLoop = setTimeout(() => {\r\n            getImageFromDs({ commit, state }, file_id).then((rep) => {\r\n              if (!rep.data || !rep.data.base64) {\r\n                return\r\n              }\r\n              resolve(rep)\r\n            })\r\n          }, 2000)\r\n          return\r\n        }\r\n        resolve(data)\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const sendImageSimilarToDs = ({ commit, state }, data) => {\r\n  commit('SIMILAR_IMAGE', data.content)\r\n  return new Promise((resolve, reject) => axios.post(`/similar/post-predict-tile`, data)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const getImageSimilarFromDs = ({ commit, state }, id) => {\r\n  return new Promise((resolve, reject) => axios.get(`/similar/get-predict-result?id=` + id, )\r\n      .then((data) => {\r\n        if (!data.data || !(data.data instanceof Array)) {\r\n          window.dsLoop = setTimeout(() => {\r\n            getImageSimilarFromDs({ commit, state }, id).then((rep) => {\r\n              if (!rep.data || !(rep.data instanceof Array)) {\r\n                return\r\n              }\r\n              commit('SIMILAR_SLIDES', rep.data)\r\n              resolve(rep)\r\n            })\r\n          }, 2000)\r\n          return\r\n        }\r\n        commit('SIMILAR_SLIDES', data.data)\r\n        resolve(data)\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const sendGlassToDp = ({ commit, state }, {fileId, type}) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/add/${fileId}/${type}`)\r\n      .then((data) => {\r\n        if (data.status === 202) {\r\n          resolve(true)\r\n        } else {\r\n          resolve(false)\r\n        }\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const getDsLayer = ({ commit, state }, {fileId, type}) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/result/${fileId}/${type}`)\r\n      .then((data) => {\r\n        if (data.status === 202 || data.status === 200) {\r\n          resolve(data.data)\r\n        } else {\r\n          resolve(null)\r\n        }\r\n      }).catch(reject)\r\n  )\r\n}\r\n\r\nexport const getMetsColor = ({ commit, state }) => {\r\n  return new Promise((resolve, reject) => axios.get(`/api/cases/get-mets-color`)\r\n      .then((data) => {\r\n        resolve(data.data)\r\n      }).catch(reject)\r\n  )\r\n}\r\n\r\nexport const deleteTrainingData = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/training/delete`, data)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const sendMorfoTrainingData = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/morfo-training`, data)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          resolve({success: true, id: result.data})\r\n        } else {\r\n          console.log(result)\r\n          resolve({success: false})\r\n        }\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const getMorfoTrainingData = ({ commit, state }, file_id) => {\r\n  return new Promise((resolve, reject) => axios.get(`/api/cases/file/morfo-training/${file_id}`)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          resolve({success: true, data: result.data.data})\r\n        } else {\r\n          resolve({success: false})\r\n        }\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const sendTrainingData = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/file/training`, data)\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          resolve({success: true, id: result.data})\r\n        } else {\r\n          console.log(result)\r\n          resolve({success: false})\r\n        }\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const getInfoByCells = ({ commit, state }, {fileId, startX, endX, startY, endY}) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/count-cells/${fileId}/${startX}/${endX}/${startY}/${endY}`)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const sendDicomVolume = ({ commit, state }, data) => {\r\n  return new Promise((resolve, reject) => axios.post(`/ds/dicom-volume`, data)\r\n    .then(resolve)\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\nexport const getDicomVolume = ({ commit, state }, id) => {\r\n  return new Promise((resolve, reject) => axios.get(`/ds/dicom-volume/${id}`, )\r\n      .then((data) => {\r\n        if (!data.data || !data.data.volume) {\r\n          window.dsLoop = setTimeout(() => {\r\n            getDicomVolume({ commit, state }, id).then((rep) => {\r\n              if (!rep.data || !rep.data.volume) {\r\n                return\r\n              }\r\n              resolve(rep)\r\n            })\r\n          }, 2000)\r\n          return\r\n        }\r\n        resolve(data)\r\n      }).catch(reject)\r\n    )\r\n}\r\n\r\nexport const toggleArchive = ({ commit, state }, {caseId}) => {\r\n  if (state.case.status === Archived) {\r\n    axios.post(`/api/cases/${caseId}/unarchive`)\r\n      .then((response) => {\r\n        if (caseId !== state.case.id) {\r\n          return\r\n        }\r\n        const status = _.get(response, ['data', 'status'], null)\r\n        commit('CASE_UNARCHIVED', status)\r\n      })\r\n      .catch(console.error)\r\n  } else {\r\n    axios.post(`/api/cases/${caseId}/archive`)\r\n      .then((response) => {\r\n        if (caseId !== state.case.id) {\r\n          return\r\n        }\r\n        const status = _.get(response, ['data', 'status'], null)\r\n        commit('CASE_ARCHIVED', status)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n}\r\n\r\nexport const toggleInProgress = ({ commit, state }, {caseId}) => {\r\n  axios.put(`/api/cases/${caseId}/status/in_progress`)\r\n    .then(() => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('CASE_INPROGRESS')\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const togglePublished = ({ commit, state }, {caseId}) => {\r\n  commit('TOGGLE_PUBLISHED')\r\n  axios.put(`/api/cases/${caseId}`, state.case)\r\n}\r\n\r\nexport const addComment = ({ commit, state }, { text, caseId }) => {\r\n  axios.post(`/api/cases/${caseId}/comments`, {text: text})\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('ADD_COMMENT', {\r\n        ...response.data,\r\n        author: {\r\n          id: state.account.id,\r\n          name: state.account.name,\r\n          photo: state.account.photo,\r\n          email: state.account.email\r\n        }\r\n      })\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const deleteComment = ({ commit, state }, {id, caseId}) => {\r\n  axios.delete(`/api/cases/${caseId}/comments/${id}`)\r\n    .then((response) => {\r\n      commit('DELETE_COMMENT', id)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const editComment = ({ commit, state }, comment) => {\r\n  axios.put(`/api/cases/${comment.caseId}/comments/${comment.id}`, { text: comment.text })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const likeComment = ({ commit, state }, comment) => {\r\n  axios.put(`/api/cases/like/comment/${comment.id}`).then((data) => {\r\n    commit('LIKE_COMMENT', {id: comment.id, likes: data.data})\r\n  }).catch(console.error)\r\n}\r\n\r\nexport const searchUser = ({ commit, state }, {query, caseId}) => {\r\n  axios.get(`/api/autocompletes?query=${query}&case_id=${caseId}`)\r\n    .then((response) => {\r\n      commit('SET_SUGGESTIONS', response.data.autocompletes)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const approveReport = ({ commit, state }, {id, caseId}) => {\r\n  axios.put(`/api/cases/doctor/${caseId}/approve`)\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('DOCTOR_APPROVE_REPORT', id)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const setOwnerDoctor = ({ commit, state }, {id, caseId})  => {\r\n  axios.put(`/api/cases/owner/doctor/${caseId}/${id}`)\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('CASE_INPROGRESS')\r\n      commit('CHANGE_DOCTOR_OWNER', id)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const setReportDoctor = ({ commit, state }, {id, caseId}) => {\r\n  axios.put(`/api/cases/report/doctor/${caseId}/${id}`)\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('CHANGE_DOCTOR_REPORT', id)\r\n    })\r\n    .catch((e) => {\r\n      if (e.response.data.error === 'doctor_cannot_validate_omi') {\r\n        commit('ADD_NOTIFICATION', {\r\n          id: _.uniqueId('doctorCannotValidate'),\r\n          type: 'generic-error',\r\n          localizationKey: 'notifications.canNotValidate'\r\n        })\r\n      }\r\n    })\r\n}\r\n\r\nexport const addCollaborators = ({ commit, state }, { emails, message, caseId }) => {\r\n  axios.post(`/api/cases/${caseId}/collaborators`, { emails: emails, message: message })\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('COLLABORATORS_ADDED', response.data)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const sendRequest = ({ commit, state }, {message, caseId}) => {\r\n  axios.post(`/api/request`, { case_id: caseId, text: message })\r\n    .then((response) => {\r\n      commit('REQUEST_SENT', response.data.request)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const deleteCollaborator = ({ commit, state }, {id, caseId}) => {\r\n  axios.delete(`/api/cases/${caseId}/collaborators/${id}`)\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('COLLABORATOR_DELETED', id)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nconst signHashAsync = (dataToSign, thumbprint) => {\r\n  return new Promise(function (resolve, reject) {\r\n    cadesplugin.async_spawn(function* (arg) {\r\n      let oStore\r\n      try {\r\n        oStore = yield cadesplugin.CreateObjectAsync('CAdESCOM.Store')\r\n\r\n        yield oStore.Open(cadesplugin.CAPICOM_CURRENT_USER_STORE, cadesplugin.CAPICOM_MY_STORE, cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED)\r\n        let allCertificates = yield oStore.Certificates\r\n\r\n        let oCertificates = yield allCertificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, thumbprint)\r\n        let certificatesCount = yield oCertificates.Count\r\n        if (certificatesCount === 0) {\r\n          return reject('Сертификат не найден в хранилище.')\r\n        }\r\n        let oCertificate = yield oCertificates.Item(1)\r\n        let oSigner = yield cadesplugin.CreateObjectAsync('CAdESCOM.CPSigner')\r\n        oSigner.propset_Certificate(oCertificate)\r\n\r\n        let oCadesSignedData = yield cadesplugin.CreateObjectAsync('CAdESCOM.CadesSignedData')\r\n        yield oCadesSignedData.propset_ContentEncoding(cadesplugin.CADESCOM_BASE64_TO_BINARY)\r\n        yield oCadesSignedData.propset_Content(dataToSign)\r\n\r\n        let sSignedMessage = oCadesSignedData.SignCades(oSigner, cadesplugin.CADESCOM_CADES_BES, true)\r\n        return resolve(sSignedMessage)\r\n      } catch (err) {\r\n        return reject('Не удалось создать подпись. ' + err.message)\r\n      } finally {\r\n        if (oStore) {\r\n          yield oStore.Close()\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport const reportSign = ({ commit, state }, {name_digital_signature, caseObj}) => {\r\n  reportStorageCreate(caseObj.id, caseObj.report.id)\r\n    .then((data) => {\r\n      if (data.success) {\r\n        reportStorageInit(caseObj.report.id)\r\n          .then((data) => {\r\n            if (data.success) {\r\n              signHashAsync(data.data, name_digital_signature).then((data) => {\r\n                reportStorageSign(data.replace(/\\n/g, '').replace(/\\r/g, ''), caseObj.report.id).then((data) => {\r\n                  if (data.success) {\r\n                    alert('Заключение успешно подписано')\r\n                    caseObj.report.status = 'validated'\r\n                  } else {\r\n                    alert('Невозможно подписать заключение')\r\n                  }\r\n                }).catch(err => {\r\n                  console.log(err)\r\n                  alert('Невозможно отправить подпись в хранилище')\r\n                })\r\n              }).catch(err => {\r\n                reportStorageDelete(caseObj.report.id).then(() => {\r\n                })\r\n                alert(err.message ? err.message : err)\r\n              })\r\n            } else {\r\n              alert('Невозможно получить заключение из хранилища')\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n            alert('Невозможно получить файл на подпись из хранилища')\r\n          })\r\n      } else {\r\n        alert('Невозможно отправить заключение в хранилище')\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n      alert('Невозможно установить связь с хранилищем')\r\n    })\r\n}\r\n\r\nconst reportStorageCreate = (caseId, reportId) => {\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/report/storage/create`, {\r\n    'case_id': caseId,\r\n    'report_id': reportId\r\n  })\r\n      .then(({data}) => {\r\n        resolve(data)\r\n      })\r\n      .catch(reject)\r\n    )\r\n}\r\n\r\nconst reportStorageInit = (reportId) => {\r\n  return new Promise((resolve, reject) => axios.get(`/api/cases/report/storage/init/${reportId}`)\r\n      .then(({data}) => {\r\n        resolve(data)\r\n      })\r\n      .catch(reject)\r\n    )\r\n}\r\n\r\nexport const reportStorageEntity = ({ commit, state }, reportId) => {\r\n  return new Promise((resolve, reject) => axios.get(`/api/cases/report/storage/entity/${reportId}`)\r\n     .then(({data}) => {\r\n       resolve(data)\r\n     })\r\n     .catch(reject)\r\n   )\r\n}\r\n\r\nconst reportStorageSign = (content, reportId) => {\r\n  return new Promise((resolve, reject) => axios.post('/api/cases/report/storage/sign', {\r\n    'content': content,\r\n    'report_id': reportId\r\n  })\r\n      .then(({data}) => {\r\n        resolve(data)\r\n      })\r\n      .catch(reject)\r\n    )\r\n}\r\n\r\nconst reportStorageDelete = (reportId) => {\r\n  return new Promise((resolve, reject) => axios.post(`/api/cases/report/storage/delete`, {\r\n    'report_id': reportId\r\n  })\r\n      .then(({data}) => {\r\n        resolve(data)\r\n      })\r\n      .catch(reject)\r\n    )\r\n}\r\n\r\nexport const saveReport = ({ commit, state }, { text, stains, screenshots, textDiscuss, textMicro, macro_description_protocol, screenshots_macro, mkb, icd, ihc_recommended, genetic_recommended, jsonSelect, report_case_id, executionInfo }) => {\r\n  const report = {\r\n    text,\r\n    stains,\r\n    screenshots,\r\n    macro_description_protocol,\r\n    text_micro: textMicro,\r\n    text_discuss: textDiscuss,\r\n    screenshots_macro,\r\n    mkb,\r\n    icd,\r\n    ihc_recommended,\r\n    genetic_recommended,\r\n    json_select: jsonSelect,\r\n    execution_info: executionInfo\r\n  }\r\n  return axios.post(`/api/cases/${report_case_id}/reports/published`, report)\r\n    .then((response) => {\r\n      if (report_case_id !== state.case.id) {\r\n        return\r\n      }\r\n      commit('REPORT_SAVED_DATA', response.data)\r\n    })\r\n}\r\n\r\nexport const draftReport = ({ commit, state }, {\r\n  text,\r\n  stains,\r\n  screenshots,\r\n  textDiscuss,\r\n  textMicro,\r\n  macro_description_protocol,\r\n  screenshots_macro,\r\n  mkb,\r\n  icd,\r\n  her2,\r\n  ihc_recommended,\r\n  genetic_recommended,\r\n  jsonSelect,\r\n  report_case_id\r\n}) => {\r\n  const report = { text: text,\r\n    stains,\r\n    screenshots,\r\n    macro_description_protocol,\r\n    text_micro: textMicro,\r\n    text_discuss: textDiscuss,\r\n    screenshots_macro,\r\n    mkb,\r\n    icd,\r\n    her2,\r\n    ihc_recommended,\r\n    genetic_recommended,\r\n    json_select: jsonSelect }\r\n  return axios.post(`/api/cases/${report_case_id}/reports/draft`, report)\r\n    .then((response) => {\r\n      if (report_case_id !== state.case.id) {\r\n        return\r\n      }\r\n      commit('REPORT_SAVED_DATA', response.data)\r\n    })\r\n}\r\n\r\nexport const getLatestReportVersion = ({ commit, state }, {caseId}) => {\r\n  return axios.get(`/api/cases/get-single-report`, {\r\n    params: {\r\n      case_id: caseId\r\n    }\r\n  })\r\n    .then((response) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n      commit('REPORT_SAVED_DATA', response.data)\r\n    })\r\n}\r\n\r\nexport const reportToDraft = ({ commit, state }, {caseId}) => {\r\n  return axios.post(`/api/cases/send-report-to-draft`, {\r\n    case_id: caseId\r\n  })\r\n    .then(({response}) => {\r\n      if (caseId !== state.case.id) {\r\n        return\r\n      }\r\n\r\n      commit('REPORT_SET_STATE', 'draft')\r\n    })\r\n}\r\n\r\nexport const reportToPublished = ({ commit }) => {\r\n  commit('REPORT_SET_STATE', 'published')\r\n}\r\n\r\nexport const savePuzzleReport = ({ commit, state }, { text, stains, screenshots, text_macro, text_micro, text_discuss, screenshots_macro, mkb, icd }) => {\r\n  const report = {\r\n    text,\r\n    stains,\r\n    screenshots,\r\n    text_macro,\r\n    text_micro,\r\n    text_discuss,\r\n    screenshots_macro,\r\n    mkb,\r\n    icd\r\n  }\r\n  axios.post(`/api/puzzles/${state.case.puzzle}/${state.case.id}/reports`, report)\r\n    .then((response) => {\r\n      commit('REPORT_SAVED', response.data)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const updateFile = ({ commit, state }, { id, title, stains, reactions }) => {\r\n  axios.put(`/api/cases/${state.case.id}/files/${id}`, {\r\n    title, stains, reactions\r\n  })\r\n  .then(() => {\r\n    commit('UPDATE_FILE', { id, title, stains })\r\n  })\r\n  .catch(console.error)\r\n}\r\n\r\nexport const startDeleting = ({ commit, dispatch, state }, { caseId, fileId, title }) => {\r\n  const timer = setTimeout(() => {\r\n    dispatch('deleteFile', { caseId, fileId })\r\n  }, state.deleteTimer)\r\n  commit('PUT_TO_DELETE_QUEUE', { caseId, fileId, title, timer })\r\n}\r\n\r\nexport const startDeletingOrder = ({ commit, dispatch, state }, { caseId, fileId, title }) => {\r\n  const timer = setTimeout(() => {\r\n    dispatch('deleteFileOrder', { caseId, fileId })\r\n  }, state.deleteTimer)\r\n  commit('PUT_TO_DELETE_QUEUE', { caseId, fileId, title, timer })\r\n}\r\n\r\nexport const cancelDeleting = ({ commit }, fileId) => {\r\n  commit('REMOVE_FROM_DELETE_QUEUE', fileId)\r\n}\r\n\r\nexport const deleteFile = ({ commit, state }, { caseId, fileId }) => {\r\n  axios.delete(`/api/cases/${caseId}/files/${fileId}`)\r\n    .then(() => {\r\n      commit('DELETE_FILE', fileId)\r\n      commit('REMOVE_FROM_DELETE_QUEUE', fileId)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const deleteFileOrder = ({ commit, state }, { caseId, fileId }) => {\r\n  axios.delete(`/api/cases/${caseId}/files/${fileId}/order`)\r\n    .then(() => {\r\n      commit('DELETE_FILE', fileId)\r\n      commit('REMOVE_FROM_DELETE_QUEUE', fileId)\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nexport const createSlideRescanOrder = async ({ dispatch }, {fileId, magnification, comment}) => {\r\n  try {\r\n    await api.casesCreateSlideRescanOrder(fileId, magnification, comment)\r\n\r\n    dispatch('sendGenericInfoNotification', {\r\n      messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.success'\r\n    })\r\n    return true\r\n  } catch (e) {\r\n    const error = _.get(e, ['response', 'data', 'error'], null)\r\n\r\n    if (error === 'not_lis_file') {\r\n      dispatch('sendGenericInfoNotification', {\r\n        messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.notLisFile'\r\n      })\r\n      return true\r\n    }\r\n\r\n    dispatch('sendGenericErrorNotification', {\r\n      messageLocalizationKey: 'notifications.cases.createSlideRescanOrder.error'\r\n    })\r\n    console.error(`Unable to create slide rescan order: ${e.message}`)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport const findCasesByTitle = _.debounce(async ({ state, commit }, titleQueryString) => {\r\n  commit('CASE_GROUP_OPERATIONS_CHANGE_LOADER', true)\r\n\r\n  try {\r\n    const result = await api.findCasesByTitle(titleQueryString)\r\n    const cases = _.get(result, 'cases', [])\r\n    commit('CASE_GROUP_OPERATIONS_LOAD_CASES', cases)\r\n  } catch (e) {\r\n    console.error(`Unable to find cases by title: ${e.message}`)\r\n  }\r\n\r\n  commit('CASE_GROUP_OPERATIONS_CHANGE_LOADER', false)\r\n}, 500)\r\n\r\nexport const startUploadingFile = ({ commit }, file) => {\r\n  commit('START_UPLOADING_FILE', file)\r\n}\r\n\r\nexport const progressUploadingFile = ({ commit }, {file, percentComplete}) => {\r\n  const uniqueIdentifier = file.options.fingerprint(file.file, file.options)\r\n  commit('PROGRESS_UPLOADING_FILE', { percentComplete, uniqueIdentifier })\r\n}\r\n\r\nexport const cancelUploadingFile = ({ commit }, file) => {\r\n  commit('CANCEL_UPLOADING_FILE', file)\r\n}\r\n\r\nexport const successUploadingFile = ({ commit }, payload) => {\r\n  commit('SUCCESS_UPLOADING_FILE', payload)\r\n}\r\n\r\nexport const sortFiles = ({ commit }, { id, files }) => {\r\n  axios.put(`/api/cases/${id}/files/order`, { files })\r\n  .catch(console.error)\r\n  commit('SORT_FILES', files)\r\n}\r\n\r\nexport const resortFiles = ({ commit }, { files, orders }) => {\r\n  commit('FILES_AND_ORDERS', {files, orders})\r\n}\r\n\r\nexport const setContentType = ({ commit }, type) => {\r\n  commit('CHANGE_CONTENT_TYPE', type)\r\n}\r\n\r\nexport const openViewer = ({ commit }, id) => {\r\n  window.history.replaceState(null, null, `${window.location.pathname}?file=${id}`)\r\n  commit('OPEN_VIEWER', id)\r\n}\r\n\r\nexport const closeViewer = ({ commit }, isLeftViewer) => {\r\n  window.history.replaceState(null, null, window.location.pathname)\r\n  commit('DISABLE_TOOLS')\r\n  commit('CLOSE_VIEWER', isLeftViewer)\r\n}\r\n\r\nexport const toggleSynchronize = ({ commit }) => {\r\n  commit('TOGGLE_SYNCRONIZE')\r\n}\r\n\r\nexport const setViewerCompareMode = ({ commit }) => {\r\n  commit('VIEWER_COMPARE')\r\n}\r\n\r\nexport const selectViewerFile = ({ commit }, info) => {\r\n  commit('SELECT_VIEWER_FILE', info)\r\n}\r\n\r\nexport const createMark = ({ commit }, { caseId, fileId, mark, webinarId }) => {\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.post(`/api/webinars/${webinarId}/files/${fileId}/marks`, mark)\r\n      .then(({data}) => {\r\n        mark.id = data.id\r\n        commit('CREATE_MARK', { fileId, mark })\r\n        resolve(mark)\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    // localStorage.setItem('mark', mark);\r\n    // commit('CREATE_MARK', { fileId, mark })\r\n\r\n    // return mark\r\n    return new Promise((resolve, reject) => axios.post(`http://localhost:3000/marks`, mark)\r\n      .then(({data}) => {\r\n        mark.id = data.id\r\n        commit('CREATE_MARK', { fileId, mark })\r\n        resolve(mark)\r\n      })\r\n      .catch(reject)\r\n    )\r\n  }\r\n}\r\n\r\nexport const editMark = ({ commit }, { caseId, fileId, itemId, item, webinarId }) => {\r\n  console.log(itemId, 'itemId edit mark')\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.put(`/api/webinars/${webinarId}/files/${fileId}/marks/${itemId}`, item)\r\n      .then(() => {\r\n        commit('EDIT_MARK', { fileId, item })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    // localStorage.setItem('mark', item);\r\n    // commit('EDIT_MARK', { fileId, item })\r\n\r\n    // return item\r\n    return new Promise((resolve, reject) => axios.put(`http://localhost:3000/marks/${itemId}`, item)\r\n      .then(() => {\r\n        commit('EDIT_MARK', { fileId, item })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  }\r\n}\r\n\r\nexport const deleteMark = ({ commit }, { caseId, fileId, itemId, webinarId }) => {\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.delete(`/api/webinars/${webinarId}/files/${fileId}/marks/${itemId}`)\r\n      .then(() => {\r\n        commit('DELETE_MARK', { fileId, itemId })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    return new Promise((resolve, reject) => axios.delete(`/api/cases/${caseId}/files/${fileId}/marks/${itemId}`)\r\n      .then(() => {\r\n        commit('DELETE_MARK', { fileId, itemId })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  }\r\n}\r\n\r\nconst getCircularReplacer = () => {\r\n  const seen = new WeakSet();\r\n  return (key, value) => {\r\n    if (typeof value === \"object\" && value !== null) {\r\n      if (seen.has(value)) {\r\n        return;\r\n      }\r\n      seen.add(value);\r\n    }\r\n    return value;\r\n  };\r\n};\r\n\r\nexport const createRuler = ({ commit }, { caseId, fileId, ruler, webinarId }) => {\r\n  console.log(ruler, 'createRuler')\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.post(`/api/webinars/${webinarId}/files/${fileId}/rulers`, ruler)\r\n      .then(({data}) => {\r\n        ruler.id = data.id\r\n        commit('CREATE_RULER', { fileId, ruler })\r\n        resolve(ruler)\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    // localStorage.setItem('caseId', caseId);\r\n    // localStorage.setItem('fileId', fileId);\r\n    // localStorage.setItem('ruler', ruler);\r\n    // ruler.id = new Date().getTime()\r\n    //   return ruler\r\n    console.log(ruler, \"post promise ruler\")\r\n\r\n    return new Promise((resolve, reject) => axios.post(`http://localhost:3000/rulers`, ruler)\r\n    .then(({data}) => {\r\n      console.log(data, \"post promise\")\r\n      ruler.id = data.id\r\n      commit('CREATE_RULER', { fileId, ruler })\r\n      resolve(ruler)\r\n    })\r\n    .catch(reject)\r\n  )\r\n}\r\n\r\n    // return new Promise((resolve, reject) => axios.post(`/api/cases/${caseId}/files/${fileId}/rulers`, ruler)\r\n\r\n}\r\n\r\nexport const editRuler = ({ commit }, { caseId, fileId, itemId, item, webinarId }) => {\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.put(`/api/webinars/${webinarId}/files/${fileId}/rulers/${itemId}`, item)\r\n      .then(() => {\r\n        commit('EDIT_RULER', { fileId, item })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    return new Promise((resolve, reject) => axios.put(`http://localhost:3000/rulers/${itemId}`, item)\r\n      .then(() => {\r\n        commit('EDIT_RULER', { fileId, item })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  }\r\n}\r\n\r\nexport const deleteRuler = ({ commit }, { caseId, fileId, itemId, webinarId }) => {\r\n  if (webinarId) {\r\n    return new Promise((resolve, reject) => axios.delete(`/api/webinars/${webinarId}/files/${fileId}/rulers/${itemId}`)\r\n      .then(() => {\r\n        commit('DELETE_RULER', { fileId, itemId })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  } else {\r\n    return new Promise((resolve, reject) => axios.delete(`/api/cases/${caseId}/files/${fileId}/rulers/${itemId}`)\r\n      .then(() => {\r\n        commit('DELETE_RULER', { fileId, itemId })\r\n        resolve()\r\n      })\r\n      .catch(reject)\r\n    )\r\n  }\r\n}\r\n\r\nexport const toggleFullscreenPanel = ({ commit }) => {\r\n  commit('TOGGLE_FULLSCREEN_PANEL')\r\n}\r\n\r\nexport const saveScreenshot = ({ commit }, screenshot) => {\r\n  commit('SAVE_SCREENSHOT', screenshot)\r\n}\r\n\r\n\r\nexport const placeLisOrder = ({ commit }, data) => {\r\n  return new Promise((resolve, reject) => axios.post('/api/lisorders', data)\r\n    .then(() => {\r\n      let files = {}\r\n      data.stains.forEach(stain => {\r\n        let id = Date.now()\r\n        files[id] = {\r\n          id: id,\r\n          creation_date: Date.now() / 1000,\r\n          histoblock: data.histoblock.title,\r\n          type: 'order',\r\n          stains: [stain]\r\n        }\r\n      })\r\n      commit('ADD_FILES', files)\r\n      resolve()\r\n    })\r\n    .catch(console.error)\r\n  )\r\n}\r\n\r\n\r\n\r\n// WEBPACK FOOTER //\r\n// ./src/store/actions/cases.js"],"mappings":"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"},"metadata":{},"sourceType":"module"}