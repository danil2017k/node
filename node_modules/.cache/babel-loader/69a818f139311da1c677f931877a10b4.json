{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(mutations, observer) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"names":["conversions","require","utils","exports","convert","globalObject","value","context","TypeError","invokeTheCallbackFunction","mutations","observer","thisArg","tryWrapperForImpl","callResult","Reflect","apply","construct","wrapperSymbol","objectReference"],"sources":["C:/Users/Danil/Desktop/project1/node_modules/jsdom/lib/jsdom/living/generated/MutationCallback.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(mutations, observer) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEAE,OAAO,CAACC,OAAR,GAAkB,CAACC,YAAD,EAAeC,KAAf,EAAsB;EAAEC,OAAO,GAAG;AAAZ,IAAqC,EAA3D,KAAkE;EAClF,IAAI,OAAOD,KAAP,KAAiB,UAArB,EAAiC;IAC/B,MAAM,IAAID,YAAY,CAACG,SAAjB,CAA2BD,OAAO,GAAG,oBAArC,CAAN;EACD;;EAED,SAASE,yBAAT,CAAmCC,SAAnC,EAA8CC,QAA9C,EAAwD;IACtD,MAAMC,OAAO,GAAGV,KAAK,CAACW,iBAAN,CAAwB,IAAxB,CAAhB;IACA,IAAIC,UAAJ;IAEAJ,SAAS,GAAGR,KAAK,CAACW,iBAAN,CAAwBH,SAAxB,CAAZ;IAEAC,QAAQ,GAAGT,KAAK,CAACW,iBAAN,CAAwBF,QAAxB,CAAX;IAEAG,UAAU,GAAGC,OAAO,CAACC,KAAR,CAAcV,KAAd,EAAqBM,OAArB,EAA8B,CAACF,SAAD,EAAYC,QAAZ,CAA9B,CAAb;EACD;;EAEDF,yBAAyB,CAACQ,SAA1B,GAAsC,CAACP,SAAD,EAAYC,QAAZ,KAAyB;IAC7DD,SAAS,GAAGR,KAAK,CAACW,iBAAN,CAAwBH,SAAxB,CAAZ;IAEAC,QAAQ,GAAGT,KAAK,CAACW,iBAAN,CAAwBF,QAAxB,CAAX;IAEA,IAAIG,UAAU,GAAGC,OAAO,CAACE,SAAR,CAAkBX,KAAlB,EAAyB,CAACI,SAAD,EAAYC,QAAZ,CAAzB,CAAjB;EACD,CAND;;EAQAF,yBAAyB,CAACP,KAAK,CAACgB,aAAP,CAAzB,GAAiDZ,KAAjD;EACAG,yBAAyB,CAACU,eAA1B,GAA4Cb,KAA5C;EAEA,OAAOG,yBAAP;AACD,CA5BD"},"metadata":{},"sourceType":"script"}