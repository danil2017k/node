{"ast":null,"code":"'use strict';\n/**\n * Topic Alias receiving manager\n * This holds alias to topic map\n * @param {Number} [max] - topic alias maximum entries\n */\n\nfunction TopicAliasRecv(max) {\n  if (!(this instanceof TopicAliasRecv)) {\n    return new TopicAliasRecv(max);\n  }\n\n  this.aliasToTopic = {};\n  this.max = max;\n}\n/**\n * Insert or update topic - alias entry.\n * @param {String} [topic] - topic\n * @param {Number} [alias] - topic alias\n * @returns {Boolean} - if success return true otherwise false\n */\n\n\nTopicAliasRecv.prototype.put = function (topic, alias) {\n  if (alias === 0 || alias > this.max) {\n    return false;\n  }\n\n  this.aliasToTopic[alias] = topic;\n  this.length = Object.keys(this.aliasToTopic).length;\n  return true;\n};\n/**\n * Get topic by alias\n * @param {String} [topic] - topic\n * @returns {Number} - if mapped topic exists return topic alias, otherwise return undefined\n */\n\n\nTopicAliasRecv.prototype.getTopicByAlias = function (alias) {\n  return this.aliasToTopic[alias];\n};\n/**\n * Clear all entries\n */\n\n\nTopicAliasRecv.prototype.clear = function () {\n  this.aliasToTopic = {};\n};\n\nmodule.exports = TopicAliasRecv;","map":{"version":3,"names":["TopicAliasRecv","max","aliasToTopic","prototype","put","topic","alias","length","Object","keys","getTopicByAlias","clear","module","exports"],"sources":["C:/Users/Danil/Desktop/122/node_modules/mqtt/lib/topic-alias-recv.js"],"sourcesContent":["'use strict'\n\n/**\n * Topic Alias receiving manager\n * This holds alias to topic map\n * @param {Number} [max] - topic alias maximum entries\n */\nfunction TopicAliasRecv (max) {\n  if (!(this instanceof TopicAliasRecv)) {\n    return new TopicAliasRecv(max)\n  }\n  this.aliasToTopic = {}\n  this.max = max\n}\n\n/**\n * Insert or update topic - alias entry.\n * @param {String} [topic] - topic\n * @param {Number} [alias] - topic alias\n * @returns {Boolean} - if success return true otherwise false\n */\nTopicAliasRecv.prototype.put = function (topic, alias) {\n  if (alias === 0 || alias > this.max) {\n    return false\n  }\n  this.aliasToTopic[alias] = topic\n  this.length = Object.keys(this.aliasToTopic).length\n  return true\n}\n\n/**\n * Get topic by alias\n * @param {String} [topic] - topic\n * @returns {Number} - if mapped topic exists return topic alias, otherwise return undefined\n */\nTopicAliasRecv.prototype.getTopicByAlias = function (alias) {\n  return this.aliasToTopic[alias]\n}\n\n/**\n * Clear all entries\n */\nTopicAliasRecv.prototype.clear = function () {\n  this.aliasToTopic = {}\n}\n\nmodule.exports = TopicAliasRecv\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASA,cAAT,CAAyBC,GAAzB,EAA8B;EAC5B,IAAI,EAAE,gBAAgBD,cAAlB,CAAJ,EAAuC;IACrC,OAAO,IAAIA,cAAJ,CAAmBC,GAAnB,CAAP;EACD;;EACD,KAAKC,YAAL,GAAoB,EAApB;EACA,KAAKD,GAAL,GAAWA,GAAX;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAD,cAAc,CAACG,SAAf,CAAyBC,GAAzB,GAA+B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;EACrD,IAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,KAAKL,GAAhC,EAAqC;IACnC,OAAO,KAAP;EACD;;EACD,KAAKC,YAAL,CAAkBI,KAAlB,IAA2BD,KAA3B;EACA,KAAKE,MAAL,GAAcC,MAAM,CAACC,IAAP,CAAY,KAAKP,YAAjB,EAA+BK,MAA7C;EACA,OAAO,IAAP;AACD,CAPD;AASA;AACA;AACA;AACA;AACA;;;AACAP,cAAc,CAACG,SAAf,CAAyBO,eAAzB,GAA2C,UAAUJ,KAAV,EAAiB;EAC1D,OAAO,KAAKJ,YAAL,CAAkBI,KAAlB,CAAP;AACD,CAFD;AAIA;AACA;AACA;;;AACAN,cAAc,CAACG,SAAf,CAAyBQ,KAAzB,GAAiC,YAAY;EAC3C,KAAKT,YAAL,GAAoB,EAApB;AACD,CAFD;;AAIAU,MAAM,CAACC,OAAP,GAAiBb,cAAjB"},"metadata":{},"sourceType":"script"}