{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst Transform = require('readable-stream').Transform;\n\nconst duplexify = require('duplexify');\n/* global FileReader */\n\n\nlet my;\nlet proxy;\nlet stream;\nlet isInitialized = false;\n\nfunction buildProxy() {\n  const proxy = new Transform();\n\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next();\n      },\n      fail: function () {\n        next(new Error());\n      }\n    });\n  };\n\n  proxy._flush = function socketEnd(done) {\n    my.closeSocket({\n      success: function () {\n        done();\n      }\n    });\n  };\n\n  return proxy;\n}\n\nfunction setDefaultOpts(opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost';\n  }\n\n  if (!opts.path) {\n    opts.path = '/';\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {};\n  }\n}\n\nfunction buildUrl(opts, client) {\n  const protocol = opts.protocol === 'alis' ? 'wss' : 'ws';\n  let url = protocol + '://' + opts.hostname + opts.path;\n\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path;\n  }\n\n  if (typeof opts.transformWsUrl === 'function') {\n    url = opts.transformWsUrl(url, opts, client);\n  }\n\n  return url;\n}\n\nfunction bindEventHandler() {\n  if (isInitialized) return;\n  isInitialized = true;\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy);\n    stream.setWritable(proxy);\n    stream.emit('connect');\n  });\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      const buffer = Buffer.from(res.data, 'base64');\n      proxy.push(buffer);\n    } else {\n      const reader = new FileReader();\n      reader.addEventListener('load', function () {\n        let data = reader.result;\n        if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, 'utf8');\n        proxy.push(data);\n      });\n      reader.readAsArrayBuffer(res.data);\n    }\n  });\n  my.onSocketClose(function () {\n    stream.end();\n    stream.destroy();\n  });\n  my.onSocketError(function (res) {\n    stream.destroy(res);\n  });\n}\n\nfunction buildStream(client, opts) {\n  opts.hostname = opts.hostname || opts.host;\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.');\n  }\n\n  const websocketSubProtocol = opts.protocolId === 'MQIsdp' && opts.protocolVersion === 3 ? 'mqttv3.1' : 'mqtt';\n  setDefaultOpts(opts);\n  const url = buildUrl(opts, client);\n  my = opts.my;\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  });\n  proxy = buildProxy();\n  stream = duplexify.obj();\n  bindEventHandler();\n  return stream;\n}\n\nmodule.exports = buildStream;","map":{"version":3,"names":["Buffer","require","Transform","duplexify","my","proxy","stream","isInitialized","buildProxy","_write","chunk","encoding","next","sendSocketMessage","data","buffer","success","fail","Error","_flush","socketEnd","done","closeSocket","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onSocketOpen","setReadable","setWritable","emit","onSocketMessage","res","from","push","reader","FileReader","addEventListener","result","ArrayBuffer","readAsArrayBuffer","onSocketClose","end","destroy","onSocketError","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","connectSocket","protocols","obj","module","exports"],"sources":["C:/Users/Danil/Desktop/122/node_modules/mqtt/lib/connect/ali.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst Transform = require('readable-stream').Transform\nconst duplexify = require('duplexify')\n\n/* global FileReader */\nlet my\nlet proxy\nlet stream\nlet isInitialized = false\n\nfunction buildProxy () {\n  const proxy = new Transform()\n  proxy._write = function (chunk, encoding, next) {\n    my.sendSocketMessage({\n      data: chunk.buffer,\n      success: function () {\n        next()\n      },\n      fail: function () {\n        next(new Error())\n      }\n    })\n  }\n  proxy._flush = function socketEnd (done) {\n    my.closeSocket({\n      success: function () {\n        done()\n      }\n    })\n  }\n\n  return proxy\n}\n\nfunction setDefaultOpts (opts) {\n  if (!opts.hostname) {\n    opts.hostname = 'localhost'\n  }\n  if (!opts.path) {\n    opts.path = '/'\n  }\n\n  if (!opts.wsOptions) {\n    opts.wsOptions = {}\n  }\n}\n\nfunction buildUrl (opts, client) {\n  const protocol = opts.protocol === 'alis' ? 'wss' : 'ws'\n  let url = protocol + '://' + opts.hostname + opts.path\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\n  }\n  if (typeof (opts.transformWsUrl) === 'function') {\n    url = opts.transformWsUrl(url, opts, client)\n  }\n  return url\n}\n\nfunction bindEventHandler () {\n  if (isInitialized) return\n\n  isInitialized = true\n\n  my.onSocketOpen(function () {\n    stream.setReadable(proxy)\n    stream.setWritable(proxy)\n    stream.emit('connect')\n  })\n\n  my.onSocketMessage(function (res) {\n    if (typeof res.data === 'string') {\n      const buffer = Buffer.from(res.data, 'base64')\n      proxy.push(buffer)\n    } else {\n      const reader = new FileReader()\n      reader.addEventListener('load', function () {\n        let data = reader.result\n\n        if (data instanceof ArrayBuffer) data = Buffer.from(data)\n        else data = Buffer.from(data, 'utf8')\n        proxy.push(data)\n      })\n      reader.readAsArrayBuffer(res.data)\n    }\n  })\n\n  my.onSocketClose(function () {\n    stream.end()\n    stream.destroy()\n  })\n\n  my.onSocketError(function (res) {\n    stream.destroy(res)\n  })\n}\n\nfunction buildStream (client, opts) {\n  opts.hostname = opts.hostname || opts.host\n\n  if (!opts.hostname) {\n    throw new Error('Could not determine host. Specify host manually.')\n  }\n\n  const websocketSubProtocol =\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\n      ? 'mqttv3.1'\n      : 'mqtt'\n\n  setDefaultOpts(opts)\n\n  const url = buildUrl(opts, client)\n  my = opts.my\n  my.connectSocket({\n    url: url,\n    protocols: websocketSubProtocol\n  })\n\n  proxy = buildProxy()\n  stream = duplexify.obj()\n\n  bindEventHandler()\n\n  return stream\n}\n\nmodule.exports = buildStream\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}