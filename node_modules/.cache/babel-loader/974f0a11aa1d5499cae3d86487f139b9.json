{"ast":null,"code":"import { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\nimport throttle from 'lodash.throttle';\nimport ViewerOverlay from '../components/ViewerOverlay.vue';\nimport axios from 'axios';\nexport default {\n  name: 'ViewerView',\n  components: {\n    ViewerOverlay\n  },\n\n  data() {\n    return {\n      pointerStyle: {\n        left: null,\n        top: null\n      },\n      isOwner: true,\n      isWebinar: false,\n      ableToAct: true,\n      file: {}\n    };\n  },\n\n  computed: {\n    url() {\n      return this.$route.params.url;\n    },\n\n    //   case() {\n    //   return this.$store.state.case;\n    // },\n    // load() {\n    //     return loadJsonFileData()\n    // },\n    syncronizeEnabled() {\n      return this.viewer.compareMode && this.isSnapshot(this.viewer.firstFile) && this.isSnapshot(this.viewer.secondFile);\n    },\n\n    fullscreenEnabled() {\n      return document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled;\n    },\n\n    ...mapState(['viewer', 'stains']),\n    ...mapGetters(['fullscreen'])\n  },\n\n  mounted() {\n    this.loadBaseCase(); //       store.dispatch('loadCase').then(() => {\n    // });\n    // axios\n    //     .get('http://localhost:3000/data')\n    //     .then(({ data }) => {\n    //         this.file = Object.assign(data[0])\n    //         this.loadBaseCase(this.file)\n    //         console.log(this.file)\n    //     })\n    // .then(response => (this.viewer.firstFile = response.data && console.log(response.data)));\n\n    if (this.ableToAct) {\n      const cursorUpdate = throttle(e => {\n        const point = {\n          x: (e.pageX - (window.innerWidth - this.$refs.viewer.clientWidth)) / this.$refs.viewer.clientWidth,\n          y: e.pageY / window.innerHeight\n        };\n        this.$bus.$emit('sendMessage', {\n          action: 'cursor',\n          data: {\n            x: point.x,\n            y: point.y\n          }\n        });\n      }, 50);\n      this.$refs.viewer.addEventListener('mousemove', e => cursorUpdate(e));\n    }\n\n    this.$bus.$on('setCursor', this.busSetCursor);\n  },\n\n  beforeDestroy() {\n    this.$bus.$off('setCursor', this.busSetCursor);\n  },\n\n  methods: {\n    async loadBaseCase() {\n      await axios.get('http://localhost:3001/files', {\n        mode: 'no-cors'\n      }).then(({\n        data\n      }) => {\n        console.log(data, \"!!!\", data[0]);\n\n        for (let key in data[0].files[8]) {\n          this.file[key] = data[0].files[8][key];\n        }\n\n        this.$store.dispatch('loadFirstCase', {\n          data\n        });\n        this.file = data[0];\n      });\n    },\n\n    // ...mapMutations(['CASE_LOADED']),\n    toObject(arr) {\n      let rv = {};\n\n      for (let i = 0; i < arr.length; ++i) rv[i] = arr[i];\n\n      return rv;\n    },\n\n    isFile(file) {\n      return !!Object.keys(file).length;\n    },\n\n    isSnapshot(file) {\n      return this.isFile(file) && file.type === 'snapshot';\n    },\n\n    bubbleFilescrollSelect(data) {\n      this.$emit('selectViewerFile', data);\n    },\n\n    bubbleCloseViewer(data) {\n      this.$emit('closeViewer', data);\n    },\n\n    busSetCursor(msg) {\n      if (this.isWebinar && !this.ableToAct) {\n        this.pointerStyle.top = `${window.innerHeight * msg.y}px`;\n        this.pointerStyle.left = `${window.innerWidth - this.$refs.viewer.clientWidth + this.$refs.viewer.clientWidth * msg.x}px`;\n      }\n    },\n\n    loadJsonFileData() {\n      return this.$store.dispatch('loadJsonFileData');\n    },\n\n    ...mapActions(['toggleFullscreenPanel', 'loadCase', 'loadJsonFileData', 'loadFirstCase'])\n  }\n};","map":{"version":3,"mappings":"AAaA;AACA;AACA;AACA;AAEA;EACAA,kBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC;QACAC,UADA;QAEAC;MAFA,CADA;MAKAC,aALA;MAMAC,gBANA;MAOAC,eAPA;MAQAC;IARA;EAUA,CAhBA;;EAiBAC;IACAC;MACA;IACA,CAHA;;IAIA;IACA;IACA;IACA;IAEA;IACA;IACAC;MACA;IACA,CAbA;;IAcAC;MACA;IACA,CAhBA;;IAiBA,iCAjBA;IAkBA;EAlBA,CAjBA;;EAqCAC;IACA,oBADA,CAKA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAIA;;IAGA;MACA;QACA;UACAC,kGADA;UAEAC;QAFA;QAIA;UACAC,gBADA;UAEAf;YACAa,UADA;YAEAC;UAFA;QAFA;MAOA,CAZA,EAYA,EAZA;MAaA;IACA;;IAEA;EACA,CA7EA;;EA8EAE;IACA;EAEA,CAjFA;;EAkFAC;IACA;MACA,YACAC,GADA,CACA,6BADA,EACA;QACAC;MADA,CADA,EAIAC,IAJA,CAIA;QAAApB;MAAA;QACAqB;;QAEA;UACA;QACA;;QACA;UAAArB;QAAA;QACA;MACA,CAZA;IAcA,CAhBA;;IAiBA;IACAsB;MACA;;MACA,qCACAC;;MACA;IACA,CAvBA;;IAwBAC;MACA;IACA,CA1BA;;IA2BAC;MACA;IACA,CA7BA;;IA8BAC;MACA;IACA,CAhCA;;IAiCAC;MACA;IACA,CAnCA;;IAoCAC;MACA;QACA;QACA;MACA;IACA,CAzCA;;IA0CAC;MACA;IACA,CA5CA;;IA6CA;EA7CA;AAlFA","names":["name","components","ViewerOverlay","data","pointerStyle","left","top","isOwner","isWebinar","ableToAct","file","computed","url","syncronizeEnabled","fullscreenEnabled","mounted","x","y","action","beforeDestroy","methods","get","mode","then","console","toObject","rv","isFile","isSnapshot","bubbleFilescrollSelect","bubbleCloseViewer","busSetCursor","loadJsonFileData"],"sourceRoot":"src/views","sources":["ViewerView.vue"],"sourcesContent":["<template lang=\"html\">\r\n    <div id=\"viewer\" class=\"viewer\" ref=\"viewer\">\r\n        <div class=\"fullscreen-container\" @click=\"toggleFullscreenPanel\">\r\n            <!-- <button class=\"fullscreen-btn\"><i></i></button> -->\r\n        </div>\r\n        <button class=\"sync\" :class=\"{'syncronized': viewer.syncronized}\" v-if=\"syncronizeEnabled\" @click=\"ableToAct ? $emit('toggleSynchronize') : void 0\" :title=\"viewer.syncronized ? $t('case.viewer.desync') : $t('case.viewer.sync')\">sync</button>\r\n        <ViewerOverlay :file=\"file\" :primary=\"true\" v-show=\"file\" :isOwner=\"isOwner\" :isWebinar=\"isWebinar\" :ableToAct=\"ableToAct\" @selectViewerFile=\"bubbleFilescrollSelect\" @closeViewer=\"bubbleCloseViewer\" />\r\n        <ViewerOverlay :file=\"file\" :primary=\"false\" v-if=\"viewer.compareMode\" :isOwner=\"isOwner\" :isWebinar=\"isWebinar\" :ableToAct=\"ableToAct\" @selectViewerFile=\"bubbleFilescrollSelect\" @closeViewer=\"bubbleCloseViewer\" />\r\n        <div v-if=\"isWebinar && !ableToAct\" class=\"cursor\" :style=\"pointerStyle\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex'\r\nimport throttle from 'lodash.throttle'\r\nimport ViewerOverlay from '../components/ViewerOverlay.vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'ViewerView',\r\n    components: {\r\n        ViewerOverlay\r\n    },\r\n    data() {\r\n        return {\r\n            pointerStyle: {\r\n                left: null,\r\n                top: null\r\n            },\r\n            isOwner: true,\r\n            isWebinar: false,\r\n            ableToAct: true,\r\n            file: {}\r\n        }\r\n    },\r\n    computed: {\r\n        url(){\r\n            return this.$route.params.url\r\n        },\r\n        //   case() {\r\n        //   return this.$store.state.case;\r\n        // },\r\n        // load() {\r\n\r\n        //     return loadJsonFileData()\r\n        // },\r\n        syncronizeEnabled() {\r\n            return this.viewer.compareMode && this.isSnapshot(this.viewer.firstFile) && this.isSnapshot(this.viewer.secondFile)\r\n        },\r\n        fullscreenEnabled() {\r\n            return document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled\r\n        },\r\n        ...mapState(['viewer', 'stains']),\r\n        ...mapGetters(['fullscreen'])\r\n    },\r\n    mounted() {\r\n        this.loadBaseCase()\r\n        \r\n\r\n\r\n        //       store.dispatch('loadCase').then(() => {\r\n\r\n        // });\r\n        // axios\r\n        //     .get('http://localhost:3000/data')\r\n        //     .then(({ data }) => {\r\n\r\n        //         this.file = Object.assign(data[0])\r\n        //         this.loadBaseCase(this.file)\r\n        //         console.log(this.file)\r\n        //     })\r\n\r\n\r\n\r\n        // .then(response => (this.viewer.firstFile = response.data && console.log(response.data)));\r\n\r\n\r\n        if (this.ableToAct) {\r\n            const cursorUpdate = throttle(e => {\r\n                const point = {\r\n                    x: (e.pageX - (window.innerWidth - this.$refs.viewer.clientWidth)) / this.$refs.viewer.clientWidth,\r\n                    y: e.pageY / window.innerHeight\r\n                }\r\n                this.$bus.$emit('sendMessage', {\r\n                    action: 'cursor',\r\n                    data: {\r\n                        x: point.x,\r\n                        y: point.y\r\n                    }\r\n                })\r\n            }, 50)\r\n            this.$refs.viewer.addEventListener('mousemove', e => cursorUpdate(e))\r\n        }\r\n\r\n        this.$bus.$on('setCursor', this.busSetCursor)\r\n    },\r\n    beforeDestroy() {\r\n        this.$bus.$off('setCursor', this.busSetCursor)\r\n\r\n    },\r\n    methods: {\r\n        async loadBaseCase() {\r\n            await axios\r\n                .get('http://localhost:3001/files', {\r\n                      mode: 'no-cors'\r\n                })\r\n                .then(({ data }) => {\r\n                    console.log(data, \"!!!\", data[0])\r\n\r\n                    for (let key in data[0].files[8]) {\r\n                        this.file[key] = data[0].files[8][key];\r\n                    }\r\n                    this.$store.dispatch('loadFirstCase', { data })\r\n                    this.file = data[0]\r\n                })\r\n\r\n        },\r\n        // ...mapMutations(['CASE_LOADED']),\r\n        toObject(arr) {\r\n            let rv = {};\r\n            for (let i = 0; i < arr.length; ++i)\r\n                rv[i] = arr[i];\r\n            return rv;\r\n        },\r\n        isFile(file) {\r\n            return !!Object.keys(file).length\r\n        },\r\n        isSnapshot(file) {\r\n            return this.isFile(file) && file.type === 'snapshot'\r\n        },\r\n        bubbleFilescrollSelect(data) {\r\n            this.$emit('selectViewerFile', data)\r\n        },\r\n        bubbleCloseViewer(data) {\r\n            this.$emit('closeViewer', data)\r\n        },\r\n        busSetCursor(msg) {\r\n            if (this.isWebinar && !this.ableToAct) {\r\n                this.pointerStyle.top = `${window.innerHeight * msg.y}px`\r\n                this.pointerStyle.left = `${window.innerWidth - this.$refs.viewer.clientWidth + (this.$refs.viewer.clientWidth * msg.x)}px`\r\n            }\r\n        },\r\n        loadJsonFileData() {\r\n            return this.$store.dispatch('loadJsonFileData');\r\n        },\r\n        ...mapActions(['toggleFullscreenPanel', 'loadCase', 'loadJsonFileData', 'loadFirstCase'])\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.viewer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    z-index: 11;\r\n    @media (max-width: 500px) and (orientation: portrait) {\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n.fullscreen-container {\r\n    position: absolute;\r\n    width: 40px;\r\n    height: calc(100% - 80px);\r\n    left: 0;\r\n    top: 0;\r\n    cursor: pointer;\r\n    z-index: 10;\r\n    @media (max-width: 600px) {\r\n        width: 30px;\r\n    }\r\n    & .fullscreen-btn {\r\n        position: absolute;\r\n        top: calc(50% + 40px);\r\n        left: 0px;\r\n        transform: translate(-50%, -50%);\r\n        width: 80px;\r\n        height: 80px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.2);\r\n        transition: background-color .2s;\r\n        & i {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(40%, -50%);\r\n            width: 20px;\r\n            height: 15px;\r\n            display: inline-block; //   background-image: url(/images/button_hover.png);\r\n            background-position: 0px;\r\n            background: darkgreen;\r\n        }\r\n        @media (max-width: 600px) {\r\n            width: 60px;\r\n            height: 60px;\r\n            & i {\r\n                transform: translate(15%, -50%);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        & .fullscreen-btn {\r\n            background-color: rgb(8, 8, 56);\r\n        }\r\n        & i {\r\n            background-position: -20px;\r\n        }\r\n    }\r\n}\r\n\r\n@media (max-width: 500px) {\r\n    .viewer {\r\n        position: fixed;\r\n    }\r\n    .fullscreen {\r\n        display: none;\r\n    }\r\n}\r\n\r\nbutton {\r\n    background-color: transparent;\r\n    background-repeat: no-repeat;\r\n    background-position: 0 0;\r\n}\r\n\r\n.sync {\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n    top: 115px;\r\n    z-index: 10; //   background-image: url(/static/icons/synchronize_not.svg);\r\n    background-position: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: #fff;\r\n    border: 2px solid blue;\r\n    border-radius: 50%;\r\n    @media (max-width: 500px) and (orientation: portrait) {\r\n        top: 50%;\r\n    }\r\n    &:hover {\r\nbackground: darkgoldenrod;\r\n        border-color: blue;\r\n    }\r\n    &:active {\r\n        border-color: rgb(43, 43, 132);\r\n    }\r\n    &.syncronized {\r\n        // background-image: url(/static/icons/synchronize_active.svg);\r\n        background-color: rgb(75, 75, 240);\r\n        border-color: rgb(58, 58, 238);\r\n        &:hover {\r\n            //   background-image: url(/static/icons/synchronize_not.svg);\r\n            background: grey;\r\n            background-color: #fff;\r\n        }\r\n        &:active {\r\n            border-color: rgb(113, 113, 233);\r\n        }\r\n    }\r\n}\r\n\r\n.cursor {\r\n    width: 32px;\r\n    height: 32px; //   background-image: url(/static/icons/pointer.svg);\r\n    position: fixed;\r\n    transition: top 50ms, left 50ms;\r\n    z-index: 999;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}