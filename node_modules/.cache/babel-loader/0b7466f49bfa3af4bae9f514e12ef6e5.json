{"ast":null,"code":"\"use strict\";\n\nconst produceXMLSerialization = require(\"w3c-xmlserializer\");\n\nconst parse5 = require(\"parse5\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst utils = require(\"../generated/utils\");\n\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nmodule.exports.fragmentSerialization = (node, {\n  outer,\n  requireWellFormed,\n  globalObject\n}) => {\n  const contextDocument = node.nodeType === NODE_TYPE.DOCUMENT_NODE ? node : node._ownerDocument;\n\n  if (contextDocument._parsingMode === \"html\") {\n    const config = { ...contextDocument._parseOptions,\n      treeAdapter\n    };\n    return outer ? parse5.serializeOuter(node, config) : parse5.serialize(node, config);\n  }\n\n  const childNodes = outer ? [node] : node.childNodes;\n\n  try {\n    let serialized = \"\";\n\n    for (let i = 0; i < childNodes.length; ++i) {\n      serialized += produceXMLSerialization(utils.wrapperForImpl(childNodes[i] || childNodes.item(i)), {\n        requireWellFormed\n      });\n    }\n\n    return serialized;\n  } catch (e) {\n    throw DOMException.create(globalObject, [e.message, \"InvalidStateError\"]);\n  }\n};","map":{"version":3,"names":["produceXMLSerialization","require","parse5","DOMException","utils","treeAdapter","NODE_TYPE","module","exports","fragmentSerialization","node","outer","requireWellFormed","globalObject","contextDocument","nodeType","DOCUMENT_NODE","_ownerDocument","_parsingMode","config","_parseOptions","serializeOuter","serialize","childNodes","serialized","i","length","wrapperForImpl","item","e","create","message"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/domparsing/serialization.js"],"sourcesContent":["\"use strict\";\n\nconst produceXMLSerialization = require(\"w3c-xmlserializer\");\nconst parse5 = require(\"parse5\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst utils = require(\"../generated/utils\");\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\nconst NODE_TYPE = require(\"../node-type\");\n\nmodule.exports.fragmentSerialization = (node, { outer, requireWellFormed, globalObject }) => {\n  const contextDocument =\n    node.nodeType === NODE_TYPE.DOCUMENT_NODE ? node : node._ownerDocument;\n  if (contextDocument._parsingMode === \"html\") {\n    const config = {\n      ...contextDocument._parseOptions,\n      treeAdapter\n    };\n    return outer ? parse5.serializeOuter(node, config) : parse5.serialize(node, config);\n  }\n\n  const childNodes = outer ? [node] : node.childNodes;\n\n  try {\n    let serialized = \"\";\n    for (let i = 0; i < childNodes.length; ++i) {\n      serialized += produceXMLSerialization(\n        utils.wrapperForImpl(childNodes[i] || childNodes.item(i)),\n        { requireWellFormed }\n      );\n    }\n    return serialized;\n  } catch (e) {\n    throw DOMException.create(globalObject, [e.message, \"InvalidStateError\"]);\n  }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,mBAAD,CAAvC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,gCAAD,CAA5B;;AAEA,MAAMG,KAAK,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,gCAAD,CAA3B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,cAAD,CAAzB;;AAEAM,MAAM,CAACC,OAAP,CAAeC,qBAAf,GAAuC,CAACC,IAAD,EAAO;EAAEC,KAAF;EAASC,iBAAT;EAA4BC;AAA5B,CAAP,KAAsD;EAC3F,MAAMC,eAAe,GACnBJ,IAAI,CAACK,QAAL,KAAkBT,SAAS,CAACU,aAA5B,GAA4CN,IAA5C,GAAmDA,IAAI,CAACO,cAD1D;;EAEA,IAAIH,eAAe,CAACI,YAAhB,KAAiC,MAArC,EAA6C;IAC3C,MAAMC,MAAM,GAAG,EACb,GAAGL,eAAe,CAACM,aADN;MAEbf;IAFa,CAAf;IAIA,OAAOM,KAAK,GAAGT,MAAM,CAACmB,cAAP,CAAsBX,IAAtB,EAA4BS,MAA5B,CAAH,GAAyCjB,MAAM,CAACoB,SAAP,CAAiBZ,IAAjB,EAAuBS,MAAvB,CAArD;EACD;;EAED,MAAMI,UAAU,GAAGZ,KAAK,GAAG,CAACD,IAAD,CAAH,GAAYA,IAAI,CAACa,UAAzC;;EAEA,IAAI;IACF,IAAIC,UAAU,GAAG,EAAjB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;MAC1CD,UAAU,IAAIxB,uBAAuB,CACnCI,KAAK,CAACuB,cAAN,CAAqBJ,UAAU,CAACE,CAAD,CAAV,IAAiBF,UAAU,CAACK,IAAX,CAAgBH,CAAhB,CAAtC,CADmC,EAEnC;QAAEb;MAAF,CAFmC,CAArC;IAID;;IACD,OAAOY,UAAP;EACD,CATD,CASE,OAAOK,CAAP,EAAU;IACV,MAAM1B,YAAY,CAAC2B,MAAb,CAAoBjB,YAApB,EAAkC,CAACgB,CAAC,CAACE,OAAH,EAAY,mBAAZ,CAAlC,CAAN;EACD;AACF,CAzBD"},"metadata":{},"sourceType":"script"}