{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst Blob = require(\"./Blob.js\");\n\nconst FilePropertyBag = require(\"./FilePropertyBag.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"File\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(`${context} is not of type 'File'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"File\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  Blob._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  class File extends globalObject.Blob {\n    constructor(fileBits, fileName) {\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n\n        if (!utils.isObject(curArg)) {\n          throw new globalObject.TypeError(\"Failed to construct 'File': parameter 1\" + \" is not an iterable object.\");\n        } else {\n          const V = [];\n          const tmp = curArg;\n\n          for (let nextItem of tmp) {\n            if (Blob.is(nextItem)) {\n              nextItem = utils.implForWrapper(nextItem);\n            } else if (utils.isArrayBuffer(nextItem)) {} else if (ArrayBuffer.isView(nextItem)) {} else {\n              nextItem = conversions[\"USVString\"](nextItem, {\n                context: \"Failed to construct 'File': parameter 1\" + \"'s element\",\n                globals: globalObject\n              });\n            }\n\n            V.push(nextItem);\n          }\n\n          curArg = V;\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'File': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = FilePropertyBag.convert(globalObject, curArg, {\n          context: \"Failed to construct 'File': parameter 3\"\n        });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get name' called on an object that is not a valid instance of File.\");\n      }\n\n      return esValue[implSymbol][\"name\"];\n    }\n\n    get lastModified() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get lastModified' called on an object that is not a valid instance of File.\");\n      }\n\n      return esValue[implSymbol][\"lastModified\"];\n    }\n\n  }\n\n  Object.defineProperties(File.prototype, {\n    name: {\n      enumerable: true\n    },\n    lastModified: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"File\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = File;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: File\n  });\n};\n\nconst Impl = require(\"../file-api/File-impl.js\");","map":{"version":3,"names":["conversions","require","utils","Blob","FilePropertyBag","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","implForWrapper","TypeError","makeWrapper","newTarget","proto","undefined","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","File","constructor","fileBits","fileName","arguments","length","args","curArg","V","tmp","nextItem","isArrayBuffer","ArrayBuffer","isView","globals","push","target","name","esValue","lastModified","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["C:/Users/Danil/Desktop/project1/node_modules/jsdom/lib/jsdom/living/generated/File.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Blob = require(\"./Blob.js\");\nconst FilePropertyBag = require(\"./FilePropertyBag.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"File\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'File'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"File\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  Blob._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class File extends globalObject.Blob {\n    constructor(fileBits, fileName) {\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (!utils.isObject(curArg)) {\n          throw new globalObject.TypeError(\"Failed to construct 'File': parameter 1\" + \" is not an iterable object.\");\n        } else {\n          const V = [];\n          const tmp = curArg;\n          for (let nextItem of tmp) {\n            if (Blob.is(nextItem)) {\n              nextItem = utils.implForWrapper(nextItem);\n            } else if (utils.isArrayBuffer(nextItem)) {\n            } else if (ArrayBuffer.isView(nextItem)) {\n            } else {\n              nextItem = conversions[\"USVString\"](nextItem, {\n                context: \"Failed to construct 'File': parameter 1\" + \"'s element\",\n                globals: globalObject\n              });\n            }\n            V.push(nextItem);\n          }\n          curArg = V;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'File': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = FilePropertyBag.convert(globalObject, curArg, { context: \"Failed to construct 'File': parameter 3\" });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get name' called on an object that is not a valid instance of File.\");\n      }\n\n      return esValue[implSymbol][\"name\"];\n    }\n\n    get lastModified() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get lastModified' called on an object that is not a valid instance of File.\"\n        );\n      }\n\n      return esValue[implSymbol][\"lastModified\"];\n    }\n  }\n  Object.defineProperties(File.prototype, {\n    name: { enumerable: true },\n    lastModified: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"File\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = File;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: File\n  });\n};\n\nconst Impl = require(\"../file-api/File-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}