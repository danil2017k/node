{"ast":null,"code":"/**\n * OpenSeadragon canvas Overlay plugin based on svg overlay plugin and fabric.js\n * @version 0.0.2\n */\nmodule.exports = function initFabricJSOverlay(OpenSeadragon, fabric) {\n  if (!OpenSeadragon) {\n    console.error(\"[openseadragon-canvas-overlay] requires OpenSeadragon\");\n    return;\n  }\n  /**\n   * Adds fabric.js overlay capability to your OpenSeadragon Viewer\n   *\n   * @param {Object} options\n   *     Allows configurable properties to be entirely specified by passing\n   *     an options object to the constructor.\n   *\n   * @param {Number} options.scale\n   *     Fabric 'virtual' canvas size, for creating objects\n   *\n   * @returns {Overlay}\n   */\n\n\n  OpenSeadragon.Viewer.prototype.fabricjsOverlay = function (options) {\n    this._fabricjsOverlayInfo = new Overlay(this, options.static);\n\n    if (options && options.scale) {\n      this._fabricjsOverlayInfo._scale = options.scale; // arbitrary scale for created fabric canvas\n    } else {\n      this._fabricjsOverlayInfo._scale = 1000;\n    }\n\n    return this._fabricjsOverlayInfo;\n  };\n  /**\n   * Static counter for multiple overlays differentiation\n   * @type {function(): number}\n   */\n\n\n  let counter = function () {\n    let i = 1;\n    return function () {\n      return i++;\n    };\n  }();\n  /**\n   * Overlay object\n   * @param viewer\n   * @constructor\n   */\n\n\n  let Overlay = function (viewer, staticCanvas) {\n    let self = this;\n    this._viewer = viewer;\n    this._containerWidth = 0;\n    this._containerHeight = 0;\n    this._canvasdiv = document.createElement(\"div\");\n    this._canvasdiv.style.position = \"absolute\";\n    this._canvasdiv.style.left = \"0px\";\n    this._canvasdiv.style.top = \"0px\";\n    this._canvasdiv.style.width = \"100%\";\n    this._canvasdiv.style.height = \"100%\";\n\n    this._viewer.canvas.appendChild(this._canvasdiv);\n\n    this._canvas = document.createElement(\"canvas\");\n    this._id = \"osd-overlaycanvas-\" + counter();\n\n    this._canvas.setAttribute(\"id\", this._id);\n\n    this._canvasdiv.appendChild(this._canvas);\n\n    this.resize(); // make the canvas static if specified, ordinary otherwise\n\n    if (staticCanvas) {\n      this._fabricCanvas = new fabric.StaticCanvas(this._canvas);\n    } else {\n      this._fabricCanvas = new fabric.Canvas(this._canvas);\n    } // Disable fabric selection because default click is tracked by OSD\n\n\n    this._fabricCanvas.selection = false;\n    /**\n     * Prevent OSD mousedown on fabric objects\n     */\n\n    this._fabricCanvas.on(\"mouse:down\", function (options) {\n      if (options.target) {\n        options.e.preventDefaultAction = true;\n        options.e.preventDefault();\n        options.e.stopPropagation();\n      }\n    });\n    /**\n     * Prevent OSD mouseup on fabric objects\n     */\n\n\n    this._fabricCanvas.on(\"mouse:up\", function (options) {\n      if (options.target) {\n        options.e.preventDefaultAction = true;\n        options.e.preventDefault();\n        options.e.stopPropagation();\n      }\n    });\n    /**\n     * Update viewport\n     */\n\n\n    this._viewer.addHandler(\"update-viewport\", function () {\n      self.resize();\n      self.resizeCanvas();\n      self.render();\n    });\n    /**\n     * Resize the fabric.js overlay when the viewer or window changes size\n     */\n\n\n    this._viewer.addHandler(\"open\", function () {\n      self.resize();\n      self.resizeCanvas();\n    });\n\n    window.addEventListener(\"resize\", function () {\n      self.resize();\n      self.resizeCanvas();\n    });\n  };\n  /**\n   * Overlay prototype\n   * {{canvas: (function(): HTMLCanvasElement),\n   * fabricCanvas: (function(): *),\n   * clear: Overlay.clear,\n   * resizeCanvas: Overlay.resizeCanvas,\n   * resize: Overlay.resize,\n   * render: Overlay.render}}\n   */\n\n\n  Overlay.prototype = {\n    // ----------\n    canvas: function () {\n      return this._canvas;\n    },\n    fabricCanvas: function () {\n      // Returns fabric.js canvas that you can add elements to\n      return this._fabricCanvas;\n    },\n    // ----------\n    clear: function () {\n      this._fabricCanvas.clear();\n    },\n    render: function () {\n      this._fabricCanvas.renderAll();\n    },\n    // ----------\n    resize: function () {\n      if (this._containerWidth !== this._viewer.container.clientWidth) {\n        this._containerWidth = this._viewer.container.clientWidth;\n\n        this._canvasdiv.setAttribute(\"width\", this._containerWidth);\n\n        this._canvas.setAttribute(\"width\", this._containerWidth);\n      }\n\n      if (this._containerHeight !== this._viewer.container.clientHeight) {\n        this._containerHeight = this._viewer.container.clientHeight;\n\n        this._canvasdiv.setAttribute(\"height\", this._containerHeight);\n\n        this._canvas.setAttribute(\"height\", this._containerHeight);\n      }\n    },\n    resizeCanvas: function () {\n      let origin = new OpenSeadragon.Point(0, 0);\n\n      let viewportZoom = this._viewer.viewport.getZoom(true);\n\n      let viewportToImageZoom = this._viewer.viewport.viewportToImageZoom(viewportZoom);\n\n      this._fabricCanvas.setWidth(this._containerWidth);\n\n      this._fabricCanvas.setHeight(this._containerHeight);\n      /** Original package way of syncing OSD zoom to Fabric zoom */\n      //this._fabricCanvas.setZoom(viewportZoom);\n\n      /** Alternative way of syncing OSD zoom to Fabric zoom, which keeps horizontal window resizing in sync */\n\n\n      this._fabricCanvas.setZoom(viewportToImageZoom);\n\n      let viewportWindowPoint = this._viewer.viewport.viewportToWindowCoordinates(origin);\n\n      let x = Math.round(viewportWindowPoint.x);\n      let y = Math.round(viewportWindowPoint.y);\n\n      let canvasOffset = this._canvasdiv.getBoundingClientRect();\n\n      let pageScroll = OpenSeadragon.getPageScroll();\n\n      this._fabricCanvas.absolutePan(new fabric.Point(canvasOffset.left - x + pageScroll.x, canvasOffset.top - y + pageScroll.y));\n    }\n  };\n};","map":{"version":3,"names":["module","exports","initFabricJSOverlay","OpenSeadragon","fabric","console","error","Viewer","prototype","fabricjsOverlay","options","_fabricjsOverlayInfo","Overlay","static","scale","_scale","counter","i","viewer","staticCanvas","self","_viewer","_containerWidth","_containerHeight","_canvasdiv","document","createElement","style","position","left","top","width","height","canvas","appendChild","_canvas","_id","setAttribute","resize","_fabricCanvas","StaticCanvas","Canvas","selection","on","target","e","preventDefaultAction","preventDefault","stopPropagation","addHandler","resizeCanvas","render","window","addEventListener","fabricCanvas","clear","renderAll","container","clientWidth","clientHeight","origin","Point","viewportZoom","viewport","getZoom","viewportToImageZoom","setWidth","setHeight","setZoom","viewportWindowPoint","viewportToWindowCoordinates","x","Math","round","y","canvasOffset","getBoundingClientRect","pageScroll","getPageScroll","absolutePan"],"sources":["C:/Users/Danil/Desktop/project1/node_modules/@adamjarling/openseadragon-fabricjs-overlay/openseadragon-fabricjs-overlay.js"],"sourcesContent":["/**\n * OpenSeadragon canvas Overlay plugin based on svg overlay plugin and fabric.js\n * @version 0.0.2\n */\nmodule.exports = function initFabricJSOverlay(OpenSeadragon, fabric) {\n  if (!OpenSeadragon) {\n    console.error(\"[openseadragon-canvas-overlay] requires OpenSeadragon\");\n    return;\n  }\n\n  /**\n   * Adds fabric.js overlay capability to your OpenSeadragon Viewer\n   *\n   * @param {Object} options\n   *     Allows configurable properties to be entirely specified by passing\n   *     an options object to the constructor.\n   *\n   * @param {Number} options.scale\n   *     Fabric 'virtual' canvas size, for creating objects\n   *\n   * @returns {Overlay}\n   */\n  OpenSeadragon.Viewer.prototype.fabricjsOverlay = function (options) {\n    this._fabricjsOverlayInfo = new Overlay(this, options.static);\n    if (options && options.scale) {\n      this._fabricjsOverlayInfo._scale = options.scale; // arbitrary scale for created fabric canvas\n    } else {\n      this._fabricjsOverlayInfo._scale = 1000;\n    }\n\n    return this._fabricjsOverlayInfo;\n  };\n\n  /**\n   * Static counter for multiple overlays differentiation\n   * @type {function(): number}\n   */\n  let counter = (function () {\n    let i = 1;\n\n    return function () {\n      return i++;\n    };\n  })();\n\n  /**\n   * Overlay object\n   * @param viewer\n   * @constructor\n   */\n  let Overlay = function (viewer, staticCanvas) {\n    let self = this;\n\n    this._viewer = viewer;\n\n    this._containerWidth = 0;\n    this._containerHeight = 0;\n\n    this._canvasdiv = document.createElement(\"div\");\n    this._canvasdiv.style.position = \"absolute\";\n    this._canvasdiv.style.left = \"0px\";\n    this._canvasdiv.style.top = \"0px\";\n    this._canvasdiv.style.width = \"100%\";\n    this._canvasdiv.style.height = \"100%\";\n    this._viewer.canvas.appendChild(this._canvasdiv);\n\n    this._canvas = document.createElement(\"canvas\");\n\n    this._id = \"osd-overlaycanvas-\" + counter();\n    this._canvas.setAttribute(\"id\", this._id);\n    this._canvasdiv.appendChild(this._canvas);\n    this.resize();\n\n    // make the canvas static if specified, ordinary otherwise\n    if (staticCanvas) {\n      this._fabricCanvas = new fabric.StaticCanvas(this._canvas);\n    } else {\n      this._fabricCanvas = new fabric.Canvas(this._canvas);\n    }\n\n    // Disable fabric selection because default click is tracked by OSD\n    this._fabricCanvas.selection = false;\n\n    /**\n     * Prevent OSD mousedown on fabric objects\n     */\n    this._fabricCanvas.on(\"mouse:down\", function (options) {\n      if (options.target) {\n        options.e.preventDefaultAction = true;\n        options.e.preventDefault();\n        options.e.stopPropagation();\n      }\n    });\n\n    /**\n     * Prevent OSD mouseup on fabric objects\n     */\n    this._fabricCanvas.on(\"mouse:up\", function (options) {\n      if (options.target) {\n        options.e.preventDefaultAction = true;\n        options.e.preventDefault();\n        options.e.stopPropagation();\n      }\n    });\n\n    /**\n     * Update viewport\n     */\n    this._viewer.addHandler(\"update-viewport\", function () {\n      self.resize();\n      self.resizeCanvas();\n      self.render();\n    });\n\n    /**\n     * Resize the fabric.js overlay when the viewer or window changes size\n     */\n    this._viewer.addHandler(\"open\", function () {\n      self.resize();\n      self.resizeCanvas();\n    });\n    window.addEventListener(\"resize\", function () {\n      self.resize();\n      self.resizeCanvas();\n    });\n  };\n\n  /**\n   * Overlay prototype\n   * {{canvas: (function(): HTMLCanvasElement),\n   * fabricCanvas: (function(): *),\n   * clear: Overlay.clear,\n   * resizeCanvas: Overlay.resizeCanvas,\n   * resize: Overlay.resize,\n   * render: Overlay.render}}\n   */\n  Overlay.prototype = {\n    // ----------\n    canvas: function () {\n      return this._canvas;\n    },\n    fabricCanvas: function () {\n      // Returns fabric.js canvas that you can add elements to\n      return this._fabricCanvas;\n    },\n    // ----------\n    clear: function () {\n      this._fabricCanvas.clear();\n    },\n    render: function () {\n      this._fabricCanvas.renderAll();\n    },\n    // ----------\n    resize: function () {\n      if (this._containerWidth !== this._viewer.container.clientWidth) {\n        this._containerWidth = this._viewer.container.clientWidth;\n        this._canvasdiv.setAttribute(\"width\", this._containerWidth);\n        this._canvas.setAttribute(\"width\", this._containerWidth);\n      }\n\n      if (this._containerHeight !== this._viewer.container.clientHeight) {\n        this._containerHeight = this._viewer.container.clientHeight;\n        this._canvasdiv.setAttribute(\"height\", this._containerHeight);\n        this._canvas.setAttribute(\"height\", this._containerHeight);\n      }\n    },\n    resizeCanvas: function () {\n      let origin = new OpenSeadragon.Point(0, 0);\n      let viewportZoom = this._viewer.viewport.getZoom(true);\n      let viewportToImageZoom =\n        this._viewer.viewport.viewportToImageZoom(viewportZoom);\n      this._fabricCanvas.setWidth(this._containerWidth);\n      this._fabricCanvas.setHeight(this._containerHeight);\n\n      /** Original package way of syncing OSD zoom to Fabric zoom */\n      //this._fabricCanvas.setZoom(viewportZoom);\n\n      /** Alternative way of syncing OSD zoom to Fabric zoom, which keeps horizontal window resizing in sync */\n      this._fabricCanvas.setZoom(viewportToImageZoom);\n\n      let viewportWindowPoint =\n        this._viewer.viewport.viewportToWindowCoordinates(origin);\n      let x = Math.round(viewportWindowPoint.x);\n      let y = Math.round(viewportWindowPoint.y);\n      let canvasOffset = this._canvasdiv.getBoundingClientRect();\n\n      let pageScroll = OpenSeadragon.getPageScroll();\n\n      this._fabricCanvas.absolutePan(\n        new fabric.Point(\n          canvasOffset.left - x + pageScroll.x,\n          canvasOffset.top - y + pageScroll.y\n        )\n      );\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}