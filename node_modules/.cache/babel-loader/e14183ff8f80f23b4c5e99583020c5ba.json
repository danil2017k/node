{"ast":null,"code":"\"use strict\";\n\nconst enumerationValues = new Set([\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"]);\nexports.enumerationValues = enumerationValues;\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  const string = `${value}`;\n\n  if (!enumerationValues.has(string)) {\n    throw new globalObject.TypeError(`${context} '${string}' is not a valid enumeration value for TextTrackKind`);\n  }\n\n  return string;\n};","map":{"version":3,"names":["enumerationValues","Set","exports","convert","globalObject","value","context","string","has","TypeError"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/generated/TextTrackKind.js"],"sourcesContent":["\"use strict\";\n\nconst enumerationValues = new Set([\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"]);\nexports.enumerationValues = enumerationValues;\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  const string = `${value}`;\n  if (!enumerationValues.has(string)) {\n    throw new globalObject.TypeError(`${context} '${string}' is not a valid enumeration value for TextTrackKind`);\n  }\n  return string;\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,WAAD,EAAc,UAAd,EAA0B,cAA1B,EAA0C,UAA1C,EAAsD,UAAtD,CAAR,CAA1B;AACAC,OAAO,CAACF,iBAAR,GAA4BA,iBAA5B;;AAEAE,OAAO,CAACC,OAAR,GAAkB,CAACC,YAAD,EAAeC,KAAf,EAAsB;EAAEC,OAAO,GAAG;AAAZ,IAAqC,EAA3D,KAAkE;EAClF,MAAMC,MAAM,GAAI,GAAEF,KAAM,EAAxB;;EACA,IAAI,CAACL,iBAAiB,CAACQ,GAAlB,CAAsBD,MAAtB,CAAL,EAAoC;IAClC,MAAM,IAAIH,YAAY,CAACK,SAAjB,CAA4B,GAAEH,OAAQ,KAAIC,MAAO,sDAAjD,CAAN;EACD;;EACD,OAAOA,MAAP;AACD,CAND"},"metadata":{},"sourceType":"script"}