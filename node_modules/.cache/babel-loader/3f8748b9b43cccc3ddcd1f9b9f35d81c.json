{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport ViewerView from '../views/ViewerView.vue';\nimport store from '../store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: ViewerView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import(\n  /* webpackChunkName: \"about\" */\n  '../views/AboutView.vue')\n}, {\n  name: 'viewer',\n  path: '/viewer/:name/:n',\n  component: ViewerView,\n  // children: [\n  // UserHome will be rendered inside User's <router-view>\n  // when /user/:id is matched\n  // { path: '', component: UserHome },\n  // UserProfile will be rendered inside User's <router-view>\n  // when /user/:id/profile is matched\n  // { path: 'id/:id_n', component: ViewerView }],\n  beforeEnter: (to, from, next) => {\n    store.dispatch('setContentType', 'info');\n    store.dispatch('loadCase', {\n      type: 'puzzles',\n      // typeId: to.params.id,\n      id: to.params.name\n    }); // store.dispatch('setPuzzleId', to.params.name)\n\n    store.dispatch('loadSpecializations');\n    store.dispatch('loadCaseResources');\n    next();\n  },\n\n  beforeRouteUpdate(to, from, next) {\n    ViewerView.OpenSeadragon({\n      tileSources: `${to.params.name}.dzi`\n    });\n    setTimeout(() => {\n      ViewerView.OpenSeadragon.Viewer.forceRedraw();\n    }, '1000'); // location.reload()\n    // ViewerView.OpenSeadragon\n    // обрабатываем изменение параметров маршрута...\n    // не забываем вызвать next()\n\n    next();\n  }\n\n} // { path: '/viewer/:id/:name', component: ViewerView }\n];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","ViewerView","store","use","routes","path","name","component","beforeEnter","to","from","next","dispatch","type","id","params","beforeRouteUpdate","OpenSeadragon","tileSources","setTimeout","Viewer","forceRedraw","router","mode","base","process","env","BASE_URL"],"sources":["C:/Users/Danil/Desktop/122/src/router/index.js"],"sourcesContent":["\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport ViewerView from '../views/ViewerView.vue'\r\nimport store from '../store'\r\n\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: ViewerView\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'about',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\r\n  },\r\n  {\r\n  name: 'viewer',\r\n    path: '/viewer/:name/:n',\r\n    component: ViewerView,\r\n    // children: [\r\n      // UserHome will be rendered inside User's <router-view>\r\n      // when /user/:id is matched\r\n      // { path: '', component: UserHome },\r\n      \r\n      // UserProfile will be rendered inside User's <router-view>\r\n      // when /user/:id/profile is matched\r\n      // { path: 'id/:id_n', component: ViewerView }],\r\n    beforeEnter: (to, from, next) => {\r\n      store.dispatch('setContentType', 'info')\r\n      store.dispatch('loadCase', {\r\n        type: 'puzzles',\r\n        // typeId: to.params.id,\r\n        id: to.params.name\r\n      })\r\n      // store.dispatch('setPuzzleId', to.params.name)\r\n      store.dispatch('loadSpecializations')\r\n      store.dispatch('loadCaseResources')\r\n      next()\r\n    },\r\n    beforeRouteUpdate(to, from, next) {\r\n      ViewerView.OpenSeadragon({\r\n        tileSources: `${to.params.name}.dzi`\r\n      })\r\n      setTimeout(() => {\r\n        ViewerView.OpenSeadragon.Viewer.forceRedraw()\r\n      }, '1000');\r\n      // location.reload()\r\n      // ViewerView.OpenSeadragon\r\n      // обрабатываем изменение параметров маршрута...\r\n      // не забываем вызвать next()\r\n      next()\r\n    }\r\n  },\r\n  // { path: '/viewer/:id/:name', component: ViewerView }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGAH,GAAG,CAACI,GAAJ,CAAQH,SAAR;AAEA,MAAMI,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GADR;EAEEC,IAAI,EAAE,MAFR;EAGEC,SAAS,EAAEN;AAHb,CADa,EAMb;EACEI,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGE;EACA;EACA;EACAC,SAAS,EAAE,MAAM;EAAO;EAAgC,wBAAvC;AANnB,CANa,EAcb;EACAD,IAAI,EAAE,QADN;EAEED,IAAI,EAAE,kBAFR;EAGEE,SAAS,EAAEN,UAHb;EAIE;EACE;EACA;EACA;EAEA;EACA;EACA;EACFO,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;IAC/BT,KAAK,CAACU,QAAN,CAAe,gBAAf,EAAiC,MAAjC;IACAV,KAAK,CAACU,QAAN,CAAe,UAAf,EAA2B;MACzBC,IAAI,EAAE,SADmB;MAEzB;MACAC,EAAE,EAAEL,EAAE,CAACM,MAAH,CAAUT;IAHW,CAA3B,EAF+B,CAO/B;;IACAJ,KAAK,CAACU,QAAN,CAAe,qBAAf;IACAV,KAAK,CAACU,QAAN,CAAe,mBAAf;IACAD,IAAI;EACL,CAvBH;;EAwBEK,iBAAiB,CAACP,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAiB;IAChCV,UAAU,CAACgB,aAAX,CAAyB;MACvBC,WAAW,EAAG,GAAET,EAAE,CAACM,MAAH,CAAUT,IAAK;IADR,CAAzB;IAGAa,UAAU,CAAC,MAAM;MACflB,UAAU,CAACgB,aAAX,CAAyBG,MAAzB,CAAgCC,WAAhC;IACD,CAFS,EAEP,MAFO,CAAV,CAJgC,CAOhC;IACA;IACA;IACA;;IACAV,IAAI;EACL;;AApCH,CAda,CAoDb;AApDa,CAAf;AAuDA,MAAMW,MAAM,GAAG,IAAItB,SAAJ,CAAc;EAC3BuB,IAAI,EAAE,SADqB;EAE3BC,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFS;EAG3BvB;AAH2B,CAAd,CAAf;AAMA,eAAekB,MAAf"},"metadata":{},"sourceType":"module"}