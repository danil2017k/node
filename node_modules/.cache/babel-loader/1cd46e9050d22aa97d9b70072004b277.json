{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst HTMLFormElement = require(\"./HTMLFormElement.js\");\n\nconst Blob = require(\"./Blob.js\");\n\nconst Function = require(\"./Function.js\");\n\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"FormData\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(`${context} is not of type 'FormData'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"FormData Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: {\n      target,\n      kind,\n      index: 0\n    },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"FormData\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  class FormData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(globalObject, curArg, {\n            context: \"Failed to construct 'FormData': parameter 1\"\n          });\n        }\n\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'append' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'append' on 'FormData': 2 arguments required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(globalObject, curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\",\n                  globals: globalObject\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(globalObject, curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 3\",\n                globals: globalObject\n              });\n            }\n\n            args.push(curArg);\n          }\n      }\n\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'delete' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'delete' on 'FormData': 1 argument required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'get' on 'FormData': 1 argument required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].get(...args));\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'getAll' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'getAll' on 'FormData': 1 argument required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'has' on 'FormData': 1 argument required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'set' on 'FormData': 2 arguments required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(globalObject, curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\",\n                  globals: globalObject\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(globalObject, curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 3\",\n                globals: globalObject\n              });\n            }\n\n            args.push(curArg);\n          }\n      }\n\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of FormData.\");\n      }\n\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'values' called on an object that is not a valid instance of FormData.\");\n      }\n\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'entries' called on an object that is not a valid instance of FormData.\");\n      }\n\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'forEach' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\");\n      }\n\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n\n  }\n\n  Object.defineProperties(FormData.prototype, {\n    append: {\n      enumerable: true\n    },\n    delete: {\n      enumerable: true\n    },\n    get: {\n      enumerable: true\n    },\n    getAll: {\n      enumerable: true\n    },\n    has: {\n      enumerable: true\n    },\n    set: {\n      enumerable: true\n    },\n    keys: {\n      enumerable: true\n    },\n    values: {\n      enumerable: true\n    },\n    entries: {\n      enumerable: true\n    },\n    forEach: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"FormData\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: FormData.prototype.entries,\n      configurable: true,\n      writable: true\n    }\n  });\n  ctorRegistry[interfaceName] = FormData;\n  ctorRegistry[\"FormData Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"FormData Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"FormData Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a FormData iterator object\");\n      }\n\n      const {\n        target,\n        kind,\n        index\n      } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n\n      if (index >= len) {\n        return newObjectInRealm(globalObject, {\n          value: undefined,\n          done: true\n        });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n\n  });\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\n\nconst Impl = require(\"../xhr/FormData-impl.js\");","map":{"version":3,"names":["conversions","require","utils","HTMLFormElement","Blob","Function","newObjectInRealm","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","implForWrapper","TypeError","createDefaultIterator","target","kind","ctorRegistry","iteratorPrototype","iterator","Object","create","defineProperty","iterInternalSymbol","index","configurable","makeWrapper","newTarget","proto","undefined","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","initCtorRegistry","FormData","constructor","args","curArg","arguments","push","append","name","esValue","length","globals","delete","get","tryWrapperForImpl","getAll","set","keys","values","entries","forEach","callback","thisArg","pairs","Array","from","i","key","map","call","defineProperties","enumerable","Symbol","toStringTag","writable","define","next","internal","len","done","pair","iteratorResult"],"sources":["C:/Users/Danil/Desktop/project1/node_modules/jsdom/lib/jsdom/living/generated/FormData.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLFormElement = require(\"./HTMLFormElement.js\");\nconst Blob = require(\"./Blob.js\");\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"FormData\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'FormData'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"FormData Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"FormData\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class FormData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(globalObject, curArg, {\n            context: \"Failed to construct 'FormData': parameter 1\"\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'append' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'FormData': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(globalObject, curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\",\n                  globals: globalObject\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(globalObject, curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 3\",\n                globals: globalObject\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'delete' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'FormData': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'FormData': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].get(...args));\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'getAll' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'FormData': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'FormData': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'FormData': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of FormData.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'FormData': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(globalObject, curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\",\n                  globals: globalObject\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\",\n              globals: globalObject\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(globalObject, curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 3\",\n                globals: globalObject\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'values' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'entries' called on an object that is not a valid instance of FormData.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'forEach' called on an object that is not a valid instance of FormData.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(FormData.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"FormData\", configurable: true },\n    [Symbol.iterator]: { value: FormData.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = FormData;\n\n  ctorRegistry[\"FormData Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"FormData Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"FormData Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a FormData iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\n\nconst Impl = require(\"../xhr/FormData-impl.js\");\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,eAAe,GAAGF,OAAO,CAAC,sBAAD,CAA/B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAD,CAAxB;;AACA,MAAMK,gBAAgB,GAAGJ,KAAK,CAACI,gBAA/B;AACA,MAAMC,UAAU,GAAGL,KAAK,CAACK,UAAzB;AACA,MAAMC,kBAAkB,GAAGN,KAAK,CAACM,kBAAjC;AAEA,MAAMC,aAAa,GAAG,UAAtB;;AAEAC,OAAO,CAACC,EAAR,GAAaC,KAAK,IAAI;EACpB,OAAOV,KAAK,CAACW,QAAN,CAAeD,KAAf,KAAyBV,KAAK,CAACY,MAAN,CAAaF,KAAb,EAAoBL,UAApB,CAAzB,IAA4DK,KAAK,CAACL,UAAD,CAAL,YAA6BQ,IAAI,CAACC,cAArG;AACD,CAFD;;AAGAN,OAAO,CAACO,MAAR,GAAiBL,KAAK,IAAI;EACxB,OAAOV,KAAK,CAACW,QAAN,CAAeD,KAAf,KAAyBA,KAAK,YAAYG,IAAI,CAACC,cAAtD;AACD,CAFD;;AAGAN,OAAO,CAACQ,OAAR,GAAkB,CAACC,YAAD,EAAeP,KAAf,EAAsB;EAAEQ,OAAO,GAAG;AAAZ,IAAqC,EAA3D,KAAkE;EAClF,IAAIV,OAAO,CAACC,EAAR,CAAWC,KAAX,CAAJ,EAAuB;IACrB,OAAOV,KAAK,CAACmB,cAAN,CAAqBT,KAArB,CAAP;EACD;;EACD,MAAM,IAAIO,YAAY,CAACG,SAAjB,CAA4B,GAAEF,OAAQ,6BAAtC,CAAN;AACD,CALD;;AAOAV,OAAO,CAACa,qBAAR,GAAgC,CAACJ,YAAD,EAAeK,MAAf,EAAuBC,IAAvB,KAAgC;EAC9D,MAAMC,YAAY,GAAGP,YAAY,CAACX,kBAAD,CAAjC;EACA,MAAMmB,iBAAiB,GAAGD,YAAY,CAAC,mBAAD,CAAtC;EACA,MAAME,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcH,iBAAd,CAAjB;EACAE,MAAM,CAACE,cAAP,CAAsBH,QAAtB,EAAgC1B,KAAK,CAAC8B,kBAAtC,EAA0D;IACxDpB,KAAK,EAAE;MAAEY,MAAF;MAAUC,IAAV;MAAgBQ,KAAK,EAAE;IAAvB,CADiD;IAExDC,YAAY,EAAE;EAF0C,CAA1D;EAIA,OAAON,QAAP;AACD,CATD;;AAWA,SAASO,WAAT,CAAqBhB,YAArB,EAAmCiB,SAAnC,EAA8C;EAC5C,IAAIC,KAAJ;;EACA,IAAID,SAAS,KAAKE,SAAlB,EAA6B;IAC3BD,KAAK,GAAGD,SAAS,CAACG,SAAlB;EACD;;EAED,IAAI,CAACrC,KAAK,CAACW,QAAN,CAAewB,KAAf,CAAL,EAA4B;IAC1BA,KAAK,GAAGlB,YAAY,CAACX,kBAAD,CAAZ,CAAiC,UAAjC,EAA6C+B,SAArD;EACD;;EAED,OAAOV,MAAM,CAACC,MAAP,CAAcO,KAAd,CAAP;AACD;;AAED3B,OAAO,CAACoB,MAAR,GAAiB,CAACX,YAAD,EAAeqB,eAAf,EAAgCC,WAAhC,KAAgD;EAC/D,MAAMC,OAAO,GAAGP,WAAW,CAAChB,YAAD,CAA3B;EACA,OAAOT,OAAO,CAACiC,KAAR,CAAcD,OAAd,EAAuBvB,YAAvB,EAAqCqB,eAArC,EAAsDC,WAAtD,CAAP;AACD,CAHD;;AAKA/B,OAAO,CAACkC,UAAR,GAAqB,CAACzB,YAAD,EAAeqB,eAAf,EAAgCC,WAAhC,KAAgD;EACnE,MAAMC,OAAO,GAAGhC,OAAO,CAACoB,MAAR,CAAeX,YAAf,EAA6BqB,eAA7B,EAA8CC,WAA9C,CAAhB;EACA,OAAOvC,KAAK,CAACmB,cAAN,CAAqBqB,OAArB,CAAP;AACD,CAHD;;AAKAhC,OAAO,CAACmC,cAAR,GAAyB,CAACH,OAAD,EAAUvB,YAAV,KAA2B,CAAE,CAAtD;;AAEAT,OAAO,CAACiC,KAAR,GAAgB,CAACD,OAAD,EAAUvB,YAAV,EAAwBqB,eAAe,GAAG,EAA1C,EAA8CC,WAAW,GAAG,EAA5D,KAAmE;EACjFA,WAAW,CAACC,OAAZ,GAAsBA,OAAtB;;EAEAhC,OAAO,CAACmC,cAAR,CAAuBH,OAAvB,EAAgCvB,YAAhC;;EACAU,MAAM,CAACE,cAAP,CAAsBW,OAAtB,EAA+BnC,UAA/B,EAA2C;IACzCK,KAAK,EAAE,IAAIG,IAAI,CAACC,cAAT,CAAwBG,YAAxB,EAAsCqB,eAAtC,EAAuDC,WAAvD,CADkC;IAEzCP,YAAY,EAAE;EAF2B,CAA3C;EAKAQ,OAAO,CAACnC,UAAD,CAAP,CAAoBL,KAAK,CAAC4C,aAA1B,IAA2CJ,OAA3C;;EACA,IAAI3B,IAAI,CAACgC,IAAT,EAAe;IACbhC,IAAI,CAACgC,IAAL,CAAUL,OAAO,CAACnC,UAAD,CAAjB;EACD;;EACD,OAAOmC,OAAP;AACD,CAdD;;AAgBAhC,OAAO,CAACsC,GAAR,GAAc,CAAC7B,YAAD,EAAeiB,SAAf,KAA6B;EACzC,MAAMM,OAAO,GAAGP,WAAW,CAAChB,YAAD,EAAeiB,SAAf,CAA3B;;EAEA1B,OAAO,CAACmC,cAAR,CAAuBH,OAAvB,EAAgCvB,YAAhC;;EACAU,MAAM,CAACE,cAAP,CAAsBW,OAAtB,EAA+BnC,UAA/B,EAA2C;IACzCK,KAAK,EAAEiB,MAAM,CAACC,MAAP,CAAcf,IAAI,CAACC,cAAL,CAAoBuB,SAAlC,CADkC;IAEzCL,YAAY,EAAE;EAF2B,CAA3C;EAKAQ,OAAO,CAACnC,UAAD,CAAP,CAAoBL,KAAK,CAAC4C,aAA1B,IAA2CJ,OAA3C;;EACA,IAAI3B,IAAI,CAACgC,IAAT,EAAe;IACbhC,IAAI,CAACgC,IAAL,CAAUL,OAAO,CAACnC,UAAD,CAAjB;EACD;;EACD,OAAOmC,OAAO,CAACnC,UAAD,CAAd;AACD,CAdD;;AAgBA,MAAM0C,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,EAAW,QAAX,CAAR,CAAhB;;AAEAxC,OAAO,CAACyC,OAAR,GAAkB,CAAChC,YAAD,EAAeiC,WAAf,KAA+B;EAC/C,IAAI,CAACA,WAAW,CAACC,IAAZ,CAAiBC,UAAU,IAAIL,OAAO,CAACM,GAAR,CAAYD,UAAZ,CAA/B,CAAL,EAA8D;IAC5D;EACD;;EAED,MAAM5B,YAAY,GAAGxB,KAAK,CAACsD,gBAAN,CAAuBrC,YAAvB,CAArB;;EACA,MAAMsC,QAAN,CAAe;IACbC,WAAW,GAAG;MACZ,MAAMC,IAAI,GAAG,EAAb;MACA;QACE,IAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;QACA,IAAID,MAAM,KAAKtB,SAAf,EAA0B;UACxBsB,MAAM,GAAGzD,eAAe,CAACe,OAAhB,CAAwBC,YAAxB,EAAsCyC,MAAtC,EAA8C;YACrDxC,OAAO,EAAE;UAD4C,CAA9C,CAAT;QAGD;;QACDuC,IAAI,CAACG,IAAL,CAAUF,MAAV;MACD;MACD,OAAOlD,OAAO,CAACiC,KAAR,CAAcd,MAAM,CAACC,MAAP,CAAckB,GAAG,CAACxB,MAAJ,CAAWe,SAAzB,CAAd,EAAmDpB,YAAnD,EAAiEwC,IAAjE,CAAP;IACD;;IAEDI,MAAM,CAACC,IAAD,EAAOpD,KAAP,EAAc;MAClB,MAAMqD,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,wEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,4EAA2EuC,SAAS,CAACK,MAAO,WADzF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;;MACA,QAAQE,SAAS,CAACK,MAAlB;QACE,KAAK,CAAL;UACE;YACE,IAAIN,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;cACxCxC,OAAO,EAAE,uDAD+B;cAExC+C,OAAO,EAAEhD;YAF+B,CAAjC,CAAT;YAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;YACA,IAAIzD,IAAI,CAACO,EAAL,CAAQiD,MAAR,CAAJ,EAAqB;cACnB;gBACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;gBACAD,MAAM,GAAGxD,IAAI,CAACc,OAAL,CAAaC,YAAb,EAA2ByC,MAA3B,EAAmC;kBAC1CxC,OAAO,EAAE;gBADiC,CAAnC,CAAT;gBAGAuC,IAAI,CAACG,IAAL,CAAUF,MAAV;cACD;YACF,CARD,MAQO;cACL;gBACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;gBACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;kBACxCxC,OAAO,EAAE,uDAD+B;kBAExC+C,OAAO,EAAEhD;gBAF+B,CAAjC,CAAT;gBAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;cACD;YACF;UACF;UACD;;QACF;UACE;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;cACxCxC,OAAO,EAAE,uDAD+B;cAExC+C,OAAO,EAAEhD;YAF+B,CAAjC,CAAT;YAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAGxD,IAAI,CAACc,OAAL,CAAaC,YAAb,EAA2ByC,MAA3B,EAAmC;cAC1CxC,OAAO,EAAE;YADiC,CAAnC,CAAT;YAGAuC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;YACA,IAAID,MAAM,KAAKtB,SAAf,EAA0B;cACxBsB,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;gBACxCxC,OAAO,EAAE,uDAD+B;gBAExC+C,OAAO,EAAEhD;cAF+B,CAAjC,CAAT;YAID;;YACDwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;MAzDL;;MA2DA,OAAOK,OAAO,CAAC1D,UAAD,CAAP,CAAoBwD,MAApB,CAA2B,GAAGJ,IAA9B,CAAP;IACD;;IAEDS,MAAM,CAACJ,IAAD,EAAO;MACX,MAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,wEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,2EAA0EuC,SAAS,CAACK,MAAO,WADxF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;MACA;QACE,IAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;QACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;UACxCxC,OAAO,EAAE,uDAD+B;UAExC+C,OAAO,EAAEhD;QAF+B,CAAjC,CAAT;QAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;MACD;MACD,OAAOK,OAAO,CAAC1D,UAAD,CAAP,CAAoB6D,MAApB,CAA2B,GAAGT,IAA9B,CAAP;IACD;;IAEDU,GAAG,CAACL,IAAD,EAAO;MACR,MAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,qEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,wEAAuEuC,SAAS,CAACK,MAAO,WADrF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;MACA;QACE,IAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;QACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;UACxCxC,OAAO,EAAE,oDAD+B;UAExC+C,OAAO,EAAEhD;QAF+B,CAAjC,CAAT;QAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;MACD;MACD,OAAO1D,KAAK,CAACoE,iBAAN,CAAwBL,OAAO,CAAC1D,UAAD,CAAP,CAAoB8D,GAApB,CAAwB,GAAGV,IAA3B,CAAxB,CAAP;IACD;;IAEDY,MAAM,CAACP,IAAD,EAAO;MACX,MAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,wEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,2EAA0EuC,SAAS,CAACK,MAAO,WADxF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;MACA;QACE,IAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;QACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;UACxCxC,OAAO,EAAE,uDAD+B;UAExC+C,OAAO,EAAEhD;QAF+B,CAAjC,CAAT;QAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;MACD;MACD,OAAO1D,KAAK,CAACoE,iBAAN,CAAwBL,OAAO,CAAC1D,UAAD,CAAP,CAAoBgE,MAApB,CAA2B,GAAGZ,IAA9B,CAAxB,CAAP;IACD;;IAEDJ,GAAG,CAACS,IAAD,EAAO;MACR,MAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,qEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,wEAAuEuC,SAAS,CAACK,MAAO,WADrF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;MACA;QACE,IAAIC,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;QACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;UACxCxC,OAAO,EAAE,oDAD+B;UAExC+C,OAAO,EAAEhD;QAF+B,CAAjC,CAAT;QAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;MACD;MACD,OAAOK,OAAO,CAAC1D,UAAD,CAAP,CAAoBgD,GAApB,CAAwB,GAAGI,IAA3B,CAAP;IACD;;IAEDa,GAAG,CAACR,IAAD,EAAOpD,KAAP,EAAc;MACf,MAAMqD,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS3B,SAA1B,GAAsC,IAAtC,GAA6CnB,YAA7D;;MACA,IAAI,CAACT,OAAO,CAACC,EAAR,CAAWsD,OAAX,CAAL,EAA0B;QACxB,MAAM,IAAI9C,YAAY,CAACG,SAAjB,CAA2B,qEAA3B,CAAN;MACD;;MAED,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACH,yEAAwEuC,SAAS,CAACK,MAAO,WADtF,CAAN;MAGD;;MACD,MAAMP,IAAI,GAAG,EAAb;;MACA,QAAQE,SAAS,CAACK,MAAlB;QACE,KAAK,CAAL;UACE;YACE,IAAIN,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;cACxCxC,OAAO,EAAE,oDAD+B;cAExC+C,OAAO,EAAEhD;YAF+B,CAAjC,CAAT;YAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;YACA,IAAIzD,IAAI,CAACO,EAAL,CAAQiD,MAAR,CAAJ,EAAqB;cACnB;gBACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;gBACAD,MAAM,GAAGxD,IAAI,CAACc,OAAL,CAAaC,YAAb,EAA2ByC,MAA3B,EAAmC;kBAC1CxC,OAAO,EAAE;gBADiC,CAAnC,CAAT;gBAGAuC,IAAI,CAACG,IAAL,CAAUF,MAAV;cACD;YACF,CARD,MAQO;cACL;gBACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;gBACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;kBACxCxC,OAAO,EAAE,oDAD+B;kBAExC+C,OAAO,EAAEhD;gBAF+B,CAAjC,CAAT;gBAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;cACD;YACF;UACF;UACD;;QACF;UACE;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;cACxCxC,OAAO,EAAE,oDAD+B;cAExC+C,OAAO,EAAEhD;YAF+B,CAAjC,CAAT;YAIAwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;YACAD,MAAM,GAAGxD,IAAI,CAACc,OAAL,CAAaC,YAAb,EAA2ByC,MAA3B,EAAmC;cAC1CxC,OAAO,EAAE;YADiC,CAAnC,CAAT;YAGAuC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;UACD;YACE,IAAIA,MAAM,GAAGC,SAAS,CAAC,CAAD,CAAtB;;YACA,IAAID,MAAM,KAAKtB,SAAf,EAA0B;cACxBsB,MAAM,GAAG5D,WAAW,CAAC,WAAD,CAAX,CAAyB4D,MAAzB,EAAiC;gBACxCxC,OAAO,EAAE,oDAD+B;gBAExC+C,OAAO,EAAEhD;cAF+B,CAAjC,CAAT;YAID;;YACDwC,IAAI,CAACG,IAAL,CAAUF,MAAV;UACD;MAzDL;;MA2DA,OAAOK,OAAO,CAAC1D,UAAD,CAAP,CAAoBiE,GAApB,CAAwB,GAAGb,IAA3B,CAAP;IACD;;IAEDc,IAAI,GAAG;MACL,IAAI,CAAC/D,OAAO,CAACC,EAAR,CAAW,IAAX,CAAL,EAAuB;QACrB,MAAM,IAAIQ,YAAY,CAACG,SAAjB,CAA2B,sEAA3B,CAAN;MACD;;MACD,OAAOZ,OAAO,CAACa,qBAAR,CAA8BJ,YAA9B,EAA4C,IAA5C,EAAkD,KAAlD,CAAP;IACD;;IAEDuD,MAAM,GAAG;MACP,IAAI,CAAChE,OAAO,CAACC,EAAR,CAAW,IAAX,CAAL,EAAuB;QACrB,MAAM,IAAIQ,YAAY,CAACG,SAAjB,CAA2B,wEAA3B,CAAN;MACD;;MACD,OAAOZ,OAAO,CAACa,qBAAR,CAA8BJ,YAA9B,EAA4C,IAA5C,EAAkD,OAAlD,CAAP;IACD;;IAEDwD,OAAO,GAAG;MACR,IAAI,CAACjE,OAAO,CAACC,EAAR,CAAW,IAAX,CAAL,EAAuB;QACrB,MAAM,IAAIQ,YAAY,CAACG,SAAjB,CAA2B,yEAA3B,CAAN;MACD;;MACD,OAAOZ,OAAO,CAACa,qBAAR,CAA8BJ,YAA9B,EAA4C,IAA5C,EAAkD,WAAlD,CAAP;IACD;;IAEDyD,OAAO,CAACC,QAAD,EAAW;MAChB,IAAI,CAACnE,OAAO,CAACC,EAAR,CAAW,IAAX,CAAL,EAAuB;QACrB,MAAM,IAAIQ,YAAY,CAACG,SAAjB,CAA2B,yEAA3B,CAAN;MACD;;MACD,IAAIuC,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAI/C,YAAY,CAACG,SAAjB,CACJ,qFADI,CAAN;MAGD;;MACDuD,QAAQ,GAAGxE,QAAQ,CAACa,OAAT,CAAiBC,YAAjB,EAA+B0D,QAA/B,EAAyC;QAClDzD,OAAO,EAAE;MADyC,CAAzC,CAAX;MAGA,MAAM0D,OAAO,GAAGjB,SAAS,CAAC,CAAD,CAAzB;MACA,IAAIkB,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAK1E,UAAL,CAAX,CAAZ;MACA,IAAI2E,CAAC,GAAG,CAAR;;MACA,OAAOA,CAAC,GAAGH,KAAK,CAACb,MAAjB,EAAyB;QACvB,MAAM,CAACiB,GAAD,EAAMvE,KAAN,IAAemE,KAAK,CAACG,CAAD,CAAL,CAASE,GAAT,CAAalF,KAAK,CAACoE,iBAAnB,CAArB;QACAO,QAAQ,CAACQ,IAAT,CAAcP,OAAd,EAAuBlE,KAAvB,EAA8BuE,GAA9B,EAAmC,IAAnC;QACAJ,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAK1E,UAAL,CAAX,CAAR;QACA2E,CAAC;MACF;IACF;;EAzSY;;EA2SfrD,MAAM,CAACyD,gBAAP,CAAwB7B,QAAQ,CAAClB,SAAjC,EAA4C;IAC1CwB,MAAM,EAAE;MAAEwB,UAAU,EAAE;IAAd,CADkC;IAE1CnB,MAAM,EAAE;MAAEmB,UAAU,EAAE;IAAd,CAFkC;IAG1ClB,GAAG,EAAE;MAAEkB,UAAU,EAAE;IAAd,CAHqC;IAI1ChB,MAAM,EAAE;MAAEgB,UAAU,EAAE;IAAd,CAJkC;IAK1ChC,GAAG,EAAE;MAAEgC,UAAU,EAAE;IAAd,CALqC;IAM1Cf,GAAG,EAAE;MAAEe,UAAU,EAAE;IAAd,CANqC;IAO1Cd,IAAI,EAAE;MAAEc,UAAU,EAAE;IAAd,CAPoC;IAQ1Cb,MAAM,EAAE;MAAEa,UAAU,EAAE;IAAd,CARkC;IAS1CZ,OAAO,EAAE;MAAEY,UAAU,EAAE;IAAd,CATiC;IAU1CX,OAAO,EAAE;MAAEW,UAAU,EAAE;IAAd,CAViC;IAW1C,CAACC,MAAM,CAACC,WAAR,GAAsB;MAAE7E,KAAK,EAAE,UAAT;MAAqBsB,YAAY,EAAE;IAAnC,CAXoB;IAY1C,CAACsD,MAAM,CAAC5D,QAAR,GAAmB;MAAEhB,KAAK,EAAE6C,QAAQ,CAAClB,SAAT,CAAmBoC,OAA5B;MAAqCzC,YAAY,EAAE,IAAnD;MAAyDwD,QAAQ,EAAE;IAAnE;EAZuB,CAA5C;EAcAhE,YAAY,CAACjB,aAAD,CAAZ,GAA8BgD,QAA9B;EAEA/B,YAAY,CAAC,mBAAD,CAAZ,GAAoCG,MAAM,CAACC,MAAP,CAAcJ,YAAY,CAAC,qBAAD,CAA1B,EAAmD;IACrF,CAAC8D,MAAM,CAACC,WAAR,GAAsB;MACpBvD,YAAY,EAAE,IADM;MAEpBtB,KAAK,EAAE;IAFa;EAD+D,CAAnD,CAApC;EAMAV,KAAK,CAACyF,MAAN,CAAajE,YAAY,CAAC,mBAAD,CAAzB,EAAgD;IAC9CkE,IAAI,GAAG;MACL,MAAMC,QAAQ,GAAG,QAAQ,KAAK3F,KAAK,CAAC8B,kBAAX,CAAzB;;MACA,IAAI,CAAC6D,QAAL,EAAe;QACb,MAAM,IAAI1E,YAAY,CAACG,SAAjB,CAA2B,iEAA3B,CAAN;MACD;;MAED,MAAM;QAAEE,MAAF;QAAUC,IAAV;QAAgBQ;MAAhB,IAA0B4D,QAAhC;MACA,MAAMnB,MAAM,GAAGM,KAAK,CAACC,IAAN,CAAWzD,MAAM,CAACjB,UAAD,CAAjB,CAAf;MACA,MAAMuF,GAAG,GAAGpB,MAAM,CAACR,MAAnB;;MACA,IAAIjC,KAAK,IAAI6D,GAAb,EAAkB;QAChB,OAAOxF,gBAAgB,CAACa,YAAD,EAAe;UAAEP,KAAK,EAAE0B,SAAT;UAAoByD,IAAI,EAAE;QAA1B,CAAf,CAAvB;MACD;;MAED,MAAMC,IAAI,GAAGtB,MAAM,CAACzC,KAAD,CAAnB;MACA4D,QAAQ,CAAC5D,KAAT,GAAiBA,KAAK,GAAG,CAAzB;MACA,OAAO3B,gBAAgB,CAACa,YAAD,EAAejB,KAAK,CAAC+F,cAAN,CAAqBD,IAAI,CAACZ,GAAL,CAASlF,KAAK,CAACoE,iBAAf,CAArB,EAAwD7C,IAAxD,CAAf,CAAvB;IACD;;EAjB6C,CAAhD;EAoBAI,MAAM,CAACE,cAAP,CAAsBZ,YAAtB,EAAoCV,aAApC,EAAmD;IACjDyB,YAAY,EAAE,IADmC;IAEjDwD,QAAQ,EAAE,IAFuC;IAGjD9E,KAAK,EAAE6C;EAH0C,CAAnD;AAKD,CAhWD;;AAkWA,MAAM1C,IAAI,GAAGd,OAAO,CAAC,yBAAD,CAApB"},"metadata":{},"sourceType":"script"}