{"ast":null,"code":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst {\n  XML_NS,\n  XMLNS_NS\n} = require(\"../helpers/namespaces\"); // https://dom.spec.whatwg.org/#validate\n\n\nexports.name = (globalObject, name) => {\n  if (!xnv.name(name)) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.qname = (globalObject, qname) => {\n  if (!xnv.qname(qname)) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.validateAndExtract = (globalObject, namespace, qualifiedName) => {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(globalObject, qualifiedName);\n  let prefix = null;\n  let localName = qualifiedName;\n  const colonIndex = qualifiedName.indexOf(\":\");\n\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\"]);\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\"]);\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\", \"NamespaceError\"]);\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\"]);\n  }\n\n  return {\n    namespace,\n    prefix,\n    localName\n  };\n};","map":{"version":3,"names":["xnv","require","DOMException","XML_NS","XMLNS_NS","exports","name","globalObject","create","qname","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js"],"sourcesContent":["\"use strict\";\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { XML_NS, XMLNS_NS } = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = (globalObject, name) => {\n  if (!xnv.name(name)) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.qname = (globalObject, qname) => {\n  if (!xnv.qname(qname)) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.validateAndExtract = (globalObject, namespace, qualifiedName) => {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(globalObject, qualifiedName);\n\n  let prefix = null;\n  let localName = qualifiedName;\n\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  return { namespace, prefix, localName };\n};\n"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,gCAAD,CAA5B;;AACA,MAAM;EAAEE,MAAF;EAAUC;AAAV,IAAuBH,OAAO,CAAC,uBAAD,CAApC,C,CAEA;;;AAEAI,OAAO,CAACC,IAAR,GAAe,CAACC,YAAD,EAAeD,IAAf,KAAwB;EACrC,IAAI,CAACN,GAAG,CAACM,IAAJ,CAASA,IAAT,CAAL,EAAqB;IACnB,MAAMJ,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CAAE,IAAGD,IAAK,qCAAV,EAAgD,uBAAhD,CAAlC,CAAN;EACD;AACF,CAJD;;AAMAD,OAAO,CAACI,KAAR,GAAgB,CAACF,YAAD,EAAeE,KAAf,KAAyB;EACvC,IAAI,CAACT,GAAG,CAACS,KAAJ,CAAUA,KAAV,CAAL,EAAuB;IACrB,MAAMP,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CAAE,IAAGE,KAAM,sCAAX,EAAkD,uBAAlD,CAAlC,CAAN;EACD;AACF,CAJD;;AAMAJ,OAAO,CAACK,kBAAR,GAA6B,CAACH,YAAD,EAAeI,SAAf,EAA0BC,aAA1B,KAA4C;EACvE,IAAID,SAAS,KAAK,EAAlB,EAAsB;IACpBA,SAAS,GAAG,IAAZ;EACD;;EAEDN,OAAO,CAACI,KAAR,CAAcF,YAAd,EAA4BK,aAA5B;EAEA,IAAIC,MAAM,GAAG,IAAb;EACA,IAAIC,SAAS,GAAGF,aAAhB;EAEA,MAAMG,UAAU,GAAGH,aAAa,CAACI,OAAd,CAAsB,GAAtB,CAAnB;;EACA,IAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;IACrBF,MAAM,GAAGD,aAAa,CAACK,SAAd,CAAwB,CAAxB,EAA2BF,UAA3B,CAAT;IACAD,SAAS,GAAGF,aAAa,CAACK,SAAd,CAAwBF,UAAU,GAAG,CAArC,CAAZ;EACD;;EAED,IAAIF,MAAM,KAAK,IAAX,IAAmBF,SAAS,KAAK,IAArC,EAA2C;IACzC,MAAMT,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CACtC,8EADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAIM,MAAM,KAAK,KAAX,IAAoBF,SAAS,KAAKR,MAAtC,EAA8C;IAC5C,MAAMD,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CACtC,2EADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAI,CAACK,aAAa,KAAK,OAAlB,IAA6BC,MAAM,KAAK,OAAzC,KAAqDF,SAAS,KAAKP,QAAvE,EAAiF;IAC/E,MAAMF,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CACtC,gGADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAII,SAAS,KAAKP,QAAd,IAA0BQ,aAAa,KAAK,OAA5C,IAAuDC,MAAM,KAAK,OAAtE,EAA+E;IAC7E,MAAMX,YAAY,CAACM,MAAb,CAAoBD,YAApB,EAAkC,CACtC,sFADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,OAAO;IAAEI,SAAF;IAAaE,MAAb;IAAqBC;EAArB,CAAP;AACD,CA7CD"},"metadata":{},"sourceType":"script"}