{"ast":null,"code":"/*! keydrown - v1.2.8 - 2020-10-01 - http://jeremyckahn.github.com/keydrown */\n;\n\n(function (window) {\n  var util = function () {\n    var util = {};\n    /**\n     * @param {Object} obj The Object to iterate through.\n     * @param {function(*, string)} iterator The function to call for each property.\n     */\n\n    util.forEach = function (obj, iterator) {\n      var prop;\n\n      for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          iterator(obj[prop], prop);\n        }\n      }\n    };\n\n    var forEach = util.forEach;\n    /**\n     * Create a transposed copy of an Object.\n     *\n     * @param {Object} obj\n     * @return {Object}\n     */\n\n    util.getTranspose = function (obj) {\n      var transpose = {};\n      forEach(obj, function (val, key) {\n        transpose[val] = key;\n      });\n      return transpose;\n    };\n    /**\n     * Implementation of Array#indexOf because IE<9 doesn't support it.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {number} Index of the found element or -1 if not found.\n     */\n\n\n    util.indexOf = function (arr, val) {\n      if (arr.indexOf) {\n        return arr.indexOf(val);\n      }\n\n      var i,\n          len = arr.length;\n\n      for (i = 0; i < len; i++) {\n        if (arr[i] === val) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    var indexOf = util.indexOf;\n    /**\n     * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {boolean} Whether or not the value was added to the array.\n     */\n\n    util.pushUnique = function (arr, val) {\n      if (indexOf(arr, val) === -1) {\n        arr.push(val);\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * Remove a value from an array.  Assumes there is only one instance of the\n     * value present in the array.\n     *\n     * @param {Array} arr\n     * @param {*} val\n     * @return {*} The value that was removed from arr.  Returns undefined if\n     * nothing was removed.\n     */\n\n\n    util.removeValue = function (arr, val) {\n      var index = indexOf(arr, val);\n\n      if (index !== -1) {\n        return arr.splice(index, 1)[0];\n      }\n    };\n    /**\n     * Cross-browser function for listening for and handling an event on the\n     * document element.\n     *\n     * @param {string} eventName\n     * @param {function} handler\n     */\n\n\n    util.documentOn = function (eventName, handler) {\n      if (window.addEventListener) {\n        window.addEventListener(eventName, handler, false);\n      } else if (document.attachEvent) {\n        document.attachEvent('on' + eventName, handler);\n      }\n    };\n    /**\n     * Shim for requestAnimationFrame.  See:\n     * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n     */\n\n\n    util.requestAnimationFrame = function () {\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n    }();\n    /**\n     * An empty function.  NOOP!\n     */\n\n\n    util.noop = function () {};\n\n    return util;\n  }();\n  /**\n   * Lookup table of keys to keyCodes.\n   *\n   * @type {Object.<number>}\n   */\n\n\n  var KEY_MAP = {\n    'ZERO': 48,\n    'ONE': 49,\n    'TWO': 50,\n    'THREE': 51,\n    'FOUR': 52,\n    'FIVE': 53,\n    'SIX': 54,\n    'SEVEN': 55,\n    'EIGHT': 56,\n    'NINE': 57,\n    'A': 65,\n    'B': 66,\n    'C': 67,\n    'D': 68,\n    'E': 69,\n    'F': 70,\n    'G': 71,\n    'H': 72,\n    'I': 73,\n    'J': 74,\n    'K': 75,\n    'L': 76,\n    'M': 77,\n    'N': 78,\n    'O': 79,\n    'P': 80,\n    'Q': 81,\n    'R': 82,\n    'S': 83,\n    'T': 84,\n    'U': 85,\n    'V': 86,\n    'W': 87,\n    'X': 88,\n    'Y': 89,\n    'Z': 90,\n    'ENTER': 13,\n    'SHIFT': 16,\n    'ESC': 27,\n    'SPACE': 32,\n    'LEFT': 37,\n    'UP': 38,\n    'RIGHT': 39,\n    'DOWN': 40,\n    'BACKSPACE': 8,\n    'DELETE': 46,\n    'TAB': 9,\n    'TILDE': 192,\n    'CTRL': 17\n  };\n  /**\n   * The transposed version of KEY_MAP.\n   *\n   * @type {Object.<string>}\n   */\n\n  var TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\n  /*!\n   * @type Array.<string>\n   */\n\n  var keysDown = [];\n\n  var Key = function () {\n    'use strict';\n    /**\n     * Represents a key on the keyboard.  You'll never actually call this method\n     * directly; Key Objects for every key that Keydrown supports are created for\n     * you when the library is initialized (as in, when the file is loaded).  You\n     * will, however, use the `prototype` methods below to bind functions to key\n     * states.\n     *\n     * @param {number} keyCode The keyCode of the key.\n     * @constructor\n     * @class kd.Key\n     */\n\n    function Key(keyCode) {\n      this.keyCode = keyCode;\n      this.cachedKeypressEvent = null;\n    }\n    /*!\n     * The function to be invoked on every tick that the key is held down for.\n     *\n     * @type {function}\n     */\n\n\n    Key.prototype._downHandler = util.noop;\n    /*!\n     * The function to be invoked when the key is released.\n     *\n     * @type {function}\n     */\n\n    Key.prototype._upHandler = util.noop;\n    /*!\n     * The function to be invoked when the key is pressed.\n     *\n     * @type {function}\n     */\n\n    Key.prototype._pressHandler = util.noop;\n    /*!\n     * Private helper function that binds or invokes a hander for `down`, `up',\n     * or `press` for a `Key`.\n     *\n     * @param {Key} key\n     * @param {string} handlerName\n     * @param {function=} opt_handler If omitted, the handler is invoked.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by a\n     * keyboard event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.\n     */\n\n    function bindOrFire(key, handlerName, opt_handler, opt_evt) {\n      if (opt_handler) {\n        key[handlerName] = opt_handler;\n      } else {\n        key[handlerName](opt_evt);\n      }\n    }\n    /**\n     * Returns whether the key is currently pressed or not.\n     *\n     * @method isDown\n     * @return {boolean} True if the key is down, otherwise false.\n     */\n\n\n    Key.prototype.isDown = function () {\n      return util.indexOf(keysDown, this.keyCode) !== -1;\n    };\n    /**\n     * Bind a function to be called when the key is held down.\n     *\n     * @method down\n     * @param {function=} opt_handler The function to be called when the key is\n     * held down.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     */\n\n\n    Key.prototype.down = function (opt_handler) {\n      bindOrFire(this, '_downHandler', opt_handler, this.cachedKeypressEvent);\n    };\n    /**\n     * Bind a function to be called when the key is released.\n     *\n     * @method up\n     * @param {function=} opt_handler The function to be called when the key is\n     * released.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keyup event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n\n\n    Key.prototype.up = function (opt_handler, opt_evt) {\n      bindOrFire(this, '_upHandler', opt_handler, opt_evt);\n    };\n    /**\n     * Bind a function to be called when the key is pressed.  This handler will\n     * not fire again until the key is released â€” it does not repeat.\n     *\n     * @method press\n     * @param {function=} opt_handler The function to be called once when the key\n     * is pressed.  If omitted, this function invokes whatever handler was\n     * previously bound.\n     * @param {KeyboardEvent=} opt_evt If this function is being called by the\n     * keydown event handler, this is the raw KeyboardEvent Object provided from\n     * the browser.  This should generally not be provided by client code.\n     */\n\n\n    Key.prototype.press = function (opt_handler, opt_evt) {\n      this.cachedKeypressEvent = opt_evt;\n      bindOrFire(this, '_pressHandler', opt_handler, opt_evt);\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/down:method\"}}{{/crossLink}}`.\n     * @method unbindDown\n     */\n\n\n    Key.prototype.unbindDown = function () {\n      this._downHandler = util.noop;\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/up:method\"}}{{/crossLink}}`.\n     * @method unbindUp\n     */\n\n\n    Key.prototype.unbindUp = function () {\n      this._upHandler = util.noop;\n    };\n    /**\n     * Remove the handler that was bound with `{{#crossLink\n     * \"kd.Key/press:method\"}}{{/crossLink}}`.\n     * @method unbindPress\n     */\n\n\n    Key.prototype.unbindPress = function () {\n      this._pressHandler = util.noop;\n    };\n\n    return Key;\n  }();\n\n  var kd = function (keysDown) {\n    'use strict';\n    /**\n     * @class kd\n     */\n\n    var kd = {};\n    kd.Key = Key;\n    var isRunning = false;\n    var now = Date.now ? Date.now : function () {\n      return +new Date();\n    };\n    var previousUpdateTime = now();\n    /**\n     * Evaluate which keys are held down and invoke their handler functions.\n     * @method tick\n     */\n\n    kd.tick = function () {\n      var i,\n          len = keysDown.length;\n\n      for (i = 0; i < len; i++) {\n        var keyCode = keysDown[i];\n        var keyName = TRANSPOSED_KEY_MAP[keyCode];\n\n        if (keyName) {\n          kd[keyName].down();\n        }\n      }\n    };\n    /**\n     * A basic run loop.  `handler` gets called approximately 60 times a second.\n     *\n     * @param {Function(number, number)} handler The callback function to call on\n     * every tick.  You likely want to call [kd.tick](#method_tick) in this\n     * function.  This callback receives the time elapsed since the previous\n     * execution of the callback as the first parameter, and the current time\n     * stamp as the second.\n     * @method run\n     */\n\n\n    kd.run = function (handler) {\n      isRunning = true;\n      var currentTime = now();\n      var timeSinceLastUpdate = currentTime - previousUpdateTime;\n      util.requestAnimationFrame.call(window, function () {\n        if (!isRunning) {\n          return;\n        }\n\n        kd.run(handler);\n        handler(timeSinceLastUpdate, currentTime);\n      });\n      previousUpdateTime = currentTime;\n    };\n    /**\n     * Cancels the loop created by [run](#method_run).\n     * @method stop\n     */\n\n\n    kd.stop = function () {\n      isRunning = false;\n    }; // SETUP\n    //\n    // Initialize the KEY Objects\n\n\n    util.forEach(KEY_MAP, function (keyCode, keyName) {\n      kd[keyName] = new Key(keyCode);\n    });\n    util.documentOn('keydown', function (evt) {\n      var keyCode = evt.keyCode;\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      var isNew = util.pushUnique(keysDown, keyCode);\n      var key = kd[keyName];\n\n      if (key) {\n        var cachedKeypressEvent = key.cachedKeypressEvent || {}; // If a modifier key was held down the last time that this button was\n        // pressed, and it is pressed again without the modifier key being\n        // released, it is considered a newly-pressed key.  This is to work\n        // around the fact that the \"keyup\" event does not fire for the modified\n        // key until the modifier button is also released, which poses a problem\n        // for repeated, modified key presses such as hitting ctrl/meta+Z for\n        // rapid \"undo\" actions.\n\n        if (cachedKeypressEvent.ctrlKey || cachedKeypressEvent.shiftKey || cachedKeypressEvent.metaKey) {\n          isNew = true;\n        }\n\n        if (isNew) {\n          key.press(null, evt);\n        }\n      }\n    });\n    util.documentOn('keyup', function (evt) {\n      var keyCode = util.removeValue(keysDown, evt.keyCode);\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n\n      if (keyName) {\n        kd[keyName].up(null, evt);\n      }\n    }); // Stop firing the \"down\" handlers if the user loses focus of the browser\n    // window.\n\n    util.documentOn('blur', function (evt) {\n      // Fire the \"up\" handler for each key that is currently held down\n      util.forEach(keysDown, function (keyCode) {\n        var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\n\n        if (mappedKey) {\n          kd[mappedKey].up();\n        }\n      });\n      keysDown.length = 0;\n    });\n    return kd; // The variables passed into the closure here are defined in kd.key.js.\n  }(keysDown);\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // Keydrown was loaded as a CommonJS module (by Browserify, for example).\n    module.exports = kd;\n  } else if (typeof define === \"function\" && define.amd) {\n    // Keydrown was loaded as an AMD module.\n    define(function () {\n      return kd;\n    });\n  } else {\n    window.kd = kd;\n  }\n})(window);","map":{"version":3,"names":["window","util","forEach","obj","iterator","prop","hasOwnProperty","getTranspose","transpose","val","key","indexOf","arr","i","len","length","pushUnique","push","removeValue","index","splice","documentOn","eventName","handler","addEventListener","document","attachEvent","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","noop","KEY_MAP","TRANSPOSED_KEY_MAP","keysDown","Key","keyCode","cachedKeypressEvent","prototype","_downHandler","_upHandler","_pressHandler","bindOrFire","handlerName","opt_handler","opt_evt","isDown","down","up","press","unbindDown","unbindUp","unbindPress","kd","isRunning","now","Date","previousUpdateTime","tick","keyName","run","currentTime","timeSinceLastUpdate","call","stop","evt","isNew","ctrlKey","shiftKey","metaKey","mappedKey","module","exports","define","amd"],"sources":["C:/Users/Danil/Desktop/project1/node_modules/keydrown/dist/keydrown.js"],"sourcesContent":["/*! keydrown - v1.2.8 - 2020-10-01 - http://jeremyckahn.github.com/keydrown */\n;(function (window) {\n\nvar util = (function () {\n\n  var util = {};\n\n  /**\n   * @param {Object} obj The Object to iterate through.\n   * @param {function(*, string)} iterator The function to call for each property.\n   */\n  util.forEach = function (obj, iterator) {\n    var prop;\n    for (prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        iterator(obj[prop], prop);\n      }\n    }\n  };\n  var forEach = util.forEach;\n\n\n  /**\n   * Create a transposed copy of an Object.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   */\n  util.getTranspose = function (obj) {\n    var transpose = {};\n\n    forEach(obj, function (val, key) {\n      transpose[val] = key;\n    });\n\n    return transpose;\n  };\n\n\n  /**\n   * Implementation of Array#indexOf because IE<9 doesn't support it.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {number} Index of the found element or -1 if not found.\n   */\n  util.indexOf = function (arr, val) {\n    if (arr.indexOf) {\n      return arr.indexOf(val);\n    }\n\n    var i, len = arr.length;\n    for (i = 0; i < len; i++) {\n      if (arr[i] === val) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  var indexOf = util.indexOf;\n\n\n  /**\n   * Push a value onto an array if it is not present in the array already.  Otherwise, this is a no-op.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {boolean} Whether or not the value was added to the array.\n   */\n  util.pushUnique = function (arr, val) {\n    if (indexOf(arr, val) === -1) {\n      arr.push(val);\n      return true;\n    }\n\n    return false;\n  };\n\n\n  /**\n   * Remove a value from an array.  Assumes there is only one instance of the\n   * value present in the array.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   * @return {*} The value that was removed from arr.  Returns undefined if\n   * nothing was removed.\n   */\n  util.removeValue = function (arr, val) {\n    var index = indexOf(arr, val);\n\n    if (index !== -1) {\n      return arr.splice(index, 1)[0];\n    }\n  };\n\n\n  /**\n   * Cross-browser function for listening for and handling an event on the\n   * document element.\n   *\n   * @param {string} eventName\n   * @param {function} handler\n   */\n  util.documentOn = function (eventName, handler) {\n    if (window.addEventListener) {\n      window.addEventListener(eventName, handler, false);\n    } else if (document.attachEvent) {\n      document.attachEvent('on' + eventName, handler);\n    }\n  };\n\n\n  /**\n   * Shim for requestAnimationFrame.  See:\n   * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   */\n  util.requestAnimationFrame = (function () {\n    return window.requestAnimationFrame  ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      function( callback ){\n        window.setTimeout(callback, 1000 / 60);\n      };\n  })();\n\n\n  /**\n   * An empty function.  NOOP!\n   */\n  util.noop = function () {};\n\n  return util;\n\n}());\n\n/**\n * Lookup table of keys to keyCodes.\n *\n * @type {Object.<number>}\n */\nvar KEY_MAP = {\n  'ZERO': 48,\n  'ONE': 49,\n  'TWO': 50,\n  'THREE': 51,\n  'FOUR': 52,\n  'FIVE': 53,\n  'SIX': 54,\n  'SEVEN': 55,\n  'EIGHT': 56,\n  'NINE': 57,\n  'A': 65,\n  'B': 66,\n  'C': 67,\n  'D': 68,\n  'E': 69,\n  'F': 70,\n  'G': 71,\n  'H': 72,\n  'I': 73,\n  'J': 74,\n  'K': 75,\n  'L': 76,\n  'M': 77,\n  'N': 78,\n  'O': 79,\n  'P': 80,\n  'Q': 81,\n  'R': 82,\n  'S': 83,\n  'T': 84,\n  'U': 85,\n  'V': 86,\n  'W': 87,\n  'X': 88,\n  'Y': 89,\n  'Z': 90,\n  'ENTER': 13,\n  'SHIFT': 16,\n  'ESC': 27,\n  'SPACE': 32,\n  'LEFT': 37,\n  'UP': 38,\n  'RIGHT': 39,\n  'DOWN': 40,\n  'BACKSPACE': 8,\n  'DELETE': 46,\n  'TAB': 9,\n  'TILDE': 192,\n  'CTRL': 17,\n};\n\n\n/**\n * The transposed version of KEY_MAP.\n *\n * @type {Object.<string>}\n */\nvar TRANSPOSED_KEY_MAP = util.getTranspose(KEY_MAP);\n\n/*!\n * @type Array.<string>\n */\nvar keysDown = [];\n\nvar Key = (function () {\n\n  'use strict';\n\n  /**\n   * Represents a key on the keyboard.  You'll never actually call this method\n   * directly; Key Objects for every key that Keydrown supports are created for\n   * you when the library is initialized (as in, when the file is loaded).  You\n   * will, however, use the `prototype` methods below to bind functions to key\n   * states.\n   *\n   * @param {number} keyCode The keyCode of the key.\n   * @constructor\n   * @class kd.Key\n   */\n  function Key (keyCode) {\n    this.keyCode = keyCode;\n    this.cachedKeypressEvent = null;\n  }\n\n\n  /*!\n   * The function to be invoked on every tick that the key is held down for.\n   *\n   * @type {function}\n   */\n  Key.prototype._downHandler = util.noop;\n\n\n  /*!\n   * The function to be invoked when the key is released.\n   *\n   * @type {function}\n   */\n  Key.prototype._upHandler = util.noop;\n\n\n  /*!\n   * The function to be invoked when the key is pressed.\n   *\n   * @type {function}\n   */\n  Key.prototype._pressHandler = util.noop;\n\n\n  /*!\n   * Private helper function that binds or invokes a hander for `down`, `up',\n   * or `press` for a `Key`.\n   *\n   * @param {Key} key\n   * @param {string} handlerName\n   * @param {function=} opt_handler If omitted, the handler is invoked.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by a\n   * keyboard event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.\n   */\n  function bindOrFire (key, handlerName, opt_handler, opt_evt) {\n    if (opt_handler) {\n      key[handlerName] = opt_handler;\n    } else {\n      key[handlerName](opt_evt);\n    }\n  }\n\n\n  /**\n   * Returns whether the key is currently pressed or not.\n   *\n   * @method isDown\n   * @return {boolean} True if the key is down, otherwise false.\n   */\n  Key.prototype.isDown = function () {\n    return util.indexOf(keysDown, this.keyCode) !== -1;\n  };\n\n\n  /**\n   * Bind a function to be called when the key is held down.\n   *\n   * @method down\n   * @param {function=} opt_handler The function to be called when the key is\n   * held down.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   */\n  Key.prototype.down = function (opt_handler) {\n    bindOrFire(this, '_downHandler', opt_handler, this.cachedKeypressEvent);\n  };\n\n\n  /**\n   * Bind a function to be called when the key is released.\n   *\n   * @method up\n   * @param {function=} opt_handler The function to be called when the key is\n   * released.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\n   * keyup event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.  This should generally not be provided by client code.\n   */\n  Key.prototype.up = function (opt_handler, opt_evt) {\n    bindOrFire(this, '_upHandler', opt_handler, opt_evt);\n  };\n\n\n  /**\n   * Bind a function to be called when the key is pressed.  This handler will\n   * not fire again until the key is released â€” it does not repeat.\n   *\n   * @method press\n   * @param {function=} opt_handler The function to be called once when the key\n   * is pressed.  If omitted, this function invokes whatever handler was\n   * previously bound.\n   * @param {KeyboardEvent=} opt_evt If this function is being called by the\n   * keydown event handler, this is the raw KeyboardEvent Object provided from\n   * the browser.  This should generally not be provided by client code.\n   */\n  Key.prototype.press = function (opt_handler, opt_evt) {\n    this.cachedKeypressEvent = opt_evt;\n    bindOrFire(this, '_pressHandler', opt_handler, opt_evt);\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/down:method\"}}{{/crossLink}}`.\n   * @method unbindDown\n   */\n  Key.prototype.unbindDown = function () {\n    this._downHandler = util.noop;\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/up:method\"}}{{/crossLink}}`.\n   * @method unbindUp\n   */\n  Key.prototype.unbindUp = function () {\n    this._upHandler = util.noop;\n  };\n\n\n  /**\n   * Remove the handler that was bound with `{{#crossLink\n   * \"kd.Key/press:method\"}}{{/crossLink}}`.\n   * @method unbindPress\n   */\n  Key.prototype.unbindPress = function () {\n    this._pressHandler = util.noop;\n  };\n\n  return Key;\n\n}());\n\nvar kd = (function (keysDown) {\n\n  'use strict';\n\n  /**\n   * @class kd\n   */\n  var kd = {};\n  kd.Key = Key;\n\n  var isRunning = false;\n\n  var now = Date.now\n     ? Date.now\n     : function () {return +new Date();};\n\n  var previousUpdateTime = now();\n\n  /**\n   * Evaluate which keys are held down and invoke their handler functions.\n   * @method tick\n   */\n  kd.tick = function () {\n    var i, len = keysDown.length;\n    for (i = 0; i < len; i++) {\n      var keyCode = keysDown[i];\n\n      var keyName = TRANSPOSED_KEY_MAP[keyCode];\n      if (keyName) {\n        kd[keyName].down();\n      }\n    }\n  };\n\n\n  /**\n   * A basic run loop.  `handler` gets called approximately 60 times a second.\n   *\n   * @param {Function(number, number)} handler The callback function to call on\n   * every tick.  You likely want to call [kd.tick](#method_tick) in this\n   * function.  This callback receives the time elapsed since the previous\n   * execution of the callback as the first parameter, and the current time\n   * stamp as the second.\n   * @method run\n   */\n  kd.run = function (handler) {\n    isRunning = true;\n    var currentTime = now();\n    var timeSinceLastUpdate = currentTime - previousUpdateTime;\n\n    util.requestAnimationFrame.call(window, function () {\n      if (!isRunning) {\n        return;\n      }\n\n      kd.run(handler);\n      handler(timeSinceLastUpdate, currentTime);\n    });\n\n    previousUpdateTime = currentTime;\n  };\n\n\n  /**\n   * Cancels the loop created by [run](#method_run).\n   * @method stop\n   */\n  kd.stop = function () {\n    isRunning = false;\n  };\n\n\n  // SETUP\n  //\n\n\n  // Initialize the KEY Objects\n  util.forEach(KEY_MAP, function (keyCode, keyName) {\n    kd[keyName] = new Key(keyCode);\n  });\n\n  util.documentOn('keydown', function (evt) {\n    var keyCode = evt.keyCode;\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\n    var isNew = util.pushUnique(keysDown, keyCode);\n    var key = kd[keyName];\n\n    if (key) {\n      var cachedKeypressEvent = key.cachedKeypressEvent || {};\n\n      // If a modifier key was held down the last time that this button was\n      // pressed, and it is pressed again without the modifier key being\n      // released, it is considered a newly-pressed key.  This is to work\n      // around the fact that the \"keyup\" event does not fire for the modified\n      // key until the modifier button is also released, which poses a problem\n      // for repeated, modified key presses such as hitting ctrl/meta+Z for\n      // rapid \"undo\" actions.\n      if (cachedKeypressEvent.ctrlKey ||\n          cachedKeypressEvent.shiftKey ||\n          cachedKeypressEvent.metaKey) {\n        isNew = true;\n      }\n\n      if (isNew) {\n        key.press(null, evt);\n      }\n    }\n  });\n\n  util.documentOn('keyup', function (evt) {\n    var keyCode = util.removeValue(keysDown, evt.keyCode);\n\n    var keyName = TRANSPOSED_KEY_MAP[keyCode];\n    if (keyName) {\n      kd[keyName].up(null, evt);\n    }\n  });\n\n  // Stop firing the \"down\" handlers if the user loses focus of the browser\n  // window.\n  util.documentOn('blur', function (evt) {\n    // Fire the \"up\" handler for each key that is currently held down\n    util.forEach(keysDown, function (keyCode) {\n      var mappedKey = TRANSPOSED_KEY_MAP[keyCode];\n      if (mappedKey) {\n        kd[mappedKey].up();\n      }\n    });\n\n    keysDown.length = 0;\n  });\n\n\n  return kd;\n\n // The variables passed into the closure here are defined in kd.key.js.\n}(keysDown));\n\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\n  // Keydrown was loaded as a CommonJS module (by Browserify, for example).\n  module.exports = kd;\n} else if (typeof define === \"function\" && define.amd) {\n  // Keydrown was loaded as an AMD module.\n  define(function () {\n    return kd;\n  });\n} else {\n  window.kd = kd;\n}\n\n} (window));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}