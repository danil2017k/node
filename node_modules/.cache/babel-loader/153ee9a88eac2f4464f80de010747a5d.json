{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst CharacterData = require(\"./CharacterData.js\");\n\nconst interfaceName = \"Text\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (globalObject, value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(`${context} is not of type 'Text'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"Text\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  CharacterData._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  class Text extends globalObject.CharacterData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to construct 'Text': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = \"\";\n        }\n\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    splitText(offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'splitText' called on an object that is not a valid instance of Text.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'splitText' on 'Text': 1 argument required, but only ${arguments.length} present.`);\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'splitText' on 'Text': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].splitText(...args));\n    }\n\n    get wholeText() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get wholeText' called on an object that is not a valid instance of Text.\");\n      }\n\n      return esValue[implSymbol][\"wholeText\"];\n    }\n\n    get assignedSlot() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get assignedSlot' called on an object that is not a valid instance of Text.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"assignedSlot\"]);\n    }\n\n  }\n\n  Object.defineProperties(Text.prototype, {\n    splitText: {\n      enumerable: true\n    },\n    wholeText: {\n      enumerable: true\n    },\n    assignedSlot: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"Text\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = Text;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Text\n  });\n};\n\nconst Impl = require(\"../nodes/Text-impl.js\");","map":{"version":3,"names":["conversions","require","utils","implSymbol","ctorRegistrySymbol","CharacterData","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","implForWrapper","TypeError","makeWrapper","newTarget","proto","undefined","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","Text","constructor","args","curArg","arguments","globals","push","target","splitText","offset","esValue","length","tryWrapperForImpl","wholeText","assignedSlot","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["C:/Users/Danil/Desktop/122/node_modules/jsdom/lib/jsdom/living/generated/Text.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nconst interfaceName = \"Text\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'Text'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"Text\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  CharacterData._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class Text extends globalObject.CharacterData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to construct 'Text': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    splitText(offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'splitText' called on an object that is not a valid instance of Text.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'splitText' on 'Text': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'splitText' on 'Text': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].splitText(...args));\n    }\n\n    get wholeText() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get wholeText' called on an object that is not a valid instance of Text.\");\n      }\n\n      return esValue[implSymbol][\"wholeText\"];\n    }\n\n    get assignedSlot() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get assignedSlot' called on an object that is not a valid instance of Text.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"assignedSlot\"]);\n    }\n  }\n  Object.defineProperties(Text.prototype, {\n    splitText: { enumerable: true },\n    wholeText: { enumerable: true },\n    assignedSlot: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"Text\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = Text;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Text\n  });\n};\n\nconst Impl = require(\"../nodes/Text-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}