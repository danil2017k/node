{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n//.CommonJS\nvar CSSOM = {\n  CSSRule: require(\"./CSSRule\").CSSRule\n}; ///CommonJS\n\n/**\n * @constructor\n * @see https://drafts.csswg.org/cssom/#the-cssgroupingrule-interface\n */\n\nCSSOM.CSSGroupingRule = function CSSGroupingRule() {\n  CSSOM.CSSRule.call(this);\n  this.cssRules = [];\n};\n\nCSSOM.CSSGroupingRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSGroupingRule.prototype.constructor = CSSOM.CSSGroupingRule;\n/**\n * Used to insert a new CSS rule to a list of CSS rules.\n *\n * @example\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *   cssGroupingRule.insertRule(\"img{border:none;}\", 1)\n *   -> 1\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}img{border:none;}\"\n *\n * @param {string} rule\n * @param {number} [index]\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-insertrule\n * @return {number} The index within the grouping rule's collection of the newly inserted rule.\n */\n\nCSSOM.CSSGroupingRule.prototype.insertRule = function insertRule(rule, index) {\n  if (index < 0 || index > this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n\n  var cssRule = CSSOM.parse(rule).cssRules[0];\n  cssRule.parentRule = this;\n  this.cssRules.splice(index, 0, cssRule);\n  return index;\n};\n/**\n * Used to delete a rule from the grouping rule.\n *\n *   cssGroupingRule.cssText\n *   -> \"img{border:none;}body{margin:0;}\"\n *   cssGroupingRule.deleteRule(0)\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the grouping rule's rule list of the rule to remove.\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-deleterule\n */\n\n\nCSSOM.CSSGroupingRule.prototype.deleteRule = function deleteRule(index) {\n  if (index < 0 || index >= this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n\n  this.cssRules.splice(index, 1)[0].parentRule = null;\n}; //.CommonJS\n\n\nexports.CSSGroupingRule = CSSOM.CSSGroupingRule; ///CommonJS","map":{"version":3,"names":["CSSOM","CSSRule","require","CSSGroupingRule","call","cssRules","prototype","constructor","insertRule","rule","index","length","RangeError","cssRule","parse","parentRule","splice","deleteRule","exports"],"sources":["C:/Users/Danil/Desktop/122/node_modules/cssom/lib/CSSGroupingRule.js"],"sourcesContent":["//.CommonJS\nvar CSSOM = {\n\tCSSRule: require(\"./CSSRule\").CSSRule\n};\n///CommonJS\n\n\n/**\n * @constructor\n * @see https://drafts.csswg.org/cssom/#the-cssgroupingrule-interface\n */\nCSSOM.CSSGroupingRule = function CSSGroupingRule() {\n\tCSSOM.CSSRule.call(this);\n\tthis.cssRules = [];\n};\n\nCSSOM.CSSGroupingRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSGroupingRule.prototype.constructor = CSSOM.CSSGroupingRule;\n\n\n/**\n * Used to insert a new CSS rule to a list of CSS rules.\n *\n * @example\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *   cssGroupingRule.insertRule(\"img{border:none;}\", 1)\n *   -> 1\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}img{border:none;}\"\n *\n * @param {string} rule\n * @param {number} [index]\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-insertrule\n * @return {number} The index within the grouping rule's collection of the newly inserted rule.\n */\n CSSOM.CSSGroupingRule.prototype.insertRule = function insertRule(rule, index) {\n\tif (index < 0 || index > this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tvar cssRule = CSSOM.parse(rule).cssRules[0];\n\tcssRule.parentRule = this;\n\tthis.cssRules.splice(index, 0, cssRule);\n\treturn index;\n};\n\n/**\n * Used to delete a rule from the grouping rule.\n *\n *   cssGroupingRule.cssText\n *   -> \"img{border:none;}body{margin:0;}\"\n *   cssGroupingRule.deleteRule(0)\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the grouping rule's rule list of the rule to remove.\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-deleterule\n */\n CSSOM.CSSGroupingRule.prototype.deleteRule = function deleteRule(index) {\n\tif (index < 0 || index >= this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tthis.cssRules.splice(index, 1)[0].parentRule = null;\n};\n\n//.CommonJS\nexports.CSSGroupingRule = CSSOM.CSSGroupingRule;\n///CommonJS\n"],"mappings":";;AAAA;AACA,IAAIA,KAAK,GAAG;EACXC,OAAO,EAAEC,OAAO,CAAC,WAAD,CAAP,CAAqBD;AADnB,CAAZ,C,CAGA;;AAGA;AACA;AACA;AACA;;AACAD,KAAK,CAACG,eAAN,GAAwB,SAASA,eAAT,GAA2B;EAClDH,KAAK,CAACC,OAAN,CAAcG,IAAd,CAAmB,IAAnB;EACA,KAAKC,QAAL,GAAgB,EAAhB;AACA,CAHD;;AAKAL,KAAK,CAACG,eAAN,CAAsBG,SAAtB,GAAkC,IAAIN,KAAK,CAACC,OAAV,EAAlC;AACAD,KAAK,CAACG,eAAN,CAAsBG,SAAtB,CAAgCC,WAAhC,GAA8CP,KAAK,CAACG,eAApD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACCH,KAAK,CAACG,eAAN,CAAsBG,SAAtB,CAAgCE,UAAhC,GAA6C,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;EAC9E,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,KAAKL,QAAL,CAAcM,MAAvC,EAA+C;IAC9C,MAAM,IAAIC,UAAJ,CAAe,gBAAf,CAAN;EACA;;EACD,IAAIC,OAAO,GAAGb,KAAK,CAACc,KAAN,CAAYL,IAAZ,EAAkBJ,QAAlB,CAA2B,CAA3B,CAAd;EACAQ,OAAO,CAACE,UAAR,GAAqB,IAArB;EACA,KAAKV,QAAL,CAAcW,MAAd,CAAqBN,KAArB,EAA4B,CAA5B,EAA+BG,OAA/B;EACA,OAAOH,KAAP;AACA,CARA;AAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCV,KAAK,CAACG,eAAN,CAAsBG,SAAtB,CAAgCW,UAAhC,GAA6C,SAASA,UAAT,CAAoBP,KAApB,EAA2B;EACxE,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,KAAKL,QAAL,CAAcM,MAAxC,EAAgD;IAC/C,MAAM,IAAIC,UAAJ,CAAe,gBAAf,CAAN;EACA;;EACD,KAAKP,QAAL,CAAcW,MAAd,CAAqBN,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkCK,UAAlC,GAA+C,IAA/C;AACA,CALA,C,CAOD;;;AACAG,OAAO,CAACf,eAAR,GAA0BH,KAAK,CAACG,eAAhC,C,CACA"},"metadata":{},"sourceType":"script"}